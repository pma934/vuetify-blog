[
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9430",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9430/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9430/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9430/events",
      "html_url": "https://github.com/vuejs/vue/pull/9430",
      "id": 406900140,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjUwNDk0MzM2",
      "number": 9430,
      "title": "feat: add origin prop for <transition-group>, fix #8424",
      "user": {
        "login": "Justineo",
        "id": 1726061,
        "node_id": "MDQ6VXNlcjE3MjYwNjE=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1726061?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Justineo",
        "html_url": "https://github.com/Justineo",
        "followers_url": "https://api.github.com/users/Justineo/followers",
        "following_url": "https://api.github.com/users/Justineo/following{/other_user}",
        "gists_url": "https://api.github.com/users/Justineo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Justineo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Justineo/subscriptions",
        "organizations_url": "https://api.github.com/users/Justineo/orgs",
        "repos_url": "https://api.github.com/users/Justineo/repos",
        "events_url": "https://api.github.com/users/Justineo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Justineo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 777055905,
          "node_id": "MDU6TGFiZWw3NzcwNTU5MDU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/semver:minor",
          "name": "semver:minor",
          "color": "ade575",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-02-05T17:46:09Z",
      "updated_at": "2019-04-29T06:17:36Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9430",
        "html_url": "https://github.com/vuejs/vue/pull/9430",
        "diff_url": "https://github.com/vuejs/vue/pull/9430.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9430.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\nAs described in #8424, `<transition-group>` now records the items' position relative to the viewport (via `getBoundingClientRect()`). While page scroll happens just before the items start to perform transition, it will look like that they are flashed out of the container and slowly move to their original position.\r\n\r\nThis PR added a new prop: `origin` for `<transition-group>`, which is a `string` value that indicates how we are gonna calculate the position of transition items. Available values are `viewport` (the current behavior) and `document`. When set to `document`, the position of the items are always calculated relative to the top left corner of the document element, which will retain their position in the document when page scroll occurs.\r\n\r\n**Other information:**\r\n\r\nHere is a show case of this PR: https://codepen.io/Justineo/project/editor/XxEKgb\r\n\r\nScroll to the bottom and click `-` to see the transition."
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9427",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9427/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9427/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9427/events",
      "html_url": "https://github.com/vuejs/vue/issues/9427",
      "id": 406765534,
      "node_id": "MDU6SXNzdWU0MDY3NjU1MzQ=",
      "number": 9427,
      "title": "Integration: using HTMLTemplateElement inside CustomElements",
      "user": {
        "login": "riovir",
        "id": 1823001,
        "node_id": "MDQ6VXNlcjE4MjMwMDE=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1823001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riovir",
        "html_url": "https://github.com/riovir",
        "followers_url": "https://api.github.com/users/riovir/followers",
        "following_url": "https://api.github.com/users/riovir/following{/other_user}",
        "gists_url": "https://api.github.com/users/riovir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/riovir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/riovir/subscriptions",
        "organizations_url": "https://api.github.com/users/riovir/orgs",
        "repos_url": "https://api.github.com/users/riovir/repos",
        "events_url": "https://api.github.com/users/riovir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/riovir/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-02-05T12:43:57Z",
      "updated_at": "2019-02-05T12:43:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nConveniently using `Custom Elements` that require both prop bindings and `HTMLTemplateElement`s together with Vue templates.\r\n\r\nRelated fixed bug: https://github.com/vuejs/vue/issues/8041\r\n\r\nThe fix unfortunately doesn't allow the parent of the `HTMLTemplateElement` to retain its prop bindings with Vue.\r\n\r\nThe use case is similar to the `scoped slot` feature of Vue, but with `Custom Element`s. It's clear that without a special directive Vue will not assume the `<template>` is expected to be a `HTMLTemplateElement`.\r\n\r\n# Assumptions:\r\n* Using `v-pre` on the parent breaks prop bindings\r\n* Using `v-pre` on the child template still makes Vue skip rendering the `<template>` element\r\n* This behavior of `v-pre` is intended\r\n\r\n# JsFiddle:\r\nAttempts at the problem and desired solution. https://jsfiddle.net/qhkb6sof/2/\r\n\r\n### What does the proposed API look like?\r\nThe `v-native` directive, marking a tag to be rendered as the native DOM element of the same name.\r\n\r\nSince there is a [proposal](https://scotch.io/bar-talk/an-overview-of-the-most-exciting-proposals-for-the-web-platform-related-to-web-components#toc-template-instantiation-with-substituted-values) on the way to allow mustache-style expressions inside `HTMLTemplateElement`s `v-pre` might still be needed to avoid Vue interpreting the internals.\r\n\r\nOnly using the already present `v-pre` would be nice, but I'm unsure how much of the already established behavior it would break.\r\n\r\n```html\r\n<x-filtered-list :items.prop=\"['one', 'two', 'three']\" search=\"t\">\r\n  <!-- The template is intended to represent the \"native\" HTMLTemplateElement, which needs to be rendered -->\r\n  <template v-native v-pre>\r\n    <!-- The expression below expected to be ignored by Vue and rendered as is  -->\r\n    <li>{{text}}</li>\r\n  </template>\r\n</x-filtered-list>\r\n```\r\n\r\nThe resulting DOM should look like this in inspection:\r\n```HTML\r\n<x-filtered-list search=\"t\">\r\n  <template>\r\n    #document-fragment\r\n      <li>{{text}}</li>\r\n  </template>\r\n</x-filtered-list>\r\n```\r\n\r\nIdeally `<li>{{text}}</li>` ends up in the `#document-fragment`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9406",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9406/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9406/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9406/events",
      "html_url": "https://github.com/vuejs/vue/issues/9406",
      "id": 405815703,
      "node_id": "MDU6SXNzdWU0MDU4MTU3MDM=",
      "number": 9406,
      "title": "On SSR, script tag escaped",
      "user": {
        "login": "sleewoo",
        "id": 9264860,
        "node_id": "MDQ6VXNlcjkyNjQ4NjA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/9264860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sleewoo",
        "html_url": "https://github.com/sleewoo",
        "followers_url": "https://api.github.com/users/sleewoo/followers",
        "following_url": "https://api.github.com/users/sleewoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/sleewoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sleewoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sleewoo/subscriptions",
        "organizations_url": "https://api.github.com/users/sleewoo/orgs",
        "repos_url": "https://api.github.com/users/sleewoo/repos",
        "events_url": "https://api.github.com/users/sleewoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sleewoo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2019-02-01T18:14:08Z",
      "updated_at": "2019-02-04T08:38:02Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kx35l39lkv](https://codesandbox.io/s/kx35l39lkv)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen tab Console\r\n\r\n### What is expected?\r\n```html\r\n<script data-server-rendered=\"true\">\r\n            var a = 'a';\r\n            var x = \"x\";\r\n            if (a && x) {}\r\n            if (a > x) {}\r\n            if (a < x) {}\r\n          </script> \r\n```\r\n\r\n### What is actually happening?\r\n```html\r\n<script data-server-rendered=\"true\">\r\n            var a = 'a';\r\n            var x = &quot;x&quot;;\r\n            if (a &amp;&amp; x) {}\r\n            if (a &gt; x) {}\r\n            if (a &lt; x) {}\r\n          </script> \r\n```\r\n\r\n---\r\nThere are no restrictions on rendering `script` tags on the server\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9403",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9403/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9403/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9403/events",
      "html_url": "https://github.com/vuejs/vue/pull/9403",
      "id": 405460987,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ5NDE3NTYz",
      "number": 9403,
      "title": "chore: add `repository.directory` field to each `package.json`",
      "user": {
        "login": "visualfanatic",
        "id": 920747,
        "node_id": "MDQ6VXNlcjkyMDc0Nw==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/920747?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/visualfanatic",
        "html_url": "https://github.com/visualfanatic",
        "followers_url": "https://api.github.com/users/visualfanatic/followers",
        "following_url": "https://api.github.com/users/visualfanatic/following{/other_user}",
        "gists_url": "https://api.github.com/users/visualfanatic/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/visualfanatic/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/visualfanatic/subscriptions",
        "organizations_url": "https://api.github.com/users/visualfanatic/orgs",
        "repos_url": "https://api.github.com/users/visualfanatic/repos",
        "events_url": "https://api.github.com/users/visualfanatic/events{/privacy}",
        "received_events_url": "https://api.github.com/users/visualfanatic/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-01-31T22:04:11Z",
      "updated_at": "2019-02-21T19:00:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9403",
        "html_url": "https://github.com/vuejs/vue/pull/9403",
        "diff_url": "https://github.com/vuejs/vue/pull/9403.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9403.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nI created a similar PR in `vue-cli` repo, so I will just copy&paste my comment here:\r\n> This field allows you specify path of each package in a monorepo thanks to [this npm RFC](https://github.com/npm/rfcs/blob/latest/accepted/0010-monorepo-subdirectory-declaration.md). Main benefit of providing this field is a more accurate link to the package's source code from its npmjs.com page.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9379",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9379/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9379/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9379/events",
      "html_url": "https://github.com/vuejs/vue/pull/9379",
      "id": 403554530,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ3OTU1ODcy",
      "number": 9379,
      "title": "feat(types): expose ElementAttributesProperty for TSX",
      "user": {
        "login": "andoshin11",
        "id": 8381075,
        "node_id": "MDQ6VXNlcjgzODEwNzU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8381075?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andoshin11",
        "html_url": "https://github.com/andoshin11",
        "followers_url": "https://api.github.com/users/andoshin11/followers",
        "following_url": "https://api.github.com/users/andoshin11/following{/other_user}",
        "gists_url": "https://api.github.com/users/andoshin11/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andoshin11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andoshin11/subscriptions",
        "organizations_url": "https://api.github.com/users/andoshin11/orgs",
        "repos_url": "https://api.github.com/users/andoshin11/repos",
        "events_url": "https://api.github.com/users/andoshin11/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andoshin11/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 777055905,
          "node_id": "MDU6TGFiZWw3NzcwNTU5MDU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/semver:minor",
          "name": "semver:minor",
          "color": "ade575",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2019-01-27T14:05:44Z",
      "updated_at": "2019-03-21T19:41:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9379",
        "html_url": "https://github.com/vuejs/vue/pull/9379",
        "diff_url": "https://github.com/vuejs/vue/pull/9379.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9379.patch"
      },
      "body": "**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n# Descriptions\r\nWith current type definitions, it's extremely difficult for developers to pass props to children components when writing TSX since there's no exposed property that JSX can handle as element attributes properties.\r\n\r\n![2019-01-27 22 45 39](https://user-images.githubusercontent.com/8381075/51801762-4e3b1380-2285-11e9-8262-18136c6afbe1.png)\r\n \r\nThis PullRequest achieves 2 things.\r\n- Creates new property `_attrs` to the `ExtendedVue` type so it can be used inside `JSX.ElementAttributesProperty`.(Examples are below)\r\n- Transform non-required props into optional properties of `props` interface.\r\n\r\n## Example\r\n\r\nGiven these 2 children components...\r\n\r\n```js\r\n// PrimaryButton.tsx\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'Primary Button',\r\n  props: {\r\n    label: {\r\n      type: String,\r\n      required: true as true\r\n    },\r\n    color: String\r\n  },\r\n  computed: {\r\n    style(): string {\r\n      return `color: ${this.color || 'blue'};`\r\n    }\r\n  },\r\n  render() {\r\n    return <button style={this.style}>{this.label}</button>\r\n  }\r\n})\r\n```\r\n\r\n```js\r\n// SecondaryButton.tsx\r\nimport Vue from 'vue'\r\n\r\nexport default Vue.extend({\r\n  name: 'Secondary Button',\r\n  props: ['color', 'label'],\r\n  computed: {\r\n    style(): string {\r\n      return `color: ${this.color || 'blue'};`\r\n    }\r\n  },\r\n  render() {\r\n    return <button style={this.style}>{this.label}</button>\r\n  }\r\n})\r\n```\r\n\r\nand prepare `shims-tsx.d.ts` like this\r\n\r\n```js\r\n// shims-tsx.d.ts\r\nimport Vue, { VNode } from 'vue'\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    interface Element extends VNode {}\r\n    interface ElementClass extends Vue {}\r\n    interface ElementAttributesProperty {\r\n      _attrs: any\r\n    }\r\n    interface IntrinsicElements {\r\n      [elem: string]: any\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nProperty completion works as expected.\r\n\r\n![2019-01-27 22 55 58](https://user-images.githubusercontent.com/8381075/51801907-2e0c5400-2287-11e9-95db-6d99dfa59ddb.png)\r\n\r\nType error warned as expected.\r\n\r\n![2019-01-27 22 56 15](https://user-images.githubusercontent.com/8381075/51801908-2e0c5400-2287-11e9-8953-9f0357920edb.png)\r\n\r\nand no more errors with correct props declaration 👍 \r\n\r\n![2019-01-27 23 00 09](https://user-images.githubusercontent.com/8381075/51801914-52683080-2287-11e9-8b29-31700b54c77f.png)\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9372",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9372/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9372/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9372/events",
      "html_url": "https://github.com/vuejs/vue/issues/9372",
      "id": 403400014,
      "node_id": "MDU6SXNzdWU0MDM0MDAwMTQ=",
      "number": 9372,
      "title": "Types of FunctionalComponentOptions breaks",
      "user": {
        "login": "meteorlxy",
        "id": 18205362,
        "node_id": "MDQ6VXNlcjE4MjA1MzYy",
        "avatar_url": "https://avatars3.githubusercontent.com/u/18205362?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meteorlxy",
        "html_url": "https://github.com/meteorlxy",
        "followers_url": "https://api.github.com/users/meteorlxy/followers",
        "following_url": "https://api.github.com/users/meteorlxy/following{/other_user}",
        "gists_url": "https://api.github.com/users/meteorlxy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/meteorlxy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/meteorlxy/subscriptions",
        "organizations_url": "https://api.github.com/users/meteorlxy/orgs",
        "repos_url": "https://api.github.com/users/meteorlxy/repos",
        "events_url": "https://api.github.com/users/meteorlxy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/meteorlxy/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        },
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-01-26T03:24:22Z",
      "updated_at": "2019-01-29T14:31:27Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n\r\nvue: 2.5.22\r\n\r\ntypescript: 3.2.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/meteorlxy/9x2ts16a/1/](https://jsfiddle.net/meteorlxy/9x2ts16a/1/)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```ts\r\n// works with vue 2.5.17\r\n// fails with vue 2.5.18+\r\nimport Vue, { FunctionalComponentOptions } from 'vue'\r\n\r\nconst testFunctionalOptions: FunctionalComponentOptions = {\r\n  functional: true,\r\n}\r\n\r\nVue.component('Test', testFunctionalOptions)\r\n```\r\n\r\n### What is expected?\r\nNo types error as in v2.5.17\r\n\r\n### What is actually happening?\r\n```sh\r\nerror TS2345: Argument of type 'FunctionalComponentOptions<Record<string, any>, PropsDefinition<Record<string, any>>>' is not assignable to parameter of type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Record<string, any>>, Record<string, any>>'.\r\n  Types of property 'render' are incompatible.\r\n    Type '(this: undefined, createElement: CreateElement, context: RenderContext<Record<string, any>>) => VNode | VNode[]' is not assignable to type '(createElement: CreateElement, hack: RenderContext<Record<string,\r\nany>>) => VNode'.\r\n      Type 'VNode | VNode[]' is not assignable to type 'VNode'.\r\n        Type 'VNode[]' is missing the following properties from type 'VNode': isRootInsert, isComment\r\n```\r\n\r\n### PS\r\n\r\nIt seems to be introduced here:\r\n\r\nhttps://github.com/vuejs/vue/commit/bf2e2ed159f680cd4e230427ce94739c657c1b61#diff-23d7799dcc9e9be419d28a15348b0d99R116\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9369",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9369/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9369/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9369/events",
      "html_url": "https://github.com/vuejs/vue/pull/9369",
      "id": 403088059,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ3NjIxNTYy",
      "number": 9369,
      "title": "feat(types): add DOM type definition for JSX element",
      "user": {
        "login": "andoshin11",
        "id": 8381075,
        "node_id": "MDQ6VXNlcjgzODEwNzU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8381075?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andoshin11",
        "html_url": "https://github.com/andoshin11",
        "followers_url": "https://api.github.com/users/andoshin11/followers",
        "following_url": "https://api.github.com/users/andoshin11/following{/other_user}",
        "gists_url": "https://api.github.com/users/andoshin11/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andoshin11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andoshin11/subscriptions",
        "organizations_url": "https://api.github.com/users/andoshin11/orgs",
        "repos_url": "https://api.github.com/users/andoshin11/repos",
        "events_url": "https://api.github.com/users/andoshin11/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andoshin11/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 777055905,
          "node_id": "MDU6TGFiZWw3NzcwNTU5MDU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/semver:minor",
          "name": "semver:minor",
          "color": "ade575",
          "default": false
        },
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-01-25T10:08:52Z",
      "updated_at": "2019-03-11T02:55:33Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9369",
        "html_url": "https://github.com/vuejs/vue/pull/9369",
        "diff_url": "https://github.com/vuejs/vue/pull/9369.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9369.patch"
      },
      "body": "**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n# Descriptions\r\n- Inspired by [vue-tsx-support](https://github.com/wonderful-panda/vue-tsx-support) by @wonderful-panda who was also inspired by [@types/react](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react/v15)\r\n- This PR is not aiming for perfection. I'd love to hear feedbacks from Vue core team as this is my very first PR.\r\n\r\nBy providing officially maintained HTML Attributes Types, developers can get a huge benefit when they are writing TSX.\r\n\r\n![2019-01-25 19 04 08](https://user-images.githubusercontent.com/8381075/51739106-07f28280-20d4-11e9-849f-ce708eef0765.png)\r\n\r\nAll you need is just a few tweaks on `shims-tsx.d.ts`\r\n\r\n```js\r\n// shims-tsx.d.ts\r\nimport Vue, { VNode, VIntrinsicElementAttributes } from 'vue'\r\n\r\ndeclare global {\r\n  namespace JSX {\r\n    // tslint:disable no-empty-interface\r\n    interface Element extends VNode {}\r\n    // tslint:disable no-empty-interface\r\n    interface ElementClass extends Vue {}\r\n    interface IntrinsicElements extends VIntrinsicElementAttributes {\r\n      [elem: string]: any\r\n    }\r\n  }\r\n}\r\n```"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9363",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9363/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9363/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9363/events",
      "html_url": "https://github.com/vuejs/vue/issues/9363",
      "id": 402597541,
      "node_id": "MDU6SXNzdWU0MDI1OTc1NDE=",
      "number": 9363,
      "title": "transition-group replacing group flicker",
      "user": {
        "login": "phouri",
        "id": 5173410,
        "node_id": "MDQ6VXNlcjUxNzM0MTA=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5173410?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/phouri",
        "html_url": "https://github.com/phouri",
        "followers_url": "https://api.github.com/users/phouri/followers",
        "following_url": "https://api.github.com/users/phouri/following{/other_user}",
        "gists_url": "https://api.github.com/users/phouri/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/phouri/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/phouri/subscriptions",
        "organizations_url": "https://api.github.com/users/phouri/orgs",
        "repos_url": "https://api.github.com/users/phouri/repos",
        "events_url": "https://api.github.com/users/phouri/events{/privacy}",
        "received_events_url": "https://api.github.com/users/phouri/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2019-01-24T08:42:13Z",
      "updated_at": "2019-05-20T05:55:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/y3910wr9j9](https://codesandbox.io/s/y3910wr9j9)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the change button in the link, no matter if animation is on or off (changing the animation name) - there is a brief flicker where both groups are present. \r\n\r\nThis is barely visible in this scenario, but on a full page and more rows it's a lot more visible.\r\n(Might need to click multiple times to notice) \r\n\r\n### What is expected?\r\nGroups would transition \"atomically\" without having a moment where both groups are present\r\n\r\n### What is actually happening?\r\nBoth groups are present for a moment \r\n\r\n---\r\nThe only way to solve this is to remove the the transition-group component completely, not even changing the name of the transition to null or something that doesn't match works.\r\n\r\nHappened when I was working on a data table and was using the move transition for sorting, and then when replacing rows completely I saw this flicker and couldn't get around it easily.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9358",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9358/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9358/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9358/events",
      "html_url": "https://github.com/vuejs/vue/pull/9358",
      "id": 402151085,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2ODk4NzU4",
      "number": 9358,
      "title": "feat(props): allow defining a required prop as null",
      "user": {
        "login": "posva",
        "id": 664177,
        "node_id": "MDQ6VXNlcjY2NDE3Nw==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/664177?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/posva",
        "html_url": "https://github.com/posva",
        "followers_url": "https://api.github.com/users/posva/followers",
        "following_url": "https://api.github.com/users/posva/following{/other_user}",
        "gists_url": "https://api.github.com/users/posva/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/posva/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/posva/subscriptions",
        "organizations_url": "https://api.github.com/users/posva/orgs",
        "repos_url": "https://api.github.com/users/posva/repos",
        "events_url": "https://api.github.com/users/posva/events{/privacy}",
        "received_events_url": "https://api.github.com/users/posva/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false
        },
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        },
        {
          "id": 777055905,
          "node_id": "MDU6TGFiZWw3NzcwNTU5MDU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/semver:minor",
          "name": "semver:minor",
          "color": "ade575",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-01-23T09:43:35Z",
      "updated_at": "2019-03-11T02:55:33Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9358",
        "html_url": "https://github.com/vuejs/vue/pull/9358",
        "diff_url": "https://github.com/vuejs/vue/pull/9358.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9358.patch"
      },
      "body": "Based on #1961. It wasn't possible to specify a required prop of type object and pass null as the\r\nvalue\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThe tests cases reflect what I'm trying to fix. I remember this was pointed out multiple times in the past. We cannot explicitely pass a `null` prop when the type is `Object` and the prop is required. This would keep current behaviour but allow having the type `null` for explicit null values. I want to add more tests and maybe refactor but I remember this was problematic as it could break some validation, so I would like so feedback about types you may use that would break with this"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9357",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9357/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9357/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9357/events",
      "html_url": "https://github.com/vuejs/vue/issues/9357",
      "id": 401968802,
      "node_id": "MDU6SXNzdWU0MDE5Njg4MDI=",
      "number": 9357,
      "title": "Function-type props broken in TypeScript",
      "user": {
        "login": "kjleitz",
        "id": 18669659,
        "node_id": "MDQ6VXNlcjE4NjY5NjU5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/18669659?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kjleitz",
        "html_url": "https://github.com/kjleitz",
        "followers_url": "https://api.github.com/users/kjleitz/followers",
        "following_url": "https://api.github.com/users/kjleitz/following{/other_user}",
        "gists_url": "https://api.github.com/users/kjleitz/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kjleitz/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kjleitz/subscriptions",
        "organizations_url": "https://api.github.com/users/kjleitz/orgs",
        "repos_url": "https://api.github.com/users/kjleitz/repos",
        "events_url": "https://api.github.com/users/kjleitz/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kjleitz/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 13,
      "created_at": "2019-01-22T21:48:26Z",
      "updated_at": "2019-04-23T07:14:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/keegan_openbay/gehkx7pf/10/](https://jsfiddle.net/keegan_openbay/gehkx7pf/10/)  \r\n[https://jsfiddle.net/keegan_openbay/018rs3ae/11/](https://jsfiddle.net/keegan_openbay/018rs3ae/11/)\r\n\r\n(More explanation in the fiddle, but keep in mind that JSFiddle doesn't show TS errors)\r\n\r\n### Steps to reproduce\r\n1. Declare a prop of type `Function`, and with a default function that returns some value; e.g.,\r\n\r\n```ts\r\n// ...\r\n  props: {\r\n    fooFn: {\r\n      type: Function,\r\n      default: () => true,\r\n    },\r\n  },\r\n// ...\r\n```\r\n\r\n2. Try to use that function elsewhere in your component options; e.g.,\r\n\r\n```ts\r\n// ...\r\n  methods: {\r\n    useFooFn(): void {\r\n      const bar = this.fooFn();\r\n      // ...\r\n    },\r\n  },\r\n// ...\r\n```\r\n\r\n### What is expected?\r\n```ts\r\ntype FooFn = typeof this.fooFn; // Function\r\nthis.fooFn(); // no errors\r\n```\r\n\r\n### What is actually happening?\r\n```ts\r\ntype FooFn = typeof this.fooFn; // boolean | Function\r\nthis.fooFn();\r\n// Cannot invoke an expression whose type lacks a call signature.\r\n// Type 'boolean | Function' has no compatible call signatures.\r\n```\r\n\r\n---\r\nVue version: 2.5.22\r\nTypeScript version: 3.0.3\r\n\r\ntsconfig.json:\r\n\r\n```json\r\n{\r\n  \"compilerOptions\": {\r\n    \"declaration\": false,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"lib\": [\"es7\", \"dom\"],\r\n    \"module\": \"es2015\",\r\n    \"moduleResolution\": \"node\",\r\n    \"sourceMap\": true,\r\n    \"target\": \"es5\",\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"esModuleInterop\": true,\r\n    \"baseUrl\": \"./app/javascript\",\r\n    \"noImplicitThis\": true\r\n  },\r\n  \"include\": [\r\n    \"app/javascript/**/*.ts\",\r\n    \"app/javascript/**/*.tsx\",\r\n    \"app/javascript/**/*.vue\"\r\n  ],\r\n  \"exclude\": [\r\n    \"**/*.spec.ts\",\r\n    \"node_modules\"\r\n  ],\r\n  \"compileOnSave\": false\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9355",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9355/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9355/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9355/events",
      "html_url": "https://github.com/vuejs/vue/issues/9355",
      "id": 401664466,
      "node_id": "MDU6SXNzdWU0MDE2NjQ0NjY=",
      "number": 9355,
      "title": "Inconsistent Vue.set() and Vue.delete() TypeScript types",
      "user": {
        "login": "zlumer",
        "id": 1829671,
        "node_id": "MDQ6VXNlcjE4Mjk2NzE=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1829671?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zlumer",
        "html_url": "https://github.com/zlumer",
        "followers_url": "https://api.github.com/users/zlumer/followers",
        "following_url": "https://api.github.com/users/zlumer/following{/other_user}",
        "gists_url": "https://api.github.com/users/zlumer/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/zlumer/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zlumer/subscriptions",
        "organizations_url": "https://api.github.com/users/zlumer/orgs",
        "repos_url": "https://api.github.com/users/zlumer/repos",
        "events_url": "https://api.github.com/users/zlumer/events{/privacy}",
        "received_events_url": "https://api.github.com/users/zlumer/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-01-22T09:11:28Z",
      "updated_at": "2019-01-22T10:05:27Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://bit.ly/2W6bvIu](https://bit.ly/2W6bvIu)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Make sure you have `strict: true` in your `tsconfig.json` to handle all type mismatch cases.\r\n2. Run TypeScript compiler against provided code.\r\n\r\n### What is expected?\r\nVue mimics TypeScript behaviour, triggers compiler errors on not allowed operations.\r\n\r\n### What is actually happening?\r\nVue doesn't trigger any compilation errors.\r\n\r\n---\r\nAs discussed in #9347 and #9353, TypeScript typings for `Vue.set()` and `Vue.delete()` are not consistent with TypeScript behavior.\r\nWhile TypeScript helps catch bugs at compile time with its type system, Vue breaks certain TypeScript rules due to incomplete type definitions in `vue.d.ts`\r\n\r\nI propose changing `Vue.set()`/`Vue.delete()` typings to the following:\r\n```typescript\r\nset<T, K extends keyof T>(object: T, key: K, value: T[K]): T[K];\r\ndelete<T>(object: T, key: keyof T): void;\r\n```\r\nThis will match TypeScript behaviour on provided examples.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9335",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9335/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9335/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9335/events",
      "html_url": "https://github.com/vuejs/vue/pull/9335",
      "id": 400330510,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ1NTQyNjIw",
      "number": 9335,
      "title": "webpack import in SSR ,there is -1(from chunks.css.map) in the client…",
      "user": {
        "login": "VanquisherMe",
        "id": 4927398,
        "node_id": "MDQ6VXNlcjQ5MjczOTg=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/4927398?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/VanquisherMe",
        "html_url": "https://github.com/VanquisherMe",
        "followers_url": "https://api.github.com/users/VanquisherMe/followers",
        "following_url": "https://api.github.com/users/VanquisherMe/following{/other_user}",
        "gists_url": "https://api.github.com/users/VanquisherMe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/VanquisherMe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/VanquisherMe/subscriptions",
        "organizations_url": "https://api.github.com/users/VanquisherMe/orgs",
        "repos_url": "https://api.github.com/users/VanquisherMe/repos",
        "events_url": "https://api.github.com/users/VanquisherMe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/VanquisherMe/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 321616881,
          "node_id": "MDU6TGFiZWwzMjE2MTY4ODE=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/in%20review",
          "name": "in review",
          "color": "f7c6c7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-01-17T15:30:48Z",
      "updated_at": "2019-02-21T19:00:54Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9335",
        "html_url": "https://github.com/vuejs/vue/pull/9335",
        "diff_url": "https://github.com/vuejs/vue/pull/9335.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9335.patch"
      },
      "body": "…-manifest\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nI need to merge chunks，otherwise webpack import in SSR ,there is -1 in the client-manifest"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9329",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9329/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9329/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9329/events",
      "html_url": "https://github.com/vuejs/vue/issues/9329",
      "id": 399879587,
      "node_id": "MDU6SXNzdWUzOTk4Nzk1ODc=",
      "number": 9329,
      "title": "Vue-Mobx integration broken with PR #7828",
      "user": {
        "login": "bitencode",
        "id": 787250,
        "node_id": "MDQ6VXNlcjc4NzI1MA==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/787250?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitencode",
        "html_url": "https://github.com/bitencode",
        "followers_url": "https://api.github.com/users/bitencode/followers",
        "following_url": "https://api.github.com/users/bitencode/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitencode/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitencode/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitencode/subscriptions",
        "organizations_url": "https://api.github.com/users/bitencode/orgs",
        "repos_url": "https://api.github.com/users/bitencode/repos",
        "events_url": "https://api.github.com/users/bitencode/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitencode/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 79873474,
          "node_id": "MDU6TGFiZWw3OTg3MzQ3NA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/need%20repro",
          "name": "need repro",
          "color": "eb6420",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2019-01-16T16:05:12Z",
      "updated_at": "2019-02-11T17:14:39Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.18\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k90k8kwn2r](https://codesandbox.io/s/k90k8kwn2r)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Use the `mobxjs/mobx-vue` package (or a custom integration with Mobx)\r\n* Everything worked fine on Vue 2.5.17 and is broken on 2.5.18 and above\r\n* See that TypeErrors are thrown\r\n\r\n### What is expected?\r\nVue would not attempt to to set the `__proto__` property of a Proxy.\r\n\r\n### What is actually happening?\r\nReactivity with Mobx is broken:\r\n\r\n[Vue warn]: Error in event handler for \"input\": \"TypeError: 'set' on proxy: trap returned falsish for property '__proto__'\"\r\n---\r\nWe attempted to upgrade Vue from 2.5.17 to latest version for our applications - thought it would be smooth because upgrade target was still 2.5.x, but ever version after 2.5.18 is broken with Mobx integration.\r\n\r\nWe have a custom integration with Mobx-state-tree, but some of the code is very similar to `mobxjs/mobx-vue` integration code.  We are not using that library, and I'm not a Vue internals expert,  but I _think_ I  tracked the problem down to this PR: https://github.com/vuejs/vue/pull/7828.  \r\n\r\nSince then I have searched around and found this issue reported to that package also: https://github.com/mobxjs/mobx-vue/issues/15#issuecomment-453570397.  @Nemikolh wrote the codesandbox example I referenced above and it appears to be the same conclusion.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9328",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9328/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9328/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9328/events",
      "html_url": "https://github.com/vuejs/vue/issues/9328",
      "id": 399774003,
      "node_id": "MDU6SXNzdWUzOTk3NzQwMDM=",
      "number": 9328,
      "title": "Allow nested transition to trigger upon removal",
      "user": {
        "login": "mw76",
        "id": 12535311,
        "node_id": "MDQ6VXNlcjEyNTM1MzEx",
        "avatar_url": "https://avatars3.githubusercontent.com/u/12535311?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mw76",
        "html_url": "https://github.com/mw76",
        "followers_url": "https://api.github.com/users/mw76/followers",
        "following_url": "https://api.github.com/users/mw76/following{/other_user}",
        "gists_url": "https://api.github.com/users/mw76/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mw76/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mw76/subscriptions",
        "organizations_url": "https://api.github.com/users/mw76/orgs",
        "repos_url": "https://api.github.com/users/mw76/repos",
        "events_url": "https://api.github.com/users/mw76/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mw76/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2019-01-16T11:52:34Z",
      "updated_at": "2019-05-15T14:29:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/wx91uLft/](https://jsfiddle.net/wx91uLft/)\r\nother: https://jsfiddle.net/ae82rfnv/\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Show/hide elements with the  \"Toggle\" button.\r\n- Show/hide elements with the  \"Toggle Ticked\" button. Shows a workaround.\r\n\r\n### What is expected?\r\nAll transitions should be triggered on leave, even for nested child elements.\r\n\r\n### What is actually happening?\r\nTransition classes don't get applied to nested child elements, when conditions for leaving transitions occur on the same tick.\r\n\r\nWorkaround: Delaying the parent transitions by one tick fixes the problem.\r\n\r\n---\r\nThis has been reported, but got closed due to the sample code did not use `appear` on the `<transition>` elements. (See issues [#7643](https://github.com/vuejs/vue/issues/7643) and [#9243](https://github.com/vuejs/vue/issues/9243))\r\n\r\nMy example is more detailed and also provides a workaround.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9327",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9327/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9327/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9327/events",
      "html_url": "https://github.com/vuejs/vue/pull/9327",
      "id": 399713548,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ1MDcxODQ1",
      "number": 9327,
      "title": "fix #9284: Retrigger propsData getter before current watcher teardown",
      "user": {
        "login": "MR-fisher",
        "id": 9084483,
        "node_id": "MDQ6VXNlcjkwODQ0ODM=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/9084483?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MR-fisher",
        "html_url": "https://github.com/MR-fisher",
        "followers_url": "https://api.github.com/users/MR-fisher/followers",
        "following_url": "https://api.github.com/users/MR-fisher/following{/other_user}",
        "gists_url": "https://api.github.com/users/MR-fisher/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MR-fisher/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MR-fisher/subscriptions",
        "organizations_url": "https://api.github.com/users/MR-fisher/orgs",
        "repos_url": "https://api.github.com/users/MR-fisher/repos",
        "events_url": "https://api.github.com/users/MR-fisher/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MR-fisher/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-01-16T09:15:21Z",
      "updated_at": "2019-02-21T19:00:53Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9327",
        "html_url": "https://github.com/vuejs/vue/pull/9327",
        "diff_url": "https://github.com/vuejs/vue/pull/9327.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9327.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nYou can test in this case [https://github.com/MR-fisher/vue-memory-leak-case](https://github.com/MR-fisher/vue-memory-leak-case)."
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9325",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9325/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9325/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9325/events",
      "html_url": "https://github.com/vuejs/vue/issues/9325",
      "id": 399305161,
      "node_id": "MDU6SXNzdWUzOTkzMDUxNjE=",
      "number": 9325,
      "title": "Modifier to propagate events to parent",
      "user": {
        "login": "Vontus",
        "id": 18520070,
        "node_id": "MDQ6VXNlcjE4NTIwMDcw",
        "avatar_url": "https://avatars0.githubusercontent.com/u/18520070?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Vontus",
        "html_url": "https://github.com/Vontus",
        "followers_url": "https://api.github.com/users/Vontus/followers",
        "following_url": "https://api.github.com/users/Vontus/following{/other_user}",
        "gists_url": "https://api.github.com/users/Vontus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Vontus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Vontus/subscriptions",
        "organizations_url": "https://api.github.com/users/Vontus/orgs",
        "repos_url": "https://api.github.com/users/Vontus/repos",
        "events_url": "https://api.github.com/users/Vontus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Vontus/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2019-01-15T11:35:17Z",
      "updated_at": "2019-01-21T10:22:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nCurrently, and as far as I know, if we want to propagate an event fired by a child component to the parent (the child's grandparent) we need to $emit the event again, and we need to pass all the arguments one more time. This can become a problem, for example, if the event has a variable number of arguments because we need to specify them manually or pass the whole array as a new argument.\r\n\r\nThe current way would be something like\r\n```\r\n@blur=\"$emit('blur')\"\r\n@create=\"$emit('create', arguments[0])\"\r\n@input=\"$emit('input', arguments[0], arguments[1])\"\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\n@blur.propagate\r\n@create.propagate\r\n@input.propagate\r\n```\r\nAnd if we want to both handle the event and propagate it to the parent, we would use\r\n```\r\n@input.propagate=\"someFunction\"\r\n```\r\n----\r\nEDIT: Maybe since .propagate may be confused with the function .stopPropagation(), a better term could be simply .emit\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9320",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9320/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9320/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9320/events",
      "html_url": "https://github.com/vuejs/vue/issues/9320",
      "id": 399103570,
      "node_id": "MDU6SXNzdWUzOTkxMDM1NzA=",
      "number": 9320,
      "title": "Transition's @appear hook invoked even when appear not specified / falsy",
      "user": {
        "login": "pkaminski",
        "id": 1646896,
        "node_id": "MDQ6VXNlcjE2NDY4OTY=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1646896?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pkaminski",
        "html_url": "https://github.com/pkaminski",
        "followers_url": "https://api.github.com/users/pkaminski/followers",
        "following_url": "https://api.github.com/users/pkaminski/following{/other_user}",
        "gists_url": "https://api.github.com/users/pkaminski/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pkaminski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pkaminski/subscriptions",
        "organizations_url": "https://api.github.com/users/pkaminski/orgs",
        "repos_url": "https://api.github.com/users/pkaminski/repos",
        "events_url": "https://api.github.com/users/pkaminski/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pkaminski/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true
        },
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2019-01-14T22:34:51Z",
      "updated_at": "2019-03-11T07:22:26Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/jXdLGV](https://codepen.io/anon/pen/jXdLGV)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the repro and note that the rendered page says \"initial appear\".\r\n\r\n### What is expected?\r\nThe `@appear` hook should not be invoked and the page should just say \"initial\".\r\n\r\n### What is actually happening?\r\nThe `@appear` hook is invoked even though the `transition` doesn't have an `appear` attribute, and hence shouldn't be triggering on appear.  The same thing happens if you add `:appear =\"false\"` to the `transition`.\r\n\r\n---\r\nRan into this when building some custom transition components where `appear` should be user-controlled, but was being invoked all the time instead.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9313",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9313/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9313/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9313/events",
      "html_url": "https://github.com/vuejs/vue/issues/9313",
      "id": 398652037,
      "node_id": "MDU6SXNzdWUzOTg2NTIwMzc=",
      "number": 9313,
      "title": "[SSR] Add option to output the server entry through webpack",
      "user": {
        "login": "Kjir",
        "id": 64094,
        "node_id": "MDQ6VXNlcjY0MDk0",
        "avatar_url": "https://avatars2.githubusercontent.com/u/64094?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kjir",
        "html_url": "https://github.com/Kjir",
        "followers_url": "https://api.github.com/users/Kjir/followers",
        "following_url": "https://api.github.com/users/Kjir/following{/other_user}",
        "gists_url": "https://api.github.com/users/Kjir/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Kjir/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Kjir/subscriptions",
        "organizations_url": "https://api.github.com/users/Kjir/orgs",
        "repos_url": "https://api.github.com/users/Kjir/repos",
        "events_url": "https://api.github.com/users/Kjir/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Kjir/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2019-01-13T12:20:58Z",
      "updated_at": "2019-05-08T09:12:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nThe guide for Server-Side rendering creates 2 webpack builds, one for the client and one for the server. Then you create a file that imports the outputs from those 2 builds and returns the responses to whatever framework you use (e.g. express). Let's call this file the server handler.\r\nThe issue with this approach is that you would need a third webpack build to process the server handler through webpack as well. You might want to do that for a few different reasons:\r\n 1. To have the same flow for all your files\r\n 2. Because you use typescript/babel/minification or other transformations\r\n 3. To use the same style of imports (i.e. ES modules)\r\n\r\n### What does the proposed API look like?\r\nI can think of a few possible solutions:\r\n\r\n#### 1. Define the name of the server handler to emit\r\n\r\nThere could be a configuration option for `VueSSRServerPlugin` that defines one additional entry to emit in the Webpack configuration. This would mean that there could be at most 2 entries, one is used for creating the JSON bundle, the other one to emit the server handler\r\n\r\n```javascript\r\n// webpack.config.js\r\nconst VueSSRServerPlugin = require('vue-server-renderer/server-plugin')\r\n\r\nmodule.exports = {\r\n  // Point entry to your app's server entry file\r\n  entry: {\r\n     main: '/path/to/server-entry.js',\r\n     handler: '/path/to/server-handler.js'\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      'client-manifest': '/path/to/dist/client/vue-ssr-client-manifest.json'\r\n    }\r\n  },\r\n  plugins: [\r\n    new VueSSRServerPlugin({ serverHandler: 'handler' })\r\n  ]\r\n}\r\n```\r\n\r\nThe handler would look something like this:\r\n```javascript\r\n// server-handler.js\r\nimport clientManifest from 'client-manifest';\r\n// This alias could be created by the VueSSRServerPlugin itself\r\nimport serverBundle from 'server-bundle';\r\nimport { createBundleRenderer } from 'vue-server-renderer';\r\n\r\nconst template = `[...]`;\r\n\r\nconst renderer = createBundleRenderer(serverBundle, {\r\n  template,\r\n  clientManifest,\r\n  runInNewContext: false\r\n});\r\n\r\nexport function handler(event, context) {\r\n  // use the renderer in here\r\n}\r\n```\r\n\r\nThe upside of this approach is that it should be relatively easy to accomplish this.\r\nAnother upside is that this would be backwards compatible.\r\nThe downside is that there would be quite a bit of configuration necessary to make it look nice — to avoid importing build outputs directly in code, which would add a dependency on our webpack configuration in the code.\r\n\r\n#### 2. Provide an alias that resolves to the renderer instead of emitting a JSON bundle\r\n\r\nAnother possible approach would be to change completely the way the VueSSRServerPlugin works to reduce the additional webpack configuration necessary. Here's how the webpack configuration would look like:\r\n\r\n```javascript\r\n// webpack.config.js\r\nconst VueSSRServerPlugin = require('vue-server-renderer/server-plugin')\r\n\r\nmodule.exports = {\r\n  // Point entry to your app's server entry file\r\n  entry: '/path/to/server-handler.js',\r\n  plugins: [\r\n    new VueSSRServerPlugin({\r\n      clientManifest: '/path/to/dist/client/vue-ssr-client-manifest.json',\r\n      serverEntry: '/path/to/server-entry.js',\r\n      template: '/path/to/template.html'\r\n    })\r\n  ]\r\n}\r\n```\r\n\r\nAnd here is how the server handler would look like:\r\n\r\n```javascript\r\n// alias defined by the plugin, returns the renderer\r\nimport renderer from 'vue-ssr-server-renderer'\r\n\r\nexport function handler(event, context) {\r\n  // use renderer here\r\n}\r\n```\r\n\r\nThe clear upside is the reduction of the boilerplate.\r\nThe first big downside is that this would not be backwards compatible. It could be implemented as a new, different plugin.\r\nThe second downside is that there might be other use cases I haven't considered. `createBundleRenderer` takes other arguments as well, and you might not want to instantiate it at the top level.\r\nA smaller downside is that some pieces are connected in webpack rather than in the code, making it unclear where the template is referenced from.\r\n\r\n#### 3. Use a loader to transform the server entry\r\n\r\nThis would be similar to the first proposal, but it would change the way `createBundleRenderer` works.\r\n\r\nStarting from the server handler this time, here is how the usage would look like:\r\n\r\n```javascript\r\nimport App from '/path/to/server-entry.js'\r\nimport clientManifest from 'client-manifest';\r\n// This function has the client manifest already pulled in by the plugin\r\nimport { createAppRenderer } from 'vue-server-renderer';\r\n\r\nconst template = `[...]`;\r\n\r\nconst renderer = createAppRenderer(app, {\r\n  clientManifest,\r\n  template,\r\n  runInNewContext: false\r\n});\r\n\r\nexport function handler(event, context) {\r\n  // use renderer here\r\n}\r\n```\r\n\r\nAnd the webpack configuration would be something like this:\r\n\r\n```javascript\r\n// webpack.config.js\r\n\r\nmodule.exports = {\r\n  // Point entry to your app's server entry file\r\n  entry: '/path/to/server-handler.js',\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /entry-server\\.js$/,\r\n        loader: 'vue-ssr-loader'\r\n      }\r\n    ]\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      'client-manifest': '/path/to/dist/client/vue-ssr-client-manifest.json'\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis approach would have the upside of not requiring magic to happen on the webpack entries, making it possible to have multiple entrypoints.\r\nThe second upside would be to just configure a loader where appropriate, instead of adding a plugin.\r\nThe first downside is that we still have to include the client manifest from the build.\r\nThe second downside is that is could not be feasible with a webpack loader.\r\n\r\n#### So which one?\r\nI believe this problem needs a deeper reflection on the implications for all possible use cases, so someone with a better understanding of the usages of this plugin should trace the path to follow. Other ideas could be possible that would in the future also lead to simpler usages that hide the complexity from the users.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9298",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9298/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9298/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9298/events",
      "html_url": "https://github.com/vuejs/vue/issues/9298",
      "id": 397712617,
      "node_id": "MDU6SXNzdWUzOTc3MTI2MTc=",
      "number": 9298,
      "title": "Refreshing Edge with checkboxes ignores v-model",
      "user": {
        "login": "andrewlongmore",
        "id": 46555725,
        "node_id": "MDQ6VXNlcjQ2NTU1NzI1",
        "avatar_url": "https://avatars2.githubusercontent.com/u/46555725?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewlongmore",
        "html_url": "https://github.com/andrewlongmore",
        "followers_url": "https://api.github.com/users/andrewlongmore/followers",
        "following_url": "https://api.github.com/users/andrewlongmore/following{/other_user}",
        "gists_url": "https://api.github.com/users/andrewlongmore/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andrewlongmore/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andrewlongmore/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewlongmore/orgs",
        "repos_url": "https://api.github.com/users/andrewlongmore/repos",
        "events_url": "https://api.github.com/users/andrewlongmore/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andrewlongmore/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-01-10T08:01:30Z",
      "updated_at": "2019-01-10T08:12:11Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/andrewlongmore/50wL7mdz/821270/](https://jsfiddle.net/andrewlongmore/50wL7mdz/821270/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSince you need to refresh in Edge, I suggest you create a .html and .js file from the code in https://jsfiddle.net/andrewlongmore/50wL7mdz/821270/.\r\n\r\n### What is expected?\r\nThere are three check-boxes, with text \"first\", \"second\", \"third\".  The first two check-boxes are checked, the third one isn't.\r\nThe paragraph text shows that the selectedValues array is [\"first\",\"second\"].\r\nRefreshing the page doesn't change anything.\r\n\r\n### What is actually happening?\r\nOn FireFox, this is what happens.\r\nOn Edge, refreshing the page causes the first two check-boxes to become unchecked.  This happens whether you do F5 or ctrl-F5.  Refreshing the page again causes the first two check-boxes to become checked again.  The paragraph text always shows that the selectedValues array is [\"first\",\"second\"].\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9284",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9284/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9284/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9284/events",
      "html_url": "https://github.com/vuejs/vue/issues/9284",
      "id": 396770988,
      "node_id": "MDU6SXNzdWUzOTY3NzA5ODg=",
      "number": 9284,
      "title": "Vue父子组件间数据传递在IE浏览器中内存泄漏",
      "user": {
        "login": "MR-fisher",
        "id": 9084483,
        "node_id": "MDQ6VXNlcjkwODQ0ODM=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/9084483?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MR-fisher",
        "html_url": "https://github.com/MR-fisher",
        "followers_url": "https://api.github.com/users/MR-fisher/followers",
        "following_url": "https://api.github.com/users/MR-fisher/following{/other_user}",
        "gists_url": "https://api.github.com/users/MR-fisher/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MR-fisher/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MR-fisher/subscriptions",
        "organizations_url": "https://api.github.com/users/MR-fisher/orgs",
        "repos_url": "https://api.github.com/users/MR-fisher/repos",
        "events_url": "https://api.github.com/users/MR-fisher/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MR-fisher/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2019-01-08T06:45:23Z",
      "updated_at": "2019-01-16T01:48:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://github.com/MR-fisher/vue-memory-leak-case](https://github.com/MR-fisher/vue-memory-leak-case)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n通过连接下载案例demo，并运行 npm install 安装，完成后运行 npm start 启动工程，通过浏览器输入 http://localhost:8080/ 访问问题页面，交叉重复点击 xx 和 yy 按钮，组件x和y因为条件渲染控制会重复创建和销毁，看到任务管理器中ie浏览器占用内存不断飙升。\r\n\r\n### What is expected?\r\nie浏览器内存回收正常\r\n\r\n### What is actually happening?\r\nie浏览器内存占用不断飙升\r\n\r\n---\r\n该问题在ie edge浏览器下可以重现，chrome下是正常的\r\n怀疑是条件渲染切换不同子组件展示时，每次切换会导致当前子组件被销毁，但是对应传入的prop并未销毁，组件的DOM与prop对象存在引用联系，尽管组件已销毁，但是引用关系仍然存在内存中，导致内存泄漏。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9272",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9272/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9272/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9272/events",
      "html_url": "https://github.com/vuejs/vue/pull/9272",
      "id": 395079709,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQxNjMxNjMw",
      "number": 9272,
      "title": "Add follow on twitter badge ",
      "user": {
        "login": "jamesgeorge007",
        "id": 25279263,
        "node_id": "MDQ6VXNlcjI1Mjc5MjYz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/25279263?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesgeorge007",
        "html_url": "https://github.com/jamesgeorge007",
        "followers_url": "https://api.github.com/users/jamesgeorge007/followers",
        "following_url": "https://api.github.com/users/jamesgeorge007/following{/other_user}",
        "gists_url": "https://api.github.com/users/jamesgeorge007/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jamesgeorge007/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jamesgeorge007/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesgeorge007/orgs",
        "repos_url": "https://api.github.com/users/jamesgeorge007/repos",
        "events_url": "https://api.github.com/users/jamesgeorge007/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jamesgeorge007/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2019-01-01T12:38:04Z",
      "updated_at": "2019-03-07T18:00:20Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9272",
        "html_url": "https://github.com/vuejs/vue/pull/9272",
        "diff_url": "https://github.com/vuejs/vue/pull/9272.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9272.patch"
      },
      "body": "I think it would be nice having a `Follow on Twitter` badge showing the current follower count redirecting to the official Twitter account for `vuejs` :thinking: \r\n\r\n> It looks like this:\r\n\r\n[![Twitter](https://img.shields.io/twitter/follow/vuejs.svg?style=social&label=Follow)](https://twitter.com/intent/follow?screen_name=vuejs)"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9266",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9266/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9266/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9266/events",
      "html_url": "https://github.com/vuejs/vue/issues/9266",
      "id": 394751768,
      "node_id": "MDU6SXNzdWUzOTQ3NTE3Njg=",
      "number": 9266,
      "title": "[SSR] Scoped SSR Hydration",
      "user": {
        "login": "CDNRocket",
        "id": 5503654,
        "node_id": "MDQ6VXNlcjU1MDM2NTQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5503654?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CDNRocket",
        "html_url": "https://github.com/CDNRocket",
        "followers_url": "https://api.github.com/users/CDNRocket/followers",
        "following_url": "https://api.github.com/users/CDNRocket/following{/other_user}",
        "gists_url": "https://api.github.com/users/CDNRocket/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CDNRocket/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CDNRocket/subscriptions",
        "organizations_url": "https://api.github.com/users/CDNRocket/orgs",
        "repos_url": "https://api.github.com/users/CDNRocket/repos",
        "events_url": "https://api.github.com/users/CDNRocket/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CDNRocket/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-12-29T02:18:49Z",
      "updated_at": "2019-01-16T04:08:40Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nWe use dom template with Vue + Blade (php):\r\n\r\n```\r\n//Blade\r\n<div id=\"app\">\r\n    <div>Some contents</div>\r\n    <component1></component1>\r\n    <component2></component2>\r\n    @bladedirective\r\n    <div>something else</div>\r\n    <div is=component3>{{ $myComponentHtmlFromSSR }}</div>\r\n</div>\r\n```\r\n\r\n```\r\n//Client\r\nconst app = new Vue({\r\n    el: '#app',\r\n    components: { Component1, Component2, Component3}\r\n});\r\n```\r\n\r\n```\r\n//Server\r\nconst app = new Vue({\r\n    render: h => h(Component3),\r\n});\r\n//Process app with vue-server-renderer\r\n```\r\n\r\nThis works, we just used the common Blade  +  Vue dom templating approach and for some components, we will use SSR with its benefits like first meaningful paint and SEO.\r\n\r\nThe problem is that the server component can't be hydrated because it is not at the root of the instance and Vue through client always regenerate the component HTML from scratch.\r\n\r\n### What does the proposed API look like?\r\nVue should have a \"scoped\" or \"mixed\" hydration for components where Vue will search for a component with data-server-rendered=\"true\" and if find it will perform hydration of the static SSR component.\r\n\r\nMaybe something similar to:\r\n`<div is=\"component3\" data-server-rendered=\"true\">{{ $myComponentHtmlFromSSR }}</div>`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9259",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9259/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9259/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9259/events",
      "html_url": "https://github.com/vuejs/vue/issues/9259",
      "id": 394424807,
      "node_id": "MDU6SXNzdWUzOTQ0MjQ4MDc=",
      "number": 9259,
      "title": "Support Array subclassing",
      "user": {
        "login": "AmrIKhudair",
        "id": 14287123,
        "node_id": "MDQ6VXNlcjE0Mjg3MTIz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/14287123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AmrIKhudair",
        "html_url": "https://github.com/AmrIKhudair",
        "followers_url": "https://api.github.com/users/AmrIKhudair/followers",
        "following_url": "https://api.github.com/users/AmrIKhudair/following{/other_user}",
        "gists_url": "https://api.github.com/users/AmrIKhudair/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AmrIKhudair/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AmrIKhudair/subscriptions",
        "organizations_url": "https://api.github.com/users/AmrIKhudair/orgs",
        "repos_url": "https://api.github.com/users/AmrIKhudair/repos",
        "events_url": "https://api.github.com/users/AmrIKhudair/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AmrIKhudair/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-12-27T15:38:16Z",
      "updated_at": "2019-02-22T16:25:10Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://codepen.io/AmrIKhudair/pen/NevxML](https://codepen.io/AmrIKhudair/pen/NevxML)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1- create a class extending Array and add a custom method\r\n2- instantiate a new instance of the class and add it to data\r\n3- try to call the method on the instance in the template\r\n\r\n### What is expected?\r\nThe method is successfully executed\r\n\r\n### What is actually happening?\r\nError not a function\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9255",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9255/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9255/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9255/events",
      "html_url": "https://github.com/vuejs/vue/issues/9255",
      "id": 394162767,
      "node_id": "MDU6SXNzdWUzOTQxNjI3Njc=",
      "number": 9255,
      "title": "class binding not updating on client after using `$isServer`",
      "user": {
        "login": "DominusVilicus",
        "id": 17972275,
        "node_id": "MDQ6VXNlcjE3OTcyMjc1",
        "avatar_url": "https://avatars3.githubusercontent.com/u/17972275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DominusVilicus",
        "html_url": "https://github.com/DominusVilicus",
        "followers_url": "https://api.github.com/users/DominusVilicus/followers",
        "following_url": "https://api.github.com/users/DominusVilicus/following{/other_user}",
        "gists_url": "https://api.github.com/users/DominusVilicus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DominusVilicus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DominusVilicus/subscriptions",
        "organizations_url": "https://api.github.com/users/DominusVilicus/orgs",
        "repos_url": "https://api.github.com/users/DominusVilicus/repos",
        "events_url": "https://api.github.com/users/DominusVilicus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DominusVilicus/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 13,
      "created_at": "2018-12-26T12:57:35Z",
      "updated_at": "2019-04-27T03:02:19Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/y05q554q71](https://codesandbox.io/s/y05q554q71)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncode sandbox will illustrate the issue. (may take a few seconds to load)\r\n\r\nNotice how `{{ isActive() }}` prints true, yet the class isn't binded\r\n\r\n### What is expected?\r\n`:class` to bind class attribute `class=\"nav-link active` and cause nav-link to turn red\r\n\r\n### What is actually happening?\r\nNot binding class and making nav-link red\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9241",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9241/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9241/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9241/events",
      "html_url": "https://github.com/vuejs/vue/pull/9241",
      "id": 393666591,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjQwNjMwNzc4",
      "number": 9241,
      "title": "Fix #9224 Warn type when not a constructor",
      "user": {
        "login": "Zarad1993",
        "id": 18662248,
        "node_id": "MDQ6VXNlcjE4NjYyMjQ4",
        "avatar_url": "https://avatars0.githubusercontent.com/u/18662248?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Zarad1993",
        "html_url": "https://github.com/Zarad1993",
        "followers_url": "https://api.github.com/users/Zarad1993/followers",
        "following_url": "https://api.github.com/users/Zarad1993/following{/other_user}",
        "gists_url": "https://api.github.com/users/Zarad1993/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Zarad1993/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Zarad1993/subscriptions",
        "organizations_url": "https://api.github.com/users/Zarad1993/orgs",
        "repos_url": "https://api.github.com/users/Zarad1993/repos",
        "events_url": "https://api.github.com/users/Zarad1993/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Zarad1993/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-12-22T11:40:16Z",
      "updated_at": "2019-02-24T10:40:17Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9241",
        "html_url": "https://github.com/vuejs/vue/pull/9241",
        "diff_url": "https://github.com/vuejs/vue/pull/9241.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9241.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Error Handling\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n### Proof\r\n**Before**\r\n\r\n![screen shot 2018-12-22 at 1 36 46 pm](https://user-images.githubusercontent.com/18662248/50373943-af205d80-05ee-11e9-930d-ae1e798b03fc.png)\r\n\r\n\r\n**After**\r\n\r\n![screen shot 2018-12-22 at 1 37 43 pm](https://user-images.githubusercontent.com/18662248/50373959-045c6f00-05ef-11e9-8eb8-5715e099cdde.png)"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9234",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9234/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9234/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9234/events",
      "html_url": "https://github.com/vuejs/vue/issues/9234",
      "id": 393159498,
      "node_id": "MDU6SXNzdWUzOTMxNTk0OTg=",
      "number": 9234,
      "title": "Transition is erroneously run when placed with bizarre sequence of sibling elements. ",
      "user": {
        "login": "AnalyzePlatypus",
        "id": 18376110,
        "node_id": "MDQ6VXNlcjE4Mzc2MTEw",
        "avatar_url": "https://avatars2.githubusercontent.com/u/18376110?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AnalyzePlatypus",
        "html_url": "https://github.com/AnalyzePlatypus",
        "followers_url": "https://api.github.com/users/AnalyzePlatypus/followers",
        "following_url": "https://api.github.com/users/AnalyzePlatypus/following{/other_user}",
        "gists_url": "https://api.github.com/users/AnalyzePlatypus/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AnalyzePlatypus/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AnalyzePlatypus/subscriptions",
        "organizations_url": "https://api.github.com/users/AnalyzePlatypus/orgs",
        "repos_url": "https://api.github.com/users/AnalyzePlatypus/repos",
        "events_url": "https://api.github.com/users/AnalyzePlatypus/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AnalyzePlatypus/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        },
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2018-12-20T18:20:14Z",
      "updated_at": "2019-03-27T13:01:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "\r\n### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/analyzeplatypus/eywraw8t/513878/](https://jsfiddle.net/analyzeplatypus/eywraw8t/513878/)\r\n\r\n![screen recording 2018-12-20 at 8 21 07 pm mov](https://user-images.githubusercontent.com/18376110/50303197-00b4d500-0495-11e9-9f02-145099a68d15.gif)\r\n\r\n### Steps to reproduce\r\nThe fiddle contains a seemingly random sequence of elements that illustrates the issue (described below). \r\n\r\n1. Open the JSFiddle\r\n2. Click the \"Change\" button\r\n3. The transition plays (it should not).\r\n\r\nTry removing any of the DOM elements and the errant transition no longer plays!\r\n\r\n### What is expected?\r\nThe transition should not run.\r\n(CSS transition classes should not be applied, hooks should not be called, etc.)\r\n\r\n### What is actually happening?\r\nThe transition is run (CSS transition classes are applied).\r\n\r\n---\r\nI came across this while building a complex form with multiple buttons that appear/disappear based on form state.\r\nI noticed duplicated buttons in one of my unit tests, and found that a transition was being run even though its child's `v-if` binding was not being changed. I duplicated the component and whittled it down until I arrived at the attached JSFiddle.\r\n\r\n\r\nThis issue appears when the following sequence of elements are aligned:\r\n1. A boolean entry in the Vue component's `data` dictionary (`hasChanges: false`, in the JSFiddle)\r\n\r\nThe DOM contains\r\n2. A `<div>` whose `v-if` is bound to the boolean entry (1).\r\n2. A `<transition>` containing a button which modifies the boolean entry (1).\r\n3. An empty `<transition>` element.\r\n4. A `<div>` whose `v-if` is bound to the boolean entry (1) modified by logical NOT (!). (In the fiddle, `v-if=\"!hasChanges\"`).\r\n\r\nWith this exact structure, modifying the boolean entry (1) will run the transition - even though the transition is not bound to the boolean at all!\r\n\r\nIf you remove any of the above elements, **or even reorder them** (!) the errant transition will not run (which is the correct behavior).\r\n\r\n\r\nWhy does the transition run when placed with this particular set of siblings in this particular order?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9224",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9224/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9224/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9224/events",
      "html_url": "https://github.com/vuejs/vue/issues/9224",
      "id": 392480644,
      "node_id": "MDU6SXNzdWUzOTI0ODA2NDQ=",
      "number": 9224,
      "title": "Warn when the type of a prop isn't a constructor ",
      "user": {
        "login": "etnolover",
        "id": 7853748,
        "node_id": "MDQ6VXNlcjc4NTM3NDg=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7853748?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/etnolover",
        "html_url": "https://github.com/etnolover",
        "followers_url": "https://api.github.com/users/etnolover/followers",
        "following_url": "https://api.github.com/users/etnolover/following{/other_user}",
        "gists_url": "https://api.github.com/users/etnolover/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/etnolover/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/etnolover/subscriptions",
        "organizations_url": "https://api.github.com/users/etnolover/orgs",
        "repos_url": "https://api.github.com/users/etnolover/repos",
        "events_url": "https://api.github.com/users/etnolover/events{/privacy}",
        "received_events_url": "https://api.github.com/users/etnolover/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 601343890,
          "node_id": "MDU6TGFiZWw2MDEzNDM4OTA=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "6f4fff",
          "default": true
        },
        {
          "id": 863458406,
          "node_id": "MDU6TGFiZWw4NjM0NTg0MDY=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20PR",
          "name": "has PR",
          "color": "5319e7",
          "default": false
        },
        {
          "id": 1067199686,
          "node_id": "MDU6TGFiZWwxMDY3MTk5Njg2",
          "url": "https://api.github.com/repos/vuejs/vue/labels/warnings",
          "name": "warnings",
          "color": "8745ad",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 11,
      "created_at": "2018-12-19T07:57:17Z",
      "updated_at": "2019-04-20T06:39:24Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nIt suppose better error handling for prop types errors.\r\nSteps to reproduce error:\r\n1. Set prop type equals to string ('String', not String):\r\n```javascript\r\nexampleProp: {\r\n  type: 'String',\r\n}\r\n```\r\n\r\n2. Run project and get an error:\r\n```javascript\r\n[Vue warn]: Error in nextTick: \"TypeError: Right-hand side of 'instanceof' is not an object\"\r\nTypeError: Right-hand side of 'instanceof' is not an object\r\n    at assertType (vue.esm.js:1668)\r\n    at assertProp (vue.esm.js:1626)\r\n    at validateProp (vue.esm.js:1560)\r\n    at loop (vue.esm.js:3334)\r\n    at initProps (vue.esm.js:3367)\r\n    at initState (vue.esm.js:3308)\r\n    at VueComponent.Vue._init (vue.esm.js:4628)\r\n    at new VueComponent (vue.esm.js:4798)\r\n    at createComponentInstanceForVnode (vue.esm.js:4310)\r\n    at init (vue.esm.js:4131)\r\n```\r\n\r\nError log is not evident and it is difficult to understand the source of problem (first time with this error anyway).\r\n\r\n### What does the proposed API look like?\r\nError message in this case may look like:\r\n```javascript\r\n\"Incorrect prop type 'exampleProp' at:123 (where 123 is example string position in the code)\"\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9222",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9222/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9222/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9222/events",
      "html_url": "https://github.com/vuejs/vue/issues/9222",
      "id": 392145923,
      "node_id": "MDU6SXNzdWUzOTIxNDU5MjM=",
      "number": 9222,
      "title": "Add an option to throw global errors, making it possible for debuggers to automatically break on error.",
      "user": {
        "login": "nialna",
        "id": 32243840,
        "node_id": "MDQ6VXNlcjMyMjQzODQw",
        "avatar_url": "https://avatars2.githubusercontent.com/u/32243840?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nialna",
        "html_url": "https://github.com/nialna",
        "followers_url": "https://api.github.com/users/nialna/followers",
        "following_url": "https://api.github.com/users/nialna/following{/other_user}",
        "gists_url": "https://api.github.com/users/nialna/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nialna/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nialna/subscriptions",
        "organizations_url": "https://api.github.com/users/nialna/orgs",
        "repos_url": "https://api.github.com/users/nialna/repos",
        "events_url": "https://api.github.com/users/nialna/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nialna/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-12-18T13:00:20Z",
      "updated_at": "2018-12-18T14:59:06Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nCurrently, the [globalHandleError](https://github.com/nialna/vue/blob/dev/src/core/util/error.js#L27) function will intercept all errors thrown in components and log them. It can also pass them to an external error handler, but that external error handler won't be able to throw it because the call to `config.errorHandler` is wrapped in a try catch.\r\n\r\nIn vanilla JS, when an unhandled error happens in your code, the debugger can break immediately, giving you access to the stack and context. When using VueJS, we have no way of doing this because the errors are always handled by Vue.\r\n\r\n### What does the proposed API look like?\r\nThe simplest way I can think of is to add a new `config` option, for example:\r\n\r\n```js\r\nVue.config.throwUnhandledErrors = true;\r\n```\r\n\r\nThen in `globalHandleError`, we could check for that flag and throw errors:\r\n\r\n```js\r\nfunction globalHandleError (err, vm, info) {\r\n  if (config.throwUnhandledErrors) {\r\n    throw(err);\r\n  } else if (config.errorHandler) {\r\n    try {\r\n      return config.errorHandler.call(null, err, vm, info)\r\n    } catch (e) {\r\n      logError(e, null, 'config.errorHandler')\r\n    }\r\n  }\r\n  logError(err, vm, info)\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9216",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9216/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9216/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9216/events",
      "html_url": "https://github.com/vuejs/vue/issues/9216",
      "id": 391826358,
      "node_id": "MDU6SXNzdWUzOTE4MjYzNTg=",
      "number": 9216,
      "title": "Impossible to preserve directive dom changes when the dom element is shared by multiple vnodes.",
      "user": {
        "login": "Aaron-Pool",
        "id": 5634834,
        "node_id": "MDQ6VXNlcjU2MzQ4MzQ=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5634834?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Aaron-Pool",
        "html_url": "https://github.com/Aaron-Pool",
        "followers_url": "https://api.github.com/users/Aaron-Pool/followers",
        "following_url": "https://api.github.com/users/Aaron-Pool/following{/other_user}",
        "gists_url": "https://api.github.com/users/Aaron-Pool/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Aaron-Pool/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Aaron-Pool/subscriptions",
        "organizations_url": "https://api.github.com/users/Aaron-Pool/orgs",
        "repos_url": "https://api.github.com/users/Aaron-Pool/repos",
        "events_url": "https://api.github.com/users/Aaron-Pool/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Aaron-Pool/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-12-17T17:58:31Z",
      "updated_at": "2018-12-17T19:00:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/8y0yqono38](https://codesandbox.io/s/8y0yqono38)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a wrapper component that has another custom component as its root node. Put a directive on the wrapper component that adds a class to the element. Do anything that updates the child's class. The classes assigned in the directive of the parent vnode will be wiped out, and the directive has no way of knowing it. I _think_ this is because the vnodes were merged into the same element. So, the child vnode gets patched, causing the class update and the dom change to the same element that the parent vnode is using, but, because no actual patch happened to the parent vnode, the parent directive never has a chance to readd it's class.\r\n\r\nI think this probably _technically_ correct behavior, but it still presents (in my opinion) an issue with directive functionality. Which is that my host dom element can be mutated by a different vnode and I'm not aware of it.\r\n\r\n### What is expected?\r\nThe `update` trigger runs when my host element is mutated.\r\n\r\n### What is actually happening?\r\nThe class the directive adds is overwritten and my directive has no chance to readd the class.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9194",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9194/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9194/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9194/events",
      "html_url": "https://github.com/vuejs/vue/issues/9194",
      "id": 390271599,
      "node_id": "MDU6SXNzdWUzOTAyNzE1OTk=",
      "number": 9194,
      "title": "[vue-server-renderer] Bug failing when using a reference of process - related to SSRClientWebpackPlugin",
      "user": {
        "login": "AlexandreBonaventure",
        "id": 4596409,
        "node_id": "MDQ6VXNlcjQ1OTY0MDk=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/4596409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AlexandreBonaventure",
        "html_url": "https://github.com/AlexandreBonaventure",
        "followers_url": "https://api.github.com/users/AlexandreBonaventure/followers",
        "following_url": "https://api.github.com/users/AlexandreBonaventure/following{/other_user}",
        "gists_url": "https://api.github.com/users/AlexandreBonaventure/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AlexandreBonaventure/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AlexandreBonaventure/subscriptions",
        "organizations_url": "https://api.github.com/users/AlexandreBonaventure/orgs",
        "repos_url": "https://api.github.com/users/AlexandreBonaventure/repos",
        "events_url": "https://api.github.com/users/AlexandreBonaventure/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AlexandreBonaventure/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2018-12-12T15:15:44Z",
      "updated_at": "2019-03-21T10:07:54Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://github.com/AlexandreBonaventure/repro-vue-ssr-bug](https://github.com/AlexandreBonaventure/repro-vue-ssr-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. `yarn install`\r\n2. `yarn run ssr:build && yarn ssr:start`\r\n3. go to localhost:8000\r\n\r\n\r\n### What is expected?\r\nto serve / correctly\r\n\r\n### What is actually happening?\r\nerror 500:\r\n```\r\nTypeError: Cannot read property 'replace' of undefined\r\n    at normalizeFile (.../node_modules/vue-server-renderer/build.js:8183:27)\r\n```\r\n\r\n---\r\nHi, I came across this weird bug when I was trying to retrieve a global variable (eg. global.localenv.PUBLIC_URL) in App.vue to populate a meta tag (using vue-meta).\r\nI stumble upon the bug, and narrowed it down to referencing `process` being the cause here.\r\nAnother weird thing is that if you remove the component Icons import in the minimal repro, it works fine!\r\n\r\nThe error stack is initiated by `TemplateRenderer.renderPreloadLinks` which makes me think that maybe it is a bug in the webpack SSRClientPlugin which inject preload links for every assets.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9143",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9143/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9143/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9143/events",
      "html_url": "https://github.com/vuejs/vue/pull/9143",
      "id": 387474584,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1OTU1MjQ1",
      "number": 9143,
      "title": "fix(parser#9038): Fix for slot \"name\" property using interpolation as well…",
      "user": {
        "login": "zleight1",
        "id": 8949977,
        "node_id": "MDQ6VXNlcjg5NDk5Nzc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/8949977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zleight1",
        "html_url": "https://github.com/zleight1",
        "followers_url": "https://api.github.com/users/zleight1/followers",
        "following_url": "https://api.github.com/users/zleight1/following{/other_user}",
        "gists_url": "https://api.github.com/users/zleight1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/zleight1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zleight1/subscriptions",
        "organizations_url": "https://api.github.com/users/zleight1/orgs",
        "repos_url": "https://api.github.com/users/zleight1/repos",
        "events_url": "https://api.github.com/users/zleight1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/zleight1/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-12-04T20:52:20Z",
      "updated_at": "2019-02-21T19:00:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9143",
        "html_url": "https://github.com/vuejs/vue/pull/9143",
        "diff_url": "https://github.com/vuejs/vue/pull/9143.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9143.patch"
      },
      "body": "… as the \"slot\" property. (vuejs#9038)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9138",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9138/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9138/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9138/events",
      "html_url": "https://github.com/vuejs/vue/issues/9138",
      "id": 387035299,
      "node_id": "MDU6SXNzdWUzODcwMzUyOTk=",
      "number": 9138,
      "title": "can't use `:srcObject.prop` to set prop to null",
      "user": {
        "login": "freddialpad",
        "id": 32689973,
        "node_id": "MDQ6VXNlcjMyNjg5OTcz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/32689973?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/freddialpad",
        "html_url": "https://github.com/freddialpad",
        "followers_url": "https://api.github.com/users/freddialpad/followers",
        "following_url": "https://api.github.com/users/freddialpad/following{/other_user}",
        "gists_url": "https://api.github.com/users/freddialpad/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/freddialpad/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/freddialpad/subscriptions",
        "organizations_url": "https://api.github.com/users/freddialpad/orgs",
        "repos_url": "https://api.github.com/users/freddialpad/repos",
        "events_url": "https://api.github.com/users/freddialpad/events{/privacy}",
        "received_events_url": "https://api.github.com/users/freddialpad/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-12-03T22:31:31Z",
      "updated_at": "2018-12-13T18:24:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ppyq71wrxj](https://codesandbox.io/s/ppyq71wrxj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n(See minimal repro)\r\n\r\n1. have a component with an `HTMLMediaElement` that binds `:srcObject.prop` to some data property (that starts off as `null`):\r\n```\r\n<audio :srcObject.prop=\"stream\">\r\n```\r\n2. set it to some valid `MediaStream`:\r\n```\r\nthis.stream = new MediaStream();\r\n```\r\n3. set it back to `null`:\r\n```\r\nthis.stream = null;\r\n```\r\n\r\n### What is expected?\r\nI expect the audio.srcObject to be null\r\n\r\n### What is actually happening?\r\nit stays as the MediaStream and there's a TypeError in the log.\r\n\r\n---\r\nI noticed that it did actually work in my first attempt to write the repro example: https://jsfiddle.net/4tnkapxo/1/ (probably because the whole thing is inline?)\r\n\r\nIm not sure how helpful this is, but based on the stack trace it's related to this code, found in `updateDOMProps`:\r\n\r\n```\r\n  for (key in oldProps) {\r\n    if (isUndef(props[key])) {\r\n      elm[key] = '';\r\n    }\r\n  }\r\n```\r\n\r\n`isUndef(null)` is evaluating true, and so it's trying to set the prop to `''`, but `srcObject` specifically needs it to be `null` or a `MediaStream`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9121",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9121/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9121/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9121/events",
      "html_url": "https://github.com/vuejs/vue/pull/9121",
      "id": 385532393,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjM0NDgyNDY4",
      "number": 9121,
      "title": "fix(types): Allow WatchHandler to be of string type even when used with WatchOptions",
      "user": {
        "login": "btoo",
        "id": 8883465,
        "node_id": "MDQ6VXNlcjg4ODM0NjU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8883465?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btoo",
        "html_url": "https://github.com/btoo",
        "followers_url": "https://api.github.com/users/btoo/followers",
        "following_url": "https://api.github.com/users/btoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/btoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/btoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/btoo/subscriptions",
        "organizations_url": "https://api.github.com/users/btoo/orgs",
        "repos_url": "https://api.github.com/users/btoo/repos",
        "events_url": "https://api.github.com/users/btoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/btoo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-11-29T01:48:28Z",
      "updated_at": "2019-02-21T19:00:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9121",
        "html_url": "https://github.com/vuejs/vue/pull/9121",
        "diff_url": "https://github.com/vuejs/vue/pull/9121.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9121.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9070",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9070/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9070/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9070/events",
      "html_url": "https://github.com/vuejs/vue/issues/9070",
      "id": 381056641,
      "node_id": "MDU6SXNzdWUzODEwNTY2NDE=",
      "number": 9070,
      "title": "match (getTypeIndex) is called lot of time when props changed and consume lot of memory",
      "user": {
        "login": "Farkal",
        "id": 3998763,
        "node_id": "MDQ6VXNlcjM5OTg3NjM=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/3998763?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Farkal",
        "html_url": "https://github.com/Farkal",
        "followers_url": "https://api.github.com/users/Farkal/followers",
        "following_url": "https://api.github.com/users/Farkal/following{/other_user}",
        "gists_url": "https://api.github.com/users/Farkal/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Farkal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Farkal/subscriptions",
        "organizations_url": "https://api.github.com/users/Farkal/orgs",
        "repos_url": "https://api.github.com/users/Farkal/repos",
        "events_url": "https://api.github.com/users/Farkal/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Farkal/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-11-15T08:47:56Z",
      "updated_at": "2018-12-02T20:52:34Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/MzpZoz?editors=1011](https://codepen.io/anon/pen/MzpZoz?editors=1011)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen google chrome dev console  \r\nGo in 'Memory' tab  \r\nSelect 'Allocation instrumentation timeline' and check 'Record allocation stacks'  \r\nLaunch for 30 seconds  \r\nOn your snapshot select 'Allocation' on the top left drop-down  \r\nOrder by 'Count'  \r\nYou will see high number of match called (a lot more than the actual var change)\r\n\r\n### What is expected?\r\nExpected to have match number closer to the number of var change.\r\n\r\n### What is actually happening?\r\nMatch is executed lot of time and consume lot of memory.\r\n\r\n---\r\nI think it's the way i deal with the object that it's not the right way but i search in the doc and couldn't find something related to that behavior and how to manage it (perhaps use store ?).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9054",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9054/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9054/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9054/events",
      "html_url": "https://github.com/vuejs/vue/issues/9054",
      "id": 379622582,
      "node_id": "MDU6SXNzdWUzNzk2MjI1ODI=",
      "number": 9054,
      "title": "Unexpected component destroyed trigger by sibling component",
      "user": {
        "login": "scmp-teddy-lok",
        "id": 42883784,
        "node_id": "MDQ6VXNlcjQyODgzNzg0",
        "avatar_url": "https://avatars2.githubusercontent.com/u/42883784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scmp-teddy-lok",
        "html_url": "https://github.com/scmp-teddy-lok",
        "followers_url": "https://api.github.com/users/scmp-teddy-lok/followers",
        "following_url": "https://api.github.com/users/scmp-teddy-lok/following{/other_user}",
        "gists_url": "https://api.github.com/users/scmp-teddy-lok/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scmp-teddy-lok/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scmp-teddy-lok/subscriptions",
        "organizations_url": "https://api.github.com/users/scmp-teddy-lok/orgs",
        "repos_url": "https://api.github.com/users/scmp-teddy-lok/repos",
        "events_url": "https://api.github.com/users/scmp-teddy-lok/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scmp-teddy-lok/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-11-12T05:03:27Z",
      "updated_at": "2018-11-12T08:30:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/teddy_scmp/2m6kv3rn/](https://jsfiddle.net/teddy_scmp/2m6kv3rn/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open console\r\n2. click the TOGGLE bottom\r\n\r\n### What is expected?\r\nIt is weird that the component between the two v-if will destroy and mount again\r\n\r\n### What is actually happening?\r\n1. AComponent is destroyed which is unexpected\r\n2. BComponent will keep, which I only added a class there.\r\n\r\n---\r\nIn addition, I find that DIV will cause this issue, if I added a class / change it to a tag / button, it won't destroy.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9050",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9050/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9050/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9050/events",
      "html_url": "https://github.com/vuejs/vue/pull/9050",
      "id": 379401727,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5ODc3MzEy",
      "number": 9050,
      "title": "feat(parser): throw error when using interpolation instead of expresssion (#9038)",
      "user": {
        "login": "kamilchlebek",
        "id": 40219331,
        "node_id": "MDQ6VXNlcjQwMjE5MzMx",
        "avatar_url": "https://avatars1.githubusercontent.com/u/40219331?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kamilchlebek",
        "html_url": "https://github.com/kamilchlebek",
        "followers_url": "https://api.github.com/users/kamilchlebek/followers",
        "following_url": "https://api.github.com/users/kamilchlebek/following{/other_user}",
        "gists_url": "https://api.github.com/users/kamilchlebek/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kamilchlebek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kamilchlebek/subscriptions",
        "organizations_url": "https://api.github.com/users/kamilchlebek/orgs",
        "repos_url": "https://api.github.com/users/kamilchlebek/repos",
        "events_url": "https://api.github.com/users/kamilchlebek/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kamilchlebek/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 321616881,
          "node_id": "MDU6TGFiZWwzMjE2MTY4ODE=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/in%20review",
          "name": "in review",
          "color": "f7c6c7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-11-10T08:03:49Z",
      "updated_at": "2019-02-21T19:00:52Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9050",
        "html_url": "https://github.com/vuejs/vue/pull/9050",
        "diff_url": "https://github.com/vuejs/vue/pull/9050.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9050.patch"
      },
      "body": "**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\nYes it's already an open issue with `good first issue` label. Resolves: #9038\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9040",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9040/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9040/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9040/events",
      "html_url": "https://github.com/vuejs/vue/issues/9040",
      "id": 378359384,
      "node_id": "MDU6SXNzdWUzNzgzNTkzODQ=",
      "number": 9040,
      "title": "Conditional template not rendering when it has the same slot name",
      "user": {
        "login": "jameslkingsley",
        "id": 11015784,
        "node_id": "MDQ6VXNlcjExMDE1Nzg0",
        "avatar_url": "https://avatars3.githubusercontent.com/u/11015784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jameslkingsley",
        "html_url": "https://github.com/jameslkingsley",
        "followers_url": "https://api.github.com/users/jameslkingsley/followers",
        "following_url": "https://api.github.com/users/jameslkingsley/following{/other_user}",
        "gists_url": "https://api.github.com/users/jameslkingsley/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jameslkingsley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jameslkingsley/subscriptions",
        "organizations_url": "https://api.github.com/users/jameslkingsley/orgs",
        "repos_url": "https://api.github.com/users/jameslkingsley/repos",
        "events_url": "https://api.github.com/users/jameslkingsley/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jameslkingsley/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-11-07T16:14:30Z",
      "updated_at": "2018-11-15T05:33:30Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ad17bgtq](https://jsfiddle.net/ad17bgtq)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a component that has a named slot exposing a boolean flag in its scope\r\n2. Consume the component with two templates inside it, each with a v-if using the exposed boolean flag\r\n3. Only the last template written in the order of code is rendered\r\n\r\n### What is expected?\r\nAll templates using the same slot name should render when their v-if evaluates true.\r\n\r\n### What is actually happening?\r\nOnly the last template written in the code order is rendered. Any other template with the same slot name will not render even if its v-if permits it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9038",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9038/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9038/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9038/events",
      "html_url": "https://github.com/vuejs/vue/issues/9038",
      "id": 378235731,
      "node_id": "MDU6SXNzdWUzNzgyMzU3MzE=",
      "number": 9038,
      "title": "Throw error when using interpolation instead of JS expression for slot names",
      "user": {
        "login": "revolter",
        "id": 5748627,
        "node_id": "MDQ6VXNlcjU3NDg2Mjc=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5748627?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revolter",
        "html_url": "https://github.com/revolter",
        "followers_url": "https://api.github.com/users/revolter/followers",
        "following_url": "https://api.github.com/users/revolter/following{/other_user}",
        "gists_url": "https://api.github.com/users/revolter/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revolter/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revolter/subscriptions",
        "organizations_url": "https://api.github.com/users/revolter/orgs",
        "repos_url": "https://api.github.com/users/revolter/repos",
        "events_url": "https://api.github.com/users/revolter/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revolter/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 601343890,
          "node_id": "MDU6TGFiZWw2MDEzNDM4OTA=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/good%20first%20issue",
          "name": "good first issue",
          "color": "6f4fff",
          "default": true
        },
        {
          "id": 863458406,
          "node_id": "MDU6TGFiZWw4NjM0NTg0MDY=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20PR",
          "name": "has PR",
          "color": "5319e7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-11-07T10:48:56Z",
      "updated_at": "2018-11-10T08:53:31Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nFor this demo:\r\n\r\n[https://jsfiddle.net/2os9jken/](https://jsfiddle.net/2os9jken/)\r\n\r\nopening the console and running it throws the `Interpolation inside attributes has been removed. Use v-bind or the colon shorthand instead.` error for the `span`, but it should also throw it for the `slot`, as it has the exact same issue for its `name` attribute.\r\n\r\n### What does the proposed API look like?\r\nN/A\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9034",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9034/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9034/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9034/events",
      "html_url": "https://github.com/vuejs/vue/issues/9034",
      "id": 377935770,
      "node_id": "MDU6SXNzdWUzNzc5MzU3NzA=",
      "number": 9034,
      "title": "vnode reference to original component (reopened)",
      "user": {
        "login": "LukasBombach",
        "id": 2379652,
        "node_id": "MDQ6VXNlcjIzNzk2NTI=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2379652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LukasBombach",
        "html_url": "https://github.com/LukasBombach",
        "followers_url": "https://api.github.com/users/LukasBombach/followers",
        "following_url": "https://api.github.com/users/LukasBombach/following{/other_user}",
        "gists_url": "https://api.github.com/users/LukasBombach/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LukasBombach/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LukasBombach/subscriptions",
        "organizations_url": "https://api.github.com/users/LukasBombach/orgs",
        "repos_url": "https://api.github.com/users/LukasBombach/repos",
        "events_url": "https://api.github.com/users/LukasBombach/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LukasBombach/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-11-06T16:44:56Z",
      "updated_at": "2018-11-07T15:33:34Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nBecause we have to have lots of ads on our site we cannot hydrate our SSR'd page with VUE completely as the ads would break VUE. Also most of our site ist static and it would be stupid to ship our entire app for only some parts of our page being interactive.\r\n\r\nInstead we **partially hydrate** the page (with our own plugin https://github.com/spring-media/vue-plugin-moisturizer). For this we need to map SSR'd HTML to the corresponding VUE components, so we need to put some `data-attribute` in the HTML match them. \r\n\r\nWe use the `name` setting of a component for this,  so if I have component like this:\r\n\r\n```js\r\n{\r\n  name: 'my-component'\r\n}\r\n```\r\n\r\nthe html would read\r\n\r\n```html\r\n<div data-hydration-name=\"my-component\">...</div>\r\n```\r\n\r\n\r\nbut this does not work for 3rd party components. Anything we get without that ID we cannot hydrate. It would be great if we could find the component from a component's instance / vnode.\r\n\r\nThere is a `cid` property, but this is not the same on the server and on the client,  because we have a different number and oder of components on the client and server so we cannot use this.\r\n\r\nThere is a similiar issue for this here: https://github.com/vuejs/vue/issues/7213 but one of your members suggested to create a new issue because the old one would just not show up under your pile of issues.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nthis.$vnode.cuuid // hash based on the filename and path\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9010",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9010/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9010/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9010/events",
      "html_url": "https://github.com/vuejs/vue/issues/9010",
      "id": 376414621,
      "node_id": "MDU6SXNzdWUzNzY0MTQ2MjE=",
      "number": 9010,
      "title": "SSR error during $style injection on cached components",
      "user": {
        "login": "henriqemalheiros",
        "id": 23730762,
        "node_id": "MDQ6VXNlcjIzNzMwNzYy",
        "avatar_url": "https://avatars1.githubusercontent.com/u/23730762?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/henriqemalheiros",
        "html_url": "https://github.com/henriqemalheiros",
        "followers_url": "https://api.github.com/users/henriqemalheiros/followers",
        "following_url": "https://api.github.com/users/henriqemalheiros/following{/other_user}",
        "gists_url": "https://api.github.com/users/henriqemalheiros/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/henriqemalheiros/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/henriqemalheiros/subscriptions",
        "organizations_url": "https://api.github.com/users/henriqemalheiros/orgs",
        "repos_url": "https://api.github.com/users/henriqemalheiros/repos",
        "events_url": "https://api.github.com/users/henriqemalheiros/events{/privacy}",
        "received_events_url": "https://api.github.com/users/henriqemalheiros/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-11-01T14:25:37Z",
      "updated_at": "2019-04-16T06:13:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/henriqemalheiros/vue-ssr-cached-component-css-modules](https://github.com/henriqemalheiros/vue-ssr-cached-component-css-modules)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- `yarn install`\r\n- `yarn run ssr:build`\r\n- `yarn run ssr:start`\r\n- Open `http://localhost:8000/`\r\n- Refresh the page\r\n\r\nThe error is also reproducible in development mode with `yarn run ssr:serve`.\r\n\r\n### What is expected?\r\nThe app should render properly, as it rendered before refreshing the page.\r\n\r\n### What is actually happening?\r\n```\r\nerror during render : /\r\nTypeError: Cannot set property '$style' of undefined\r\n    at CachedComponent_injectStyles (src/components/CachedComponent.vue:8:0)\r\n    at hook (node_modules/vue-loader/lib/runtime/componentNormalizer.js:53:0)\r\n    at c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:7467:15\r\n    at c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:2487:40\r\n    at c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:7465:11\r\n    at c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:2487:40\r\n    at renderComponent (c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:7463:7)\r\n    at RenderContext.renderNode (c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:7418:5)\r\n    at RenderContext.next (c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:2436:14)\r\n    at cachedWrite (c:\\[...]\\vue-ssr-cached-component-css-modules\\node_modules\\vue-server-renderer\\build.js:2295:9)\r\n```\r\n\r\n---\r\nIf you remove the `serverCacheKey` from the cached component and try again, the app renders properly.\r\n\r\nOriginally I thought this was a Nuxt related issue (nuxt/nuxt.js#3868). I then forgot about the issue, since I ditched component caching, but now I was able to find the time to reproduce it with plain Vue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/9006",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/9006/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/9006/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/9006/events",
      "html_url": "https://github.com/vuejs/vue/pull/9006",
      "id": 375770770,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3MTM4NzM0",
      "number": 9006,
      "title": "refactor: remove duplicate code",
      "user": {
        "login": "zwwill",
        "id": 20720117,
        "node_id": "MDQ6VXNlcjIwNzIwMTE3",
        "avatar_url": "https://avatars1.githubusercontent.com/u/20720117?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/zwwill",
        "html_url": "https://github.com/zwwill",
        "followers_url": "https://api.github.com/users/zwwill/followers",
        "following_url": "https://api.github.com/users/zwwill/following{/other_user}",
        "gists_url": "https://api.github.com/users/zwwill/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/zwwill/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zwwill/subscriptions",
        "organizations_url": "https://api.github.com/users/zwwill/orgs",
        "repos_url": "https://api.github.com/users/zwwill/repos",
        "events_url": "https://api.github.com/users/zwwill/events{/privacy}",
        "received_events_url": "https://api.github.com/users/zwwill/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 321616881,
          "node_id": "MDU6TGFiZWwzMjE2MTY4ODE=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/in%20review",
          "name": "in review",
          "color": "f7c6c7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-10-31T02:23:19Z",
      "updated_at": "2019-02-21T19:00:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/9006",
        "html_url": "https://github.com/vuejs/vue/pull/9006",
        "diff_url": "https://github.com/vuejs/vue/pull/9006.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/9006.patch"
      },
      "body": "\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8996",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8996/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8996/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8996/events",
      "html_url": "https://github.com/vuejs/vue/issues/8996",
      "id": 374470178,
      "node_id": "MDU6SXNzdWUzNzQ0NzAxNzg=",
      "number": 8996,
      "title": "Allow <noscript> in Vue templates for SSR usage",
      "user": {
        "login": "brophdawg11",
        "id": 1609022,
        "node_id": "MDQ6VXNlcjE2MDkwMjI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1609022?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brophdawg11",
        "html_url": "https://github.com/brophdawg11",
        "followers_url": "https://api.github.com/users/brophdawg11/followers",
        "following_url": "https://api.github.com/users/brophdawg11/following{/other_user}",
        "gists_url": "https://api.github.com/users/brophdawg11/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brophdawg11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brophdawg11/subscriptions",
        "organizations_url": "https://api.github.com/users/brophdawg11/orgs",
        "repos_url": "https://api.github.com/users/brophdawg11/repos",
        "events_url": "https://api.github.com/users/brophdawg11/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brophdawg11/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 9,
      "created_at": "2018-10-26T17:05:43Z",
      "updated_at": "2019-05-24T09:49:31Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/brophdawg11/pen/OBdZyX](https://codepen.io/brophdawg11/pen/OBdZyX)\r\n\r\n\r\n### Steps to reproduce\r\nI'm opening this issue as a follow up to https://github.com/vuejs/vue/issues/8247, as I don't think the solution provided there is suitable for all use-cases.  In a fairly simple UI, where everything is relatively positioned and flows downward, it would likely be fine to include `<noscript>` outside the context of the Vue application, and it would render correctly above the entire app.\r\n\r\nHowever, there are plenty of other UI's that it may not be desirable or feasible to include `<noscript>` _outside_ of the Vue application context and display it properly.  The linked codepen shows a simple fixed-header layout, where including the `<noscript>` tag outside the Vue application context results in the `<noscript>` tag being hidden _behind_ the fixed header, where in reality it is intended to be rendered inside the main body content, and thus below the fixed header.  \r\n\r\nThe `<noscript>` outside the Vue context also has the unintended effect of pushing down the main content, which has a proper margin-top to account for the static-height fixed header.\r\n\r\nPer MDN, `<noscript>` is Flow Content (https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Flow_content), it is perfectly viable to exist outside the `<head>` (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript), and is perfectly valid to nest inside the DOM in a `<div>`, as div's allow Flow Content as their children (https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div).\r\n\r\nPlease reconsider the decision to not permit `noscript` tags in Vue templates.\r\n\r\n### What is expected?\r\n`<noscript>` elements should render properly in Vue templates\r\n\r\n### What is actually happening?\r\n`<noscript>` elements do not render properly in Vue templates and cause hydration issues when in SSR\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8976",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8976/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8976/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8976/events",
      "html_url": "https://github.com/vuejs/vue/issues/8976",
      "id": 372386708,
      "node_id": "MDU6SXNzdWUzNzIzODY3MDg=",
      "number": 8976,
      "title": "v-enter class is removed immediately when using animation transition",
      "user": {
        "login": "Tae69",
        "id": 16204739,
        "node_id": "MDQ6VXNlcjE2MjA0NzM5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/16204739?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Tae69",
        "html_url": "https://github.com/Tae69",
        "followers_url": "https://api.github.com/users/Tae69/followers",
        "following_url": "https://api.github.com/users/Tae69/following{/other_user}",
        "gists_url": "https://api.github.com/users/Tae69/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Tae69/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Tae69/subscriptions",
        "organizations_url": "https://api.github.com/users/Tae69/orgs",
        "repos_url": "https://api.github.com/users/Tae69/repos",
        "events_url": "https://api.github.com/users/Tae69/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Tae69/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-10-22T03:37:44Z",
      "updated_at": "2018-10-23T02:57:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/u9wryh32/2/embedded/result/#Result](https://jsfiddle.net/u9wryh32/2/embedded/result/#Result)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click 'toggle' button\r\n2. When the text component is still animating, inspect its class\r\n3. Got ``bounce-enter-active`` instead of ``bounce-enter bounce-enter-active``\r\n\r\n### What is expected?\r\nIt will have ``bounce-enter bounce-enter-active`` class\r\n\r\n### What is actually happening?\r\nIt only has ``bounce-enter-active`` class\r\n\r\n---\r\nThe docs stated\r\n>CSS animations are applied in the same way as CSS transitions, the difference being that v-enter is not removed immediately after the element is inserted, but on an animationend event.\r\n\r\nhttps://vuejs.org/v2/guide/transitions.html#CSS-Animations\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8969",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8969/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8969/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8969/events",
      "html_url": "https://github.com/vuejs/vue/issues/8969",
      "id": 371784816,
      "node_id": "MDU6SXNzdWUzNzE3ODQ4MTY=",
      "number": 8969,
      "title": "'inject' Properties are not added to the CombinedVueInstance type definition",
      "user": {
        "login": "StormBurpee",
        "id": 11025073,
        "node_id": "MDQ6VXNlcjExMDI1MDcz",
        "avatar_url": "https://avatars1.githubusercontent.com/u/11025073?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/StormBurpee",
        "html_url": "https://github.com/StormBurpee",
        "followers_url": "https://api.github.com/users/StormBurpee/followers",
        "following_url": "https://api.github.com/users/StormBurpee/following{/other_user}",
        "gists_url": "https://api.github.com/users/StormBurpee/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/StormBurpee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/StormBurpee/subscriptions",
        "organizations_url": "https://api.github.com/users/StormBurpee/orgs",
        "repos_url": "https://api.github.com/users/StormBurpee/repos",
        "events_url": "https://api.github.com/users/StormBurpee/events{/privacy}",
        "received_events_url": "https://api.github.com/users/StormBurpee/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-10-19T02:39:40Z",
      "updated_at": "2018-10-21T19:43:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rr18r3vm9p](https://codesandbox.io/s/rr18r3vm9p)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Copy Minimal reproduction link into a local environment, and run the webpack compilation process.\r\n\r\n**OR**\r\n\r\n1. Initialize a vue vm\r\n```typescript\r\nlet vm = new Vue({\r\n    el: \"#app\",\r\n    render: (h: any) => h(someComponent, {}),\r\n    provide: { service: { something: \"Hello, World\" } }\r\n});\r\n```\r\n2. Try and access service in a SFC\r\n\r\n```typescript\r\nexport default Vue.extend({\r\n    name: \"someComponent\",\r\n    inject: [\"service\"],\r\n    data() {\r\n        return {\r\n            accessService: this.service.something // Property 'service' does not exist on type CombinedVueInstance...\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n### What is expected?\r\nWhen declaring injections in a component in typescript, you should be able to access the injection with `this.injection`\r\n\r\n### What is actually happening?\r\nWhen accessing an injection in a vue single file component, it is currently throwing an error during the webpack compilation process, stating that the injection `Property 'injection' does not exist on type 'CombinedVueInstance<Vue...`\r\n\r\n---\r\n**Please note:** that the link to minimal reproduction won't show the error logs from the webpack compiling, as it will compile successfully, but with errors. This will need to be tested in a local environment to see what is happening. \r\n\r\nAs this is in typescript, we're currently using Webpack to compile it to a single file, and then use this on our application.\r\n\r\nThe compilation will complete successfully, however will print multiple errors to the console after compiling, about not being able to access properties, etc. When running in the browser it works successfully.\r\n\r\nWe've dug around in the `vue/types` folder, and to the best of our knowledge think that Inject should be a part of the `type DataDef` or something of this sort.\r\n\r\nIs there possibly a temporary workaround that we can use to avoid having these errors, until a fixed release is proposed?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8926",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8926/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8926/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8926/events",
      "html_url": "https://github.com/vuejs/vue/issues/8926",
      "id": 368869550,
      "node_id": "MDU6SXNzdWUzNjg4Njk1NTA=",
      "number": 8926,
      "title": "Child transitions are triggered when the parent element is hidden",
      "user": {
        "login": "BryceBarbara",
        "id": 24460210,
        "node_id": "MDQ6VXNlcjI0NDYwMjEw",
        "avatar_url": "https://avatars1.githubusercontent.com/u/24460210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BryceBarbara",
        "html_url": "https://github.com/BryceBarbara",
        "followers_url": "https://api.github.com/users/BryceBarbara/followers",
        "following_url": "https://api.github.com/users/BryceBarbara/following{/other_user}",
        "gists_url": "https://api.github.com/users/BryceBarbara/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/BryceBarbara/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/BryceBarbara/subscriptions",
        "organizations_url": "https://api.github.com/users/BryceBarbara/orgs",
        "repos_url": "https://api.github.com/users/BryceBarbara/repos",
        "events_url": "https://api.github.com/users/BryceBarbara/events{/privacy}",
        "received_events_url": "https://api.github.com/users/BryceBarbara/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-10-10T21:49:14Z",
      "updated_at": "2018-10-11T01:33:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/BryceBarbara/kv7espnq/](https://jsfiddle.net/BryceBarbara/kv7espnq/)\r\n\r\n### Steps to reproduce\r\n1. Click the \"Toggle Screen\" button.\r\n2. See that the first screen's content is faded out while the second screen's content is already visible.\r\n\r\n### What is expected?\r\nI would expect the transition to not trigger due to the fact that the parent has been hidden and does not have a transition on it.\r\n\r\n### What is actually happening?\r\nThe child element on the first screen is faded out after the second screen's content is already visible.\r\n\r\n---\r\nI assume this is some sort of element re-use situation because adding a key to either the first or second screen elements fixes it. I'm reporting this mainly to call attention to something that doesn't _seem_ intentional and that has very little information on it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8912",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8912/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8912/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8912/events",
      "html_url": "https://github.com/vuejs/vue/issues/8912",
      "id": 368211894,
      "node_id": "MDU6SXNzdWUzNjgyMTE4OTQ=",
      "number": 8912,
      "title": "A deliberately empty slot-scope attribute will not be rendered as a scoped slot",
      "user": {
        "login": "decademoon",
        "id": 5779055,
        "node_id": "MDQ6VXNlcjU3NzkwNTU=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/5779055?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/decademoon",
        "html_url": "https://github.com/decademoon",
        "followers_url": "https://api.github.com/users/decademoon/followers",
        "following_url": "https://api.github.com/users/decademoon/following{/other_user}",
        "gists_url": "https://api.github.com/users/decademoon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/decademoon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/decademoon/subscriptions",
        "organizations_url": "https://api.github.com/users/decademoon/orgs",
        "repos_url": "https://api.github.com/users/decademoon/repos",
        "events_url": "https://api.github.com/users/decademoon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/decademoon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2018-10-09T13:31:22Z",
      "updated_at": "2018-11-24T16:27:05Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/decademoon/50wL7mdz/759740/](https://jsfiddle.net/decademoon/50wL7mdz/759740/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n<foo>\r\n  <bar slot-scope/>\r\n</foo>\r\n```\r\n\r\n### What is expected?\r\n`<bar slot-scope>` should be a scoped slot.\r\n\r\n### What is actually happening?\r\n`<bar slot-scope>` is rendered as a child as if `slot-scope` were not present.\r\n\r\n---\r\nAs a workaround, I've been using a dummy variable to force it to be a scoped slot:\r\n\r\n```<bar slot-scope=\"scope\"/>```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8895",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8895/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8895/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8895/events",
      "html_url": "https://github.com/vuejs/vue/issues/8895",
      "id": 366669340,
      "node_id": "MDU6SXNzdWUzNjY2NjkzNDA=",
      "number": 8895,
      "title": "Non-breaking space acts different than other characters - outputs \"&nbsp;\" in template when passed via props",
      "user": {
        "login": "Eibx",
        "id": 295309,
        "node_id": "MDQ6VXNlcjI5NTMwOQ==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/295309?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eibx",
        "html_url": "https://github.com/Eibx",
        "followers_url": "https://api.github.com/users/Eibx/followers",
        "following_url": "https://api.github.com/users/Eibx/following{/other_user}",
        "gists_url": "https://api.github.com/users/Eibx/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Eibx/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Eibx/subscriptions",
        "organizations_url": "https://api.github.com/users/Eibx/orgs",
        "repos_url": "https://api.github.com/users/Eibx/repos",
        "events_url": "https://api.github.com/users/Eibx/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Eibx/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2018-10-04T08:07:44Z",
      "updated_at": "2018-11-23T13:08:56Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/756973/](https://jsfiddle.net/50wL7mdz/756973/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a new component that accepts a string prop.\r\n1. Display the prop within the component's template.\r\n1. Use the component in a Vue application and pass a string containing a non-breaking space character for the prop.\r\n\r\n### What is expected?\r\nThe output should contain a non breaking space\r\n\r\n### What is actually happening?\r\nThe output shows `&nbsp;`\r\n\r\n---\r\nIn the example provided I've made 3 cases\r\n\r\n- First case is that `&#160;` get turned into `&nbsp;`\r\n- Second case is that in a long list of UTF-8 characters only `NON-BREAKING SPACE` is escaped.\r\n- And third when getting the same list of characters, but retrieving it from a regular `HTMLElement` with `document.querySelector('#test').title` the character aren't escape.\r\n\r\n\r\n**Note**: When copying the non-breaking space character it might turn into a regular space in the clipboard. Therefor use https://en.wikipedia.org/wiki/Non-breaking_space#Keyboard_entry_methods to make sure how to insert the character.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8884",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8884/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8884/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8884/events",
      "html_url": "https://github.com/vuejs/vue/issues/8884",
      "id": 365540225,
      "node_id": "MDU6SXNzdWUzNjU1NDAyMjU=",
      "number": 8884,
      "title": "An API to allow replacing observer implementation with alternative implementation",
      "user": {
        "login": "mitar",
        "id": 585279,
        "node_id": "MDQ6VXNlcjU4NTI3OQ==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/585279?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mitar",
        "html_url": "https://github.com/mitar",
        "followers_url": "https://api.github.com/users/mitar/followers",
        "following_url": "https://api.github.com/users/mitar/following{/other_user}",
        "gists_url": "https://api.github.com/users/mitar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mitar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mitar/subscriptions",
        "organizations_url": "https://api.github.com/users/mitar/orgs",
        "repos_url": "https://api.github.com/users/mitar/repos",
        "events_url": "https://api.github.com/users/mitar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mitar/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-10-01T16:25:02Z",
      "updated_at": "2018-10-03T22:29:40Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### What problem does this feature solve?\r\nThis is a followup to https://github.com/vuejs/vue/pull/4652. For integration of Vue with existing Tracker-based Meteor apps, one approach how to assure fur compatibility is to implement Tracker on top of observer implementation. This has been proven to work great with 2.x version and it just needed a bit more access to Vue observer internals than what was already available.\r\n\r\nI would suggest that in 3.x there is a simple way to register an alternative Vue observer implementation. In this way 3rd party libraries could extend new Vue observer implementation with additional things and then register it back for Vue to use it.\r\n\r\n### What does the proposed API look like?\r\nIt could be something as simple as `Vue.useReactivity(module)`. It would be on `module`'s author to assure that the alternative implementation is compatible and works well with Vue.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8878",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8878/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8878/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8878/events",
      "html_url": "https://github.com/vuejs/vue/issues/8878",
      "id": 365348089,
      "node_id": "MDU6SXNzdWUzNjUzNDgwODk=",
      "number": 8878,
      "title": "Functional component not rendering named slot (following #8871)",
      "user": {
        "login": "nicolas-t",
        "id": 1765930,
        "node_id": "MDQ6VXNlcjE3NjU5MzA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1765930?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nicolas-t",
        "html_url": "https://github.com/nicolas-t",
        "followers_url": "https://api.github.com/users/nicolas-t/followers",
        "following_url": "https://api.github.com/users/nicolas-t/following{/other_user}",
        "gists_url": "https://api.github.com/users/nicolas-t/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nicolas-t/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nicolas-t/subscriptions",
        "organizations_url": "https://api.github.com/users/nicolas-t/orgs",
        "repos_url": "https://api.github.com/users/nicolas-t/repos",
        "events_url": "https://api.github.com/users/nicolas-t/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nicolas-t/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-10-01T08:00:47Z",
      "updated_at": "2019-03-05T19:42:44Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/p9mx85qpz0](https://codesandbox.io/s/p9mx85qpz0)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnothing in particular.\r\n\r\n### What is expected?\r\nIt should display `Hello World`  \r\n\r\n### What is actually happening?\r\nIt displays `Hello`\r\n\r\n---\r\nFollowing https://github.com/vuejs/vue/issues/8871 I made App.vue non-functional: \r\n\r\nIf you make Child.vue non-functional it works: https://codesandbox.io/s/pw5lzx2w90\r\n\r\nIf you use default (not named) slots it works: https://codesandbox.io/s/04jrp3y4ln\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8876",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8876/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8876/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8876/events",
      "html_url": "https://github.com/vuejs/vue/issues/8876",
      "id": 365341918,
      "node_id": "MDU6SXNzdWUzNjUzNDE5MTg=",
      "number": 8876,
      "title": "Binding the bind directive and change events to the <input/> tag doesn‘t work",
      "user": {
        "login": "rhliu228",
        "id": 23432878,
        "node_id": "MDQ6VXNlcjIzNDMyODc4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/23432878?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rhliu228",
        "html_url": "https://github.com/rhliu228",
        "followers_url": "https://api.github.com/users/rhliu228/followers",
        "following_url": "https://api.github.com/users/rhliu228/following{/other_user}",
        "gists_url": "https://api.github.com/users/rhliu228/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rhliu228/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rhliu228/subscriptions",
        "organizations_url": "https://api.github.com/users/rhliu228/orgs",
        "repos_url": "https://api.github.com/users/rhliu228/repos",
        "events_url": "https://api.github.com/users/rhliu228/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rhliu228/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-10-01T07:39:30Z",
      "updated_at": "2018-12-12T00:03:17Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/MoriGirl/50wL7mdz/755097/](https://jsfiddle.net/MoriGirl/50wL7mdz/755097/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nEnter two numbers less than 10(etc, 7 , 8) in succession twice, observe page display and console output.\r\n\r\n### What is expected?\r\nI originally expected the page and console to display 10 after each input.\r\n\r\n### What is actually happening?\r\nWhen I input numbers less than 10 for two consecutive times, such as ( 7, 8 ), it was observed that after the first input, the page and console display 10 at the same time, but after the second input, the page displays 8 and the console displays 10.\r\n\r\n---\r\n## reluctant solution\r\n1. Get the native input element and modify its value\r\n\r\n   *  use ref   \r\n```\r\n<input  :value='num' @change='handleChange' ref='inputnumber' />\r\n...\r\nhandleChange(event){\r\n   this.num=this.check(event.target.value);\r\n   this.$refs.inputnumber.value=this.num;\r\n}\r\n``` \r\n   *  use event  \r\n\r\n```\r\nhandleChange(event){\r\n    this.num=this.check(event.target.value);\r\n    event.target.value=this.num;\r\n}\r\n```\r\nbut if I replace the input element with a custom component, this may not work.\r\n2.  use both v-model and watch\r\n```\r\n<input  v-model.lazy='num' />  //.lazy: Data synchronization using the change event\r\n...\r\nwatch:{\r\n    num:function(v){\r\n      \tthis.num=this.check(v);\r\n    }\r\n},\r\n```\r\n\r\nI want to know why such  outputs appear and if there is a better solution.\r\nThank you！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8855",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8855/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8855/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8855/events",
      "html_url": "https://github.com/vuejs/vue/issues/8855",
      "id": 364615714,
      "node_id": "MDU6SXNzdWUzNjQ2MTU3MTQ=",
      "number": 8855,
      "title": "Check if tag is already in the window.customElements registry on top of checking config ignoredElements",
      "user": {
        "login": "halybee",
        "id": 5414652,
        "node_id": "MDQ6VXNlcjU0MTQ2NTI=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5414652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/halybee",
        "html_url": "https://github.com/halybee",
        "followers_url": "https://api.github.com/users/halybee/followers",
        "following_url": "https://api.github.com/users/halybee/following{/other_user}",
        "gists_url": "https://api.github.com/users/halybee/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/halybee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/halybee/subscriptions",
        "organizations_url": "https://api.github.com/users/halybee/orgs",
        "repos_url": "https://api.github.com/users/halybee/repos",
        "events_url": "https://api.github.com/users/halybee/events{/privacy}",
        "received_events_url": "https://api.github.com/users/halybee/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-09-27T19:13:16Z",
      "updated_at": "2019-04-24T20:48:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nWhen Vue is mounting, the function `isUnknownElement` is called and checks, among others, whether the element tag is in the list of `ignoredElements`. In the context of an app that uses multiple web components, we don't want to manually add every new component's tag to the `ignoredElements` list. Maintaining that list could quickly become a headache. If the  `isUnknownElement` also checks the custom elements registry, it could figure out that the element in question is not necessarily unknown.\r\n\r\n### What does the proposed API look like?\r\nThe API would stay the same, but on top of checking for `config.ignoredElements` in the function `isUnknownElement`, we would also check if `window.customElements.get(vnode.tag)` is defined or not. If it is defined, then we return false.\r\n\r\nI am happy to submit a pull request, I just wanted to discuss this first to make sure there aren't design constraints to adding something like this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8831",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8831/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8831/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8831/events",
      "html_url": "https://github.com/vuejs/vue/issues/8831",
      "id": 362989786,
      "node_id": "MDU6SXNzdWUzNjI5ODk3ODY=",
      "number": 8831,
      "title": "Using multiple selects with v-model and bound and unbound values causes value overriding",
      "user": {
        "login": "KelsamGames",
        "id": 7027838,
        "node_id": "MDQ6VXNlcjcwMjc4Mzg=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/7027838?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KelsamGames",
        "html_url": "https://github.com/KelsamGames",
        "followers_url": "https://api.github.com/users/KelsamGames/followers",
        "following_url": "https://api.github.com/users/KelsamGames/following{/other_user}",
        "gists_url": "https://api.github.com/users/KelsamGames/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KelsamGames/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KelsamGames/subscriptions",
        "organizations_url": "https://api.github.com/users/KelsamGames/orgs",
        "repos_url": "https://api.github.com/users/KelsamGames/repos",
        "events_url": "https://api.github.com/users/KelsamGames/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KelsamGames/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 49750488,
          "node_id": "MDU6TGFiZWw0OTc1MDQ4OA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/bug",
          "name": "bug",
          "color": "b60205",
          "default": true
        },
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-09-24T00:06:46Z",
      "updated_at": "2018-09-24T06:50:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/du578xc0/32/](https://jsfiddle.net/du578xc0/32/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nchange first select to \"Some\", then change newly displayed select. You will see that val2 is being set to the bound vals from the val1 select instead of it's own values.\r\n\r\nYou can change the first select to use the .number modifier on the v-model and exchange the bound number values for strings to fix this issue. (at least for this very specific desired effect).\r\n\r\nYou can \"fix\" the problem by either using v-bind:value on all values, or by using non-bound values on all values - but as far as I can tell, if you mix them, then it will cause this override bug\r\n\r\n### What is expected?\r\ndifferent values for each variable\r\n\r\n### What is actually happening?\r\nsecond variable is being overwritten with the first's value\r\n\r\n---\r\nThis was posted/discussed in the discord chat\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8829",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8829/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8829/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8829/events",
      "html_url": "https://github.com/vuejs/vue/issues/8829",
      "id": 362966933,
      "node_id": "MDU6SXNzdWUzNjI5NjY5MzM=",
      "number": 8829,
      "title": "On SSR, do not escape RAW nodes",
      "user": {
        "login": "sleewoo",
        "id": 9264860,
        "node_id": "MDQ6VXNlcjkyNjQ4NjA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/9264860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sleewoo",
        "html_url": "https://github.com/sleewoo",
        "followers_url": "https://api.github.com/users/sleewoo/followers",
        "following_url": "https://api.github.com/users/sleewoo/following{/other_user}",
        "gists_url": "https://api.github.com/users/sleewoo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sleewoo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sleewoo/subscriptions",
        "organizations_url": "https://api.github.com/users/sleewoo/orgs",
        "repos_url": "https://api.github.com/users/sleewoo/repos",
        "events_url": "https://api.github.com/users/sleewoo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sleewoo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2018-09-23T18:47:32Z",
      "updated_at": "2018-12-13T20:52:43Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### What problem does this feature solve?\r\nWhen rendering a script tag on server the content is escaped, breaking the js code.\r\n\r\n```html\r\n<script>\r\n  var x = \"y\";\r\n</script>\r\n```\r\n\r\nis rendered as \r\n\r\n```html\r\n<script>\r\n  var x = &quot;y&quot;;\r\n</script>\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nA solution would be to allow users to define what to be escaped, to override this map\r\n\r\nhttps://github.com/vuejs/vue/blob/833175e9d6e8f47367e49e1752cd149a677cdae8/src/platforms/web/server/util.js#L43\r\n\r\nOr a option to disable escaping et all here \r\n\r\nhttps://github.com/vuejs/vue/blob/52719ccab8fccffbdf497b96d3731dc86f04c1ce/src/server/optimizing-compiler/codegen.js#L228\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8825",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8825/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8825/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8825/events",
      "html_url": "https://github.com/vuejs/vue/issues/8825",
      "id": 362784736,
      "node_id": "MDU6SXNzdWUzNjI3ODQ3MzY=",
      "number": 8825,
      "title": "Non-Deterministic CSS ordering for extracted CSS in an SSR App",
      "user": {
        "login": "brophdawg11",
        "id": 1609022,
        "node_id": "MDQ6VXNlcjE2MDkwMjI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1609022?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brophdawg11",
        "html_url": "https://github.com/brophdawg11",
        "followers_url": "https://api.github.com/users/brophdawg11/followers",
        "following_url": "https://api.github.com/users/brophdawg11/following{/other_user}",
        "gists_url": "https://api.github.com/users/brophdawg11/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brophdawg11/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brophdawg11/subscriptions",
        "organizations_url": "https://api.github.com/users/brophdawg11/orgs",
        "repos_url": "https://api.github.com/users/brophdawg11/repos",
        "events_url": "https://api.github.com/users/brophdawg11/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brophdawg11/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2018-09-21T21:47:10Z",
      "updated_at": "2019-03-16T17:29:45Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/brophdawg11/vue-ssr-css-ordering](https://github.com/brophdawg11/vue-ssr-css-ordering)\r\n\r\n### Steps to reproduce\r\nReproduction steps are outlined in the README in the github repo.\r\n\r\n### What is expected?\r\nIn both development and production builds, the extracted CSS stylesheets should be loaded in a deterministic order.  \r\n\r\nI believe from reading various semi-related github issues that the order corresponds with the import order via webpack.  If that is the case for SSR as well, I would expect the order to be `app.css -> home.css -> about.css` since the `App.vue` file is loaded statically, and `Home.vue` and `About.vue` are loaded dynamically via routes in that order.\r\n\r\nEither way, I would expect global styles from `App.vue` to always be loaded first, followed by dynamic-route styles, allowing for a proper cascade. \r\n\r\n### What is actually happening?\r\nI think there are two issues at play:\r\n\r\n**Primary Issue**: In development mode, the `app.css` file is incorrectly loaded _after_ the `about.css` file, breaking the cascade for contents of `About.vue`.\r\n\r\n**Secondary Issue**: In production mode, the `app.css` file is properly loaded first, but then `about.css` is loaded prior to `home.css` even though they are imported in the reverse order and even when SSR-ing the home page.\r\n\r\n---\r\n\r\n### Additional Notes\r\n\r\nI'm trying to determine what feels like the optimal solution, and I think there are a few options, in a loose descending order of \"optimal\", and likely increasing order of feasibility:\r\n\r\n1. Global styles from the root `App.vue` component would always be loaded first, followed by the only the styles for the component matched for the current route.  Additional route-specific styles would be loaded on demand when routing.  I understand this is likely beyond the scope of the bundle renderer and potentially something to be implemented by the application itself.\r\n2. Global styles from the root `App.vue` component would always be loaded first, followed by styles for the current route-component, followed by styles for additional route-components.\r\n3. Global styles from the root `App.vue` component would always be loaded first, followed by styles for route-level components, in import-order (i.e., in route-declaration order)\r\n\r\n\r\n\r\nIt is also worth noting that my specific scenario in my larger app is slightly different, but I wasn't able to quite reproduce it exactly in this minimal repo, and I'm not quite sure why.  In my specific app case, I have an `App.vue` and 3 dynamic routes defined in the order:\r\n\r\n* Home\r\n* Page 1\r\n* Page 2\r\n\r\nIn development mode, my stylesheets are included in the order:   page1, app, home, page2.\r\n\r\nIn production mode, my stylesheets are included in the order:   home, page1, page2, app\r\n\r\nSo in the demo repo, the production build is correct insofar as it doesn't break the cascade for either route, and the development build is incorrect for only one of the routes.  \r\n\r\nIn my actual app, the development mode only breaks the cascade for the page1 route, while the production build breaks it for all routes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8822",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8822/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8822/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8822/events",
      "html_url": "https://github.com/vuejs/vue/issues/8822",
      "id": 362555988,
      "node_id": "MDU6SXNzdWUzNjI1NTU5ODg=",
      "number": 8822,
      "title": "Different functional componens has the same key",
      "user": {
        "login": "vedmaque",
        "id": 4355475,
        "node_id": "MDQ6VXNlcjQzNTU0NzU=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/4355475?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vedmaque",
        "html_url": "https://github.com/vedmaque",
        "followers_url": "https://api.github.com/users/vedmaque/followers",
        "following_url": "https://api.github.com/users/vedmaque/following{/other_user}",
        "gists_url": "https://api.github.com/users/vedmaque/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vedmaque/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vedmaque/subscriptions",
        "organizations_url": "https://api.github.com/users/vedmaque/orgs",
        "repos_url": "https://api.github.com/users/vedmaque/repos",
        "events_url": "https://api.github.com/users/vedmaque/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vedmaque/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-09-21T10:36:22Z",
      "updated_at": "2019-04-17T09:47:23Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/vedmaque/vue-functional-bug](https://github.com/vedmaque/vue-functional-bug)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) create `Component1`\r\n```\r\n<template functional>\r\n  <div class=\"a\">\r\n    <div class=\"b\">first (template)</div>\r\n    <div class=\"b\">component</div>\r\n  </div>\r\n</template>\r\n```\r\n2) create `Component2`\r\n```\r\n<template functional>\r\n  <div class=\"x\">\r\n    <div class=\"y\">second (template)</div>\r\n    <div class=\"y\">component</div>\r\n  </div>\r\n</template>\r\n```\r\n3) render them in App.\r\n```\r\n<template>\r\n  <div id=\"app\">\r\n    <component1 />\r\n    <component2 />\r\n  </div>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nEverything works fine\r\n\r\n### What is actually happening?\r\nVue warns about same key\r\n```\r\n[Vue warn]: Duplicate keys detected: '__static__0'. This may cause an update error.\r\n```\r\n\r\n---\r\nIf you create the same components from render function directly, it works fine, without duplicated keys (keys are `undefined` in this situation)\r\n```\r\n<script>\r\nexport default {\r\n  functional: true,\r\n  render(createElement) {\r\n    return createElement(\"div\", {\r\n        staticClass: \"a\"\r\n    }, [createElement(\"div\", {\r\n        staticClass: \"b\"\r\n    }, [\"first\"]), createElement(\"div\", {\r\n        staticClass: \"b\"\r\n    }, [\"component\"])])\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nThis image shows the difference in VNode objects.\r\n![screenshot](https://github.com/vedmaque/vue-functional-bug/raw/master/functional-bug.png)\r\n\r\nMoreover, if `Component1` looks likes this, it works fine too.\r\n```\r\n<template functional>\r\n  <div class=\"a\">first (template) component</div>\r\n</template>\r\n```\r\n\r\nVue Template Exporer will go crazy too if you try to compile `Component1`\r\nhttps://template-explorer.vuejs.org/#%3Cdiv%20class%3D%22a%22%3E%0A%20%20%3Cdiv%20class%3D%22b%22%3Efirst%20(template)%3C%2Fdiv%3E%0A%20%20%3Cdiv%20class%3D%22b%22%3Ecomponent%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8819",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8819/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8819/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8819/events",
      "html_url": "https://github.com/vuejs/vue/issues/8819",
      "id": 362411183,
      "node_id": "MDU6SXNzdWUzNjI0MTExODM=",
      "number": 8819,
      "title": "Inactive keep-alive component keeps updating if bound to nested properties",
      "user": {
        "login": "Razenpok",
        "id": 8434406,
        "node_id": "MDQ6VXNlcjg0MzQ0MDY=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/8434406?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Razenpok",
        "html_url": "https://github.com/Razenpok",
        "followers_url": "https://api.github.com/users/Razenpok/followers",
        "following_url": "https://api.github.com/users/Razenpok/following{/other_user}",
        "gists_url": "https://api.github.com/users/Razenpok/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Razenpok/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Razenpok/subscriptions",
        "organizations_url": "https://api.github.com/users/Razenpok/orgs",
        "repos_url": "https://api.github.com/users/Razenpok/repos",
        "events_url": "https://api.github.com/users/Razenpok/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Razenpok/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-09-21T00:06:46Z",
      "updated_at": "2018-09-25T15:30:54Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://refactoring.ninja/vue-v-if-keep-alive/](https://refactoring.ninja/vue-v-if-keep-alive/)\r\nhttps://github.com/Razenpok/vue-v-if-keep-alive\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Press \"Hide labels\"\r\n2. Open dev tools\r\n3. Select DoesUpdate component\r\n4. Press \"Add stuff\"\r\n\r\n### What is expected?\r\n`player.money` remains the same\r\n\r\n### What is actually happening?\r\n`player.money` goes up\r\n[![Image from Gyazo](https://i.gyazo.com/893b9067b540323d582bbd328ebd6ff4.gif)](https://gyazo.com/893b9067b540323d582bbd328ebd6ff4)\r\n\r\n\r\n---\r\nComponent \"DoesntUpdate\" doesn't update on \"Add stuff\" as expected - it is bound to `lives` property which is on top level of `data`.\r\n\r\nThis isn't a dev tools issue, as I observe the same behavior with devtools disabled\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8805",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8805/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8805/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8805/events",
      "html_url": "https://github.com/vuejs/vue/issues/8805",
      "id": 360776124,
      "node_id": "MDU6SXNzdWUzNjA3NzYxMjQ=",
      "number": 8805,
      "title": "HTML entities in attributes are not always decoded for string templates",
      "user": {
        "login": "johnnymijnhout",
        "id": 20085533,
        "node_id": "MDQ6VXNlcjIwMDg1NTMz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/20085533?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/johnnymijnhout",
        "html_url": "https://github.com/johnnymijnhout",
        "followers_url": "https://api.github.com/users/johnnymijnhout/followers",
        "following_url": "https://api.github.com/users/johnnymijnhout/following{/other_user}",
        "gists_url": "https://api.github.com/users/johnnymijnhout/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/johnnymijnhout/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/johnnymijnhout/subscriptions",
        "organizations_url": "https://api.github.com/users/johnnymijnhout/orgs",
        "repos_url": "https://api.github.com/users/johnnymijnhout/repos",
        "events_url": "https://api.github.com/users/johnnymijnhout/events{/privacy}",
        "received_events_url": "https://api.github.com/users/johnnymijnhout/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-09-17T08:57:57Z",
      "updated_at": "2018-10-01T15:48:58Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sf9cg0db/](https://jsfiddle.net/sf9cg0db/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry to dynamically load an input field with a value that contains an encoded single quote (&amp;#39;) as plain HTML. Normally the input field will display the single quote in the input box. However, Vue shows the &amp;#39; in the input box. \r\n\r\n~~I tested this with multiple encoded chars, and everything works correctly, except for the single quote.~~ As stated by @HcySunYang, all entities except the 6 he listed have this issue.\r\n\r\n### What is expected?\r\nA single quote is shown in the input field when loaded async with Vue\r\n\r\n### What is actually happening?\r\n&amp;#39; is show in the input field when loaded async with Vue\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8785",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8785/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8785/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8785/events",
      "html_url": "https://github.com/vuejs/vue/issues/8785",
      "id": 359139444,
      "node_id": "MDU6SXNzdWUzNTkxMzk0NDQ=",
      "number": 8785,
      "title": "Race condition in transition-group",
      "user": {
        "login": "nkovacs",
        "id": 2269242,
        "node_id": "MDQ6VXNlcjIyNjkyNDI=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2269242?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nkovacs",
        "html_url": "https://github.com/nkovacs",
        "followers_url": "https://api.github.com/users/nkovacs/followers",
        "following_url": "https://api.github.com/users/nkovacs/following{/other_user}",
        "gists_url": "https://api.github.com/users/nkovacs/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nkovacs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nkovacs/subscriptions",
        "organizations_url": "https://api.github.com/users/nkovacs/orgs",
        "repos_url": "https://api.github.com/users/nkovacs/repos",
        "events_url": "https://api.github.com/users/nkovacs/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nkovacs/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-09-11T17:10:11Z",
      "updated_at": "2018-09-12T09:34:33Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nkovacs/Lskfredn/](https://jsfiddle.net/nkovacs/Lskfredn/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click the add button\r\n\r\n\r\n### What is expected?\r\nthe animation should work properly, and animation classes should be cleaned up\r\n\r\n### What is actually happening?\r\nthe enter animation doesn't work and the new item's element keeps the `list-enter-to` class forever\r\n\r\n---\r\nThe style tag binding triggers a second rerender of the transition-group component between the transition-group setting `_enterCb` on the entering new child and `nextFrame` triggering its callback. `prevChildren` is updated to include the new item, and `update` calls the pending `_enterCb` callback. Then after that, `nextFrame` triggers, but because `_enterCb`  can only be called once, it won't be called, so the `enter-to` class will remain on the element.\r\n\r\nThis only happens if the transition-group has a move transition.\r\n\r\nThe bug also occurs if the elements are changed between `update` and `nextFrame`: https://jsfiddle.net/nkovacs/cnjso1h5/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8784",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8784/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8784/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8784/events",
      "html_url": "https://github.com/vuejs/vue/issues/8784",
      "id": 359138529,
      "node_id": "MDU6SXNzdWUzNTkxMzg1Mjk=",
      "number": 8784,
      "title": "Oddity with JS transition hooks used in combination with CSS",
      "user": {
        "login": "alexdilley",
        "id": 22343,
        "node_id": "MDQ6VXNlcjIyMzQz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/22343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexdilley",
        "html_url": "https://github.com/alexdilley",
        "followers_url": "https://api.github.com/users/alexdilley/followers",
        "following_url": "https://api.github.com/users/alexdilley/following{/other_user}",
        "gists_url": "https://api.github.com/users/alexdilley/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alexdilley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alexdilley/subscriptions",
        "organizations_url": "https://api.github.com/users/alexdilley/orgs",
        "repos_url": "https://api.github.com/users/alexdilley/repos",
        "events_url": "https://api.github.com/users/alexdilley/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alexdilley/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-09-11T17:07:24Z",
      "updated_at": "2018-09-12T09:46:47Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/6x4k5vrrkn](https://codesandbox.io/s/6x4k5vrrkn)\r\n\r\n### Steps to reproduce\r\nRemove the [unused] `done` parameter from the `leave` callback signature in `SideSheet.vue`.\r\n\r\n### What is expected?\r\nThe component to transition both on enter and leave.\r\n\r\n![want](https://user-images.githubusercontent.com/22343/45375530-28221900-b5ed-11e8-90ca-f7eff6d20bc8.gif)\r\n\r\n### What is actually happening?\r\nThe component enters immediately (without transitioning).\r\n\r\n![get](https://user-images.githubusercontent.com/22343/45375595-5bfd3e80-b5ed-11e8-8894-7c839df72cb3.gif)\r\n\r\n---\r\nThe `done` callback shouldn't be needed if the transition duration is implicit in CSS (as noted in the docs). However, by retaining the `done` parameter in the function signature it is unclear why it should \"work\" (since it's unused within the function definition itself).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8767",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8767/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8767/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8767/events",
      "html_url": "https://github.com/vuejs/vue/issues/8767",
      "id": 357261235,
      "node_id": "MDU6SXNzdWUzNTcyNjEyMzU=",
      "number": 8767,
      "title": "Allow array/object binding for all (or specific a11y related) attributes",
      "user": {
        "login": "thedamon",
        "id": 1375267,
        "node_id": "MDQ6VXNlcjEzNzUyNjc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1375267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thedamon",
        "html_url": "https://github.com/thedamon",
        "followers_url": "https://api.github.com/users/thedamon/followers",
        "following_url": "https://api.github.com/users/thedamon/following{/other_user}",
        "gists_url": "https://api.github.com/users/thedamon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thedamon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thedamon/subscriptions",
        "organizations_url": "https://api.github.com/users/thedamon/orgs",
        "repos_url": "https://api.github.com/users/thedamon/repos",
        "events_url": "https://api.github.com/users/thedamon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thedamon/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2018-09-05T14:38:36Z",
      "updated_at": "2018-09-11T05:38:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nThe docs state that we have special functionality `when v-bind is used with class and style`. These are really useful because class and style are often references to other things. That exact use-case applies to a lot of attributes that are involved in semantic and accessible markup.\r\n\r\nFor instance, the `aria-describedby` attribute which accepts a list of IDs and must have correct spacing to be compatible with all screenreaders; this list is often dynamic and often controlled externally so we would potentially need to combined local describedby with some coming in externally.\r\n\r\nDoing\r\n```\r\n:aria-describedby=\"trim(`${describedBy} ${componentId}-affix`)\"\r\n```\r\nworks, but if describedBy is a Boolean it would have to be evaluated separately to avoid printing 'false'. Essentially we have to rebuild whatever beautiful easiness the Vue engine already does for class and style in order to make sure our code is semantic.\r\n\r\nAttributes that would greatly benefit from this would be most [aria relationship attributes](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques#Relationship_attributes) as well as non-aria relationship type attributes like the `headers` attribute on a table cell.\r\n\r\n```\r\nreturn ['error', 'hint']\r\n        .filter(prop => this[prop])\r\n        .map(prop => `${this.componentId}-${prop}`)\r\n        .join(' ').trim();\r\n```\r\nI have been doing a lot of weird code to get proper strings based on the values of nested data and realized this exact logic is already hidden somewhere in Vue.js. I think writing accessible code is extremely important and Vue should make it as simple as possible to do so. This (and perhaps a community standard way to set predictible IDs automatically) would make establishing semantic relationships between elements/components (the main accessibility challenge with dynamic js driven interfaces that are so popular these days) much simpler.\r\n\r\nBeing able to update the docs to call out these important attributes would be a great opportunity to push people toward writing more accessible code as well.\r\n\r\n### What does the proposed API look like?\r\n```\r\n:aria-describedby=\"[describedBy, `${componentId}-affix`]\"\r\n```\r\n\r\nNot sure if there are specific issues with just allowing any attribute to behave this way, but that would be my preferred solution. If that is too difficult or causes particular performance concerns then adding that behaviour to specific attributes (those called out above, but I would have to review all valid html attributes to see which would make sense) would be a good alternative solution.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8766",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8766/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8766/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8766/events",
      "html_url": "https://github.com/vuejs/vue/issues/8766",
      "id": 357235902,
      "node_id": "MDU6SXNzdWUzNTcyMzU5MDI=",
      "number": 8766,
      "title": "Lag during render when using cross sub-array",
      "user": {
        "login": "lalmat",
        "id": 2410437,
        "node_id": "MDQ6VXNlcjI0MTA0Mzc=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2410437?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lalmat",
        "html_url": "https://github.com/lalmat",
        "followers_url": "https://api.github.com/users/lalmat/followers",
        "following_url": "https://api.github.com/users/lalmat/following{/other_user}",
        "gists_url": "https://api.github.com/users/lalmat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lalmat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lalmat/subscriptions",
        "organizations_url": "https://api.github.com/users/lalmat/orgs",
        "repos_url": "https://api.github.com/users/lalmat/repos",
        "events_url": "https://api.github.com/users/lalmat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lalmat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-09-05T13:42:44Z",
      "updated_at": "2018-09-06T22:53:06Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Lalmat/eywraw8t/336389/](https://jsfiddle.net/Lalmat/eywraw8t/336389/)\r\n\r\n### Steps to reproduce\r\nI've isolated the bug here : https://jsfiddle.net/Lalmat/eywraw8t/336389/\r\n\r\nTo reproduce :\r\n1) Try to hide/show the hello world message, the redraw is instant\r\n2) Use the load data button\r\n3) Try to hide/show the hello world message, there's a lag that is fully dependant of you CPU velocity. \r\n\r\nIt seems that there's a setTimeout inside vue that cause this lag\r\n\r\n### What is expected?\r\nInstant redraw\r\n\r\n### What is actually happening?\r\nLag during redraw depending of computer CPU\r\n\r\n---\r\nI use cross arrays to avoid using a toggle function. I'm completely aware that this code is kind of tricky but I can't understand why there's a lag...\r\n\r\nThis is why I follow this to experts :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8762",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8762/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8762/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8762/events",
      "html_url": "https://github.com/vuejs/vue/issues/8762",
      "id": 357123451,
      "node_id": "MDU6SXNzdWUzNTcxMjM0NTE=",
      "number": 8762,
      "title": "Key Event wrongly triggered for unknown Modifier/Alias/Keycode on every Key in Safari 9",
      "user": {
        "login": "cb109",
        "id": 6052590,
        "node_id": "MDQ6VXNlcjYwNTI1OTA=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/6052590?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cb109",
        "html_url": "https://github.com/cb109",
        "followers_url": "https://api.github.com/users/cb109/followers",
        "following_url": "https://api.github.com/users/cb109/following{/other_user}",
        "gists_url": "https://api.github.com/users/cb109/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cb109/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cb109/subscriptions",
        "organizations_url": "https://api.github.com/users/cb109/orgs",
        "repos_url": "https://api.github.com/users/cb109/repos",
        "events_url": "https://api.github.com/users/cb109/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cb109/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-09-05T08:39:03Z",
      "updated_at": "2018-09-07T06:02:08Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/cb109/pen/xarvBZ](https://codepen.io/cb109/pen/xarvBZ)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nPlease open the codepen link in Safari 9 on iOS, which is where I observed the bug (works fine in Chrome 68 on Ubuntu 18).\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nThere are two inputs, the first working as expected, the second showing some weird behaviour:\r\n\r\nThe first textfield has a handler to fire only when pressing escape. Typing should work as expected, pressing escape while focused should clear the input.\r\n\r\nThe second textfield has a handler for an unknown key code by using an unknown key modifier alias. Typing should work the same as for the first input.\r\n\r\n### What is actually happening?\r\nTyping into the second input in Safari 9 on iOS it will always trigger the `@keyup` handler, thus clearing the input while typing. This feels wrong.\r\n\r\nIMHO this should not happen. If a key modifier-alias/code is not recognized, it should not be triggered by any key.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8759",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8759/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8759/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8759/events",
      "html_url": "https://github.com/vuejs/vue/issues/8759",
      "id": 357051424,
      "node_id": "MDU6SXNzdWUzNTcwNTE0MjQ=",
      "number": 8759,
      "title": "Style binding: implicitly assign 'px' as the default unit for numeric values for certain css properties",
      "user": {
        "login": "julian-ca",
        "id": 33974162,
        "node_id": "MDQ6VXNlcjMzOTc0MTYy",
        "avatar_url": "https://avatars1.githubusercontent.com/u/33974162?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/julian-ca",
        "html_url": "https://github.com/julian-ca",
        "followers_url": "https://api.github.com/users/julian-ca/followers",
        "following_url": "https://api.github.com/users/julian-ca/following{/other_user}",
        "gists_url": "https://api.github.com/users/julian-ca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/julian-ca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/julian-ca/subscriptions",
        "organizations_url": "https://api.github.com/users/julian-ca/orgs",
        "repos_url": "https://api.github.com/users/julian-ca/repos",
        "events_url": "https://api.github.com/users/julian-ca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/julian-ca/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 300024015,
          "node_id": "MDU6TGFiZWwzMDAwMjQwMTU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/discussion",
          "name": "discussion",
          "color": "d4c5f9",
          "default": false
        },
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 6,
      "created_at": "2018-09-05T03:24:44Z",
      "updated_at": "2018-12-06T02:18:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nWhen assigning values to a CSS property via style binding like\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : width}\"></div>\r\n````\r\n\r\nor using the shorthand syntax...\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width}\"></div>\r\n````\r\n\r\nthis will actually not gonna work because we need to explicitly set the `unit`:\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : width + 'px'}\"></div>\r\n````\r\n\r\nor via interpolation...\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : `${width}px`}\"></div>\r\n````\r\n\r\nNow our code becomes more verbose. Combining all the number of occurrences of such binding, it's becoming ridiculous.\r\n\r\nI'm not sure if currently there is an elegant solution for this, but if there is. It would be also good if it is referenced in in the [docs](https://vuejs.org/v2/guide/class-and-style.html).\r\n\r\nIn React, this is the default behavior. It will add 'px' if the `unit` is not specified.\r\n\r\n### What does the proposed API look like?\r\nFor common css properties like `width` and `height`, having vue implicitly assign 'px' to the value it would definitely make our code much more cleaner.\r\n\r\nThis code...\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width}\"></div>\r\n````\r\n\r\nwill be interpreted as:\r\n\r\n````html\r\n    <div class=\"d-inline-block\" :style=\"{width : width + 'px'}\"></div>\r\n````\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8757",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8757/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8757/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8757/events",
      "html_url": "https://github.com/vuejs/vue/issues/8757",
      "id": 356987125,
      "node_id": "MDU6SXNzdWUzNTY5ODcxMjU=",
      "number": 8757,
      "title": "Add a way to check if a component responds to an event, or make vm._events public",
      "user": {
        "login": "lehni",
        "id": 213275,
        "node_id": "MDQ6VXNlcjIxMzI3NQ==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/213275?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lehni",
        "html_url": "https://github.com/lehni",
        "followers_url": "https://api.github.com/users/lehni/followers",
        "following_url": "https://api.github.com/users/lehni/following{/other_user}",
        "gists_url": "https://api.github.com/users/lehni/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lehni/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lehni/subscriptions",
        "organizations_url": "https://api.github.com/users/lehni/orgs",
        "repos_url": "https://api.github.com/users/lehni/repos",
        "events_url": "https://api.github.com/users/lehni/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lehni/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 12,
      "created_at": "2018-09-04T21:44:00Z",
      "updated_at": "2018-11-18T15:20:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\n\r\nIt would be nice to be able to check if a component responds to a given event or not. We can already do so for listeners declared in the template through the `vm.$listeners` object, but the ones registered with `vm.$on()` / `vm.$off()` don't show up in this object, they are stored in the private `vm._events` object.\r\n\r\nI would like to suggest to either add a function that checks if a component responds to a given event, or to make `vm._events` public, and call it `vm.$events`\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\nA method called `vm.$responds(event)` could be considered, returning `true` if a component responds to a given event, `false` otherwise. If an array of strings is passed to this method instead of a string, it could return `true` if the component responds to some of these events.\r\n\r\nAlternatively, the interface could simply be `vm.$events`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8738",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8738/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8738/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8738/events",
      "html_url": "https://github.com/vuejs/vue/issues/8738",
      "id": 355956360,
      "node_id": "MDU6SXNzdWUzNTU5NTYzNjA=",
      "number": 8738,
      "title": "set the templateRenderer.publicPath on the fly?  [vue-server-render]",
      "user": {
        "login": "loviselu",
        "id": 1033382,
        "node_id": "MDQ6VXNlcjEwMzMzODI=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1033382?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/loviselu",
        "html_url": "https://github.com/loviselu",
        "followers_url": "https://api.github.com/users/loviselu/followers",
        "following_url": "https://api.github.com/users/loviselu/following{/other_user}",
        "gists_url": "https://api.github.com/users/loviselu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/loviselu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/loviselu/subscriptions",
        "organizations_url": "https://api.github.com/users/loviselu/orgs",
        "repos_url": "https://api.github.com/users/loviselu/repos",
        "events_url": "https://api.github.com/users/loviselu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/loviselu/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-08-31T12:13:18Z",
      "updated_at": "2019-02-09T07:54:38Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nIn some case, I need to set the publicPath base on the runtime. For example, I need to set the publicPath base on request.url and the environment。\r\n\r\n\r\nBut now I can only edit the source code to support that. So, how i wonder if it can be implemented officially. :)\r\n\r\n\r\nbtw, webpack support set the publicPath on the fly. [ref](https://webpack.js.org/guides/public-path/#on-the-fly)\r\n\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst bundleRenderer = createBundleRenderer(serverBundle, {\r\n    template,\r\n    clientManifest,\r\n    runInNewContext: false\r\n})\r\n\r\n//request handler\r\nmodule.exports = async (request, response) => {\r\n\r\n    const hostname = request.REQUEST.hostname;\r\n    if(devMode) {\r\n        domain = `${hostname}/proxy/`   cdnDomain;\r\n    } else {\r\n        domain = cdnDomain;\r\n    }\r\n\r\n    bundleRenderer.renderer.templateRenderer.publicPath = domain;\r\n\r\n    const html = await bundleRenderer.renderToString(context)\r\n    response.end(html)\r\n    \r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8737",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8737/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8737/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8737/events",
      "html_url": "https://github.com/vuejs/vue/issues/8737",
      "id": 355950549,
      "node_id": "MDU6SXNzdWUzNTU5NTA1NDk=",
      "number": 8737,
      "title": "2 transition-groups with different tags   v-if / v-else = Cannot read property '$vnode' of null",
      "user": {
        "login": "Mboulianne",
        "id": 18729439,
        "node_id": "MDQ6VXNlcjE4NzI5NDM5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/18729439?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Mboulianne",
        "html_url": "https://github.com/Mboulianne",
        "followers_url": "https://api.github.com/users/Mboulianne/followers",
        "following_url": "https://api.github.com/users/Mboulianne/following{/other_user}",
        "gists_url": "https://api.github.com/users/Mboulianne/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Mboulianne/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Mboulianne/subscriptions",
        "organizations_url": "https://api.github.com/users/Mboulianne/orgs",
        "repos_url": "https://api.github.com/users/Mboulianne/repos",
        "events_url": "https://api.github.com/users/Mboulianne/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Mboulianne/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        },
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-08-31T11:52:29Z",
      "updated_at": "2018-08-31T16:18:12Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/BOpJZb](https://codepen.io/anon/pen/BOpJZb)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1- Open the console\r\n2- Click the button\r\n\r\n### What is expected?\r\nIn fact I don't know.  I would expect not to see the error but I'm thinking maybe I'm doing something wrong. \r\n\r\n### What is actually happening?\r\nCannot read property '$vnode' of null appears in the console\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8734",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8734/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8734/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8734/events",
      "html_url": "https://github.com/vuejs/vue/pull/8734",
      "id": 355864363,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyMjkzMDY3",
      "number": 8734,
      "title": "fix(#8728): only execute the dependArray function once",
      "user": {
        "login": "HcySunYang",
        "id": 14146560,
        "node_id": "MDQ6VXNlcjE0MTQ2NTYw",
        "avatar_url": "https://avatars2.githubusercontent.com/u/14146560?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HcySunYang",
        "html_url": "https://github.com/HcySunYang",
        "followers_url": "https://api.github.com/users/HcySunYang/followers",
        "following_url": "https://api.github.com/users/HcySunYang/following{/other_user}",
        "gists_url": "https://api.github.com/users/HcySunYang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/HcySunYang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/HcySunYang/subscriptions",
        "organizations_url": "https://api.github.com/users/HcySunYang/orgs",
        "repos_url": "https://api.github.com/users/HcySunYang/repos",
        "events_url": "https://api.github.com/users/HcySunYang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/HcySunYang/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 321616881,
          "node_id": "MDU6TGFiZWwzMjE2MTY4ODE=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/in%20review",
          "name": "in review",
          "color": "f7c6c7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2018-08-31T07:08:26Z",
      "updated_at": "2019-02-21T19:00:51Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/8734",
        "html_url": "https://github.com/vuejs/vue/pull/8734",
        "diff_url": "https://github.com/vuejs/vue/pull/8734.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/8734.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: This PR is not a bug fix, but a performance improvement for issue #8728.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nThe `newDepIds` property of each Watcher instance object holds all the dependencies collected by this evaluation. We can prevent the `dependArray` function from being called multiple times by checking if the dependency has been collected.\r\n"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8733",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8733/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8733/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8733/events",
      "html_url": "https://github.com/vuejs/vue/issues/8733",
      "id": 355627594,
      "node_id": "MDU6SXNzdWUzNTU2Mjc1OTQ=",
      "number": 8733,
      "title": "Vue treat every element attribute named like 'v-[something]' as directive",
      "user": {
        "login": "mcekiera",
        "id": 11913796,
        "node_id": "MDQ6VXNlcjExOTEzNzk2",
        "avatar_url": "https://avatars3.githubusercontent.com/u/11913796?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mcekiera",
        "html_url": "https://github.com/mcekiera",
        "followers_url": "https://api.github.com/users/mcekiera/followers",
        "following_url": "https://api.github.com/users/mcekiera/following{/other_user}",
        "gists_url": "https://api.github.com/users/mcekiera/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mcekiera/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mcekiera/subscriptions",
        "organizations_url": "https://api.github.com/users/mcekiera/orgs",
        "repos_url": "https://api.github.com/users/mcekiera/repos",
        "events_url": "https://api.github.com/users/mcekiera/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mcekiera/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-08-30T15:04:13Z",
      "updated_at": "2018-08-31T16:16:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/wf48v9de/3/](http://jsfiddle.net/wf48v9de/3/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle and look at console.\r\n\r\n### What is expected?\r\nIf there is not registered directive named 'v-fake', Vue should ignore this attribute of an element.\r\n\r\n### What is actually happening?\r\nVue treat every 'v-[something]' attribute as directive, regardless if it is registered globally or locally, or not at all. It is trying to compute the value of 'v-' beginning attribute, and in effect throws TypeError, as it doesn't find property named like string passed to attribute. \r\n\r\n---\r\nif it is intentional, there should be information about such behavior in Vue docs. However in my opinion it should ignore such attributes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8730",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8730/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8730/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8730/events",
      "html_url": "https://github.com/vuejs/vue/issues/8730",
      "id": 355263055,
      "node_id": "MDU6SXNzdWUzNTUyNjMwNTU=",
      "number": 8730,
      "title": "Dev build console error when using index in :key value with v-for and transitions",
      "user": {
        "login": "megacromulent",
        "id": 40240855,
        "node_id": "MDQ6VXNlcjQwMjQwODU1",
        "avatar_url": "https://avatars2.githubusercontent.com/u/40240855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/megacromulent",
        "html_url": "https://github.com/megacromulent",
        "followers_url": "https://api.github.com/users/megacromulent/followers",
        "following_url": "https://api.github.com/users/megacromulent/following{/other_user}",
        "gists_url": "https://api.github.com/users/megacromulent/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/megacromulent/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/megacromulent/subscriptions",
        "organizations_url": "https://api.github.com/users/megacromulent/orgs",
        "repos_url": "https://api.github.com/users/megacromulent/repos",
        "events_url": "https://api.github.com/users/megacromulent/events{/privacy}",
        "received_events_url": "https://api.github.com/users/megacromulent/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 81203481,
          "node_id": "MDU6TGFiZWw4MTIwMzQ4MQ==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/contribution%20welcome",
          "name": "contribution welcome",
          "color": "009800",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-08-29T17:38:13Z",
      "updated_at": "2018-09-01T11:14:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nCurrently there is no obvious way to debug an error when including the index value in v-bind:key with v-for when using transitions. This causes erratic and unexpected behavior from transitions (and I would suspect other side effects, but these are untested).\r\n\r\nThis feature would alert the developer that they have used index value in a place where it will cause errors with transitions.\r\n\r\n**Example error:**\r\n\r\nThis example should illustrate how difficult it is to determine why the v-for combined with transition-group fails.\r\n\r\nIn the example below there are 3 uses of v-for with :key. (1) one works fine, it doesn't include index in the :key value. (2) uses index as the key (ie, v-bind:key=\"index\"). (3) uses a concatenated version (v-bind:key=\"item  '_' index\"\r\n\r\nhttps://codepen.io/megacromulent/pen/gdMYLx?editors=1010\r\n\r\nNote: this behavior was thought to be a bug because of lack of documentation on this behavior ( #8718 ) and having a console log entry would have solved the confusion instantly during development, instead of hours of debugging and reporting.\r\n\r\n### What does the proposed API look like?\r\nCheck to see if the index value is used anywhere in :key, and then check if a transition is being used, if so, then display console error, or at least a warning.\r\n\r\nThe proposal is for the dev builds only, so no additions/expansions to the API are needed for the production builds.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8728",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8728/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8728/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8728/events",
      "html_url": "https://github.com/vuejs/vue/issues/8728",
      "id": 355056901,
      "node_id": "MDU6SXNzdWUzNTUwNTY5MDE=",
      "number": 8728,
      "title": "An anti-pattern in computed property may cause performance issue",
      "user": {
        "login": "Yuyz0112",
        "id": 13651389,
        "node_id": "MDQ6VXNlcjEzNjUxMzg5",
        "avatar_url": "https://avatars1.githubusercontent.com/u/13651389?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Yuyz0112",
        "html_url": "https://github.com/Yuyz0112",
        "followers_url": "https://api.github.com/users/Yuyz0112/followers",
        "following_url": "https://api.github.com/users/Yuyz0112/following{/other_user}",
        "gists_url": "https://api.github.com/users/Yuyz0112/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Yuyz0112/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Yuyz0112/subscriptions",
        "organizations_url": "https://api.github.com/users/Yuyz0112/orgs",
        "repos_url": "https://api.github.com/users/Yuyz0112/repos",
        "events_url": "https://api.github.com/users/Yuyz0112/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Yuyz0112/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 863458406,
          "node_id": "MDU6TGFiZWw4NjM0NTg0MDY=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20PR",
          "name": "has PR",
          "color": "5319e7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-08-29T08:42:22Z",
      "updated_at": "2018-08-31T13:41:59Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/140202wlq](https://codesandbox.io/s/140202wlq)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the code sandbox link and click the button to use the computed property 'filteredEntities', and you will find it cost a lot of time.\r\n\r\nAfter check the call tree, I found this is because the code calls the getter of 'entities'  many times which will then call the `dependArray` function.\r\n\r\nThe code leading to this is:\r\n```js\r\nconst len = this.entities.length;\r\nfor (let i = 0; i < len; i++) {\r\n  const e = this.entities[i];\r\n  // do something with e\r\n}\r\n```\r\nIf this.entities has a length of n, its getter will be called n + 1 times. And every time when the getter was called, it will call dependArray on the value of this.entities, which is the array with length n.\r\nSince dependArray will iterate the value, the depend function will be called **(n + 1)^2** times totally.\r\n\r\nI found this code when I'm reviewing someone's PR, and the original code use `for (let i = 0; i < this.entities.length; i++) ` and make another n times call to the getter.\r\n\r\nIt was easy to avoid this problem, such as using some array methods like `filter` to only call getter once.\r\nEven cache the value of entities by `const cache = this.entities` can solve it.\r\n\r\nAlthough it was easy to avoid of this pattern, I still think it is dangerous because the original code was not an obvious anti-pattern.\r\nAnd this will not show any performance issue when the array is small, but may cause serious performance issue when the array is large in some production environment.\r\n\r\n### What is expected?\r\nI've read the related source code and I think this is the expected result of the observer system.\r\n\r\nThen I read some chapter of the guide again to ensure there is no mention about this, so I'm not sure whether we need to add this as a NOT TODO in the computed property chapter.\r\n\r\n### What is actually happening?\r\nDescribed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8721",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8721/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8721/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8721/events",
      "html_url": "https://github.com/vuejs/vue/issues/8721",
      "id": 354664338,
      "node_id": "MDU6SXNzdWUzNTQ2NjQzMzg=",
      "number": 8721,
      "title": "Property 'xxx' does not exist on type CombinedVueInstance ?",
      "user": {
        "login": "Weiyu-Chen",
        "id": 13402013,
        "node_id": "MDQ6VXNlcjEzNDAyMDEz",
        "avatar_url": "https://avatars0.githubusercontent.com/u/13402013?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Weiyu-Chen",
        "html_url": "https://github.com/Weiyu-Chen",
        "followers_url": "https://api.github.com/users/Weiyu-Chen/followers",
        "following_url": "https://api.github.com/users/Weiyu-Chen/following{/other_user}",
        "gists_url": "https://api.github.com/users/Weiyu-Chen/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Weiyu-Chen/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Weiyu-Chen/subscriptions",
        "organizations_url": "https://api.github.com/users/Weiyu-Chen/orgs",
        "repos_url": "https://api.github.com/users/Weiyu-Chen/repos",
        "events_url": "https://api.github.com/users/Weiyu-Chen/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Weiyu-Chen/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 12,
      "created_at": "2018-08-28T10:18:12Z",
      "updated_at": "2019-01-23T07:48:11Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link \r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. use vue-cli init a ts hello-world project .\r\n2. code like that\r\n```js\r\n<script lang=\"ts\">\r\nimport Vue from \"vue\";\r\nexport default Vue.extend({\r\n  name: \"HelloWorld\",\r\n  props: {\r\n    msg: String\r\n  },\r\n  data():any {\r\n    return {\r\n      wtf: this.initData(), // throw ts error : Property 'initData' does not exist on type 'CombinedVueInstance<Vue, {}, {}, {}, Readonly<{ msg: string; }>>'.\r\n    }\r\n  },\r\n \r\n  methods: {\r\n    initData():any {\r\n        return {\r\n          a: ''\r\n        }\r\n    },\r\n  },\r\n \r\n});\r\n</script>\r\n```\r\n\r\n\r\n### What is expected?\r\nHow can i fix it ?\r\n\r\n### What is actually happening?\r\n**Property 'initData' does not exist on type 'CombinedVueInstance<Vue, {}, {}, {}, Readonly<{ msg: string; }>>'.**\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8719",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8719/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8719/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8719/events",
      "html_url": "https://github.com/vuejs/vue/issues/8719",
      "id": 354529736,
      "node_id": "MDU6SXNzdWUzNTQ1Mjk3MzY=",
      "number": 8719,
      "title": "Vue.component doesnt except argument of type `Component`",
      "user": {
        "login": "backbone87",
        "id": 1196313,
        "node_id": "MDQ6VXNlcjExOTYzMTM=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/1196313?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/backbone87",
        "html_url": "https://github.com/backbone87",
        "followers_url": "https://api.github.com/users/backbone87/followers",
        "following_url": "https://api.github.com/users/backbone87/following{/other_user}",
        "gists_url": "https://api.github.com/users/backbone87/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/backbone87/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/backbone87/subscriptions",
        "organizations_url": "https://api.github.com/users/backbone87/orgs",
        "repos_url": "https://api.github.com/users/backbone87/repos",
        "events_url": "https://api.github.com/users/backbone87/events{/privacy}",
        "received_events_url": "https://api.github.com/users/backbone87/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 7,
      "created_at": "2018-08-28T00:53:10Z",
      "updated_at": "2018-08-29T00:51:05Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/8z04jxj3y8](https://codesandbox.io/s/8z04jxj3y8)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Click repro link\r\n- Open test.ts\r\n- See type errors\r\n- Uncomment vue type augmentation to see errors disappear\r\n\r\n\r\n### What is expected?\r\nI can pass any component to `Vue.component`\r\n\r\n### What is actually happening?\r\nType error:\r\n```\r\nArgument of type 'Component<DefaultData<never>, DefaultMethods<never>, DefaultComputed, Record<string, any>>' is not assignable to parameter of type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Rec...'.\r\n  Type 'VueConstructor<Vue>' is not assignable to type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Rec...'.\r\n    Value of type 'VueConstructor<Vue>' has no properties in common with type 'ComponentOptions<Vue, DefaultData<Vue>, DefaultMethods<Vue>, DefaultComputed, PropsDefinition<Rec...'. Did you mean to call it?\r\n```\r\n\r\n---\r\nAdding the following overload to `Vue.component` will fix it:\r\n```ts\r\n    component<Data, Methods, Computed, Props>(\r\n      id: string,\r\n      definition: Component<Data, Methods, Computed, Props>,\r\n    ): ExtendedVue<V, Data, Methods, Computed, Props>;\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8698",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8698/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8698/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8698/events",
      "html_url": "https://github.com/vuejs/vue/issues/8698",
      "id": 353194067,
      "node_id": "MDU6SXNzdWUzNTMxOTQwNjc=",
      "number": 8698,
      "title": "transitionend event isn't fired on element inside <transition> when leaving",
      "user": {
        "login": "guanzo",
        "id": 4676043,
        "node_id": "MDQ6VXNlcjQ2NzYwNDM=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/4676043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guanzo",
        "html_url": "https://github.com/guanzo",
        "followers_url": "https://api.github.com/users/guanzo/followers",
        "following_url": "https://api.github.com/users/guanzo/following{/other_user}",
        "gists_url": "https://api.github.com/users/guanzo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/guanzo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/guanzo/subscriptions",
        "organizations_url": "https://api.github.com/users/guanzo/orgs",
        "repos_url": "https://api.github.com/users/guanzo/repos",
        "events_url": "https://api.github.com/users/guanzo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/guanzo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-08-23T02:13:51Z",
      "updated_at": "2018-08-29T04:37:09Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/guanzo/xcLk083u/1/](https://jsfiddle.net/guanzo/xcLk083u/1/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open reproduction demo in a non-Chrome browser.\r\n2. Attach `transitionend` listener to the component root $el. (It can be on any element, doesn't matter)\r\n3. Transition out a child element with `<transition>` and `v-if`.\r\n4. Listener callback isn't fired.\r\n\r\n### What is expected?\r\nThe transitionend event is fired in all browsers.\r\n\r\n### What is actually happening?\r\nThe transitionend event is only fired in Chrome.\r\n\r\n---\r\nMy use case does NOT allow me to use the template, therefore I cannot use the <transition> javascript hooks, such as `leave` and `afterLeave`.  Regardless, this is inconsistent behavior and should be figured out. Is vue stopping the propagation of the event somehow?\r\n\r\nFor a complete context of the use case, read this issue: https://github.com/guanzo/vue-smooth-reflow/issues/3\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8680",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8680/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8680/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8680/events",
      "html_url": "https://github.com/vuejs/vue/issues/8680",
      "id": 352258831,
      "node_id": "MDU6SXNzdWUzNTIyNTg4MzE=",
      "number": 8680,
      "title": "Cache access to process.env",
      "user": {
        "login": "jnields",
        "id": 9572656,
        "node_id": "MDQ6VXNlcjk1NzI2NTY=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/9572656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnields",
        "html_url": "https://github.com/jnields",
        "followers_url": "https://api.github.com/users/jnields/followers",
        "following_url": "https://api.github.com/users/jnields/following{/other_user}",
        "gists_url": "https://api.github.com/users/jnields/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jnields/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jnields/subscriptions",
        "organizations_url": "https://api.github.com/users/jnields/orgs",
        "repos_url": "https://api.github.com/users/jnields/repos",
        "events_url": "https://api.github.com/users/jnields/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jnields/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-08-20T19:07:24Z",
      "updated_at": "2018-08-21T01:52:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nAccess to `process.env` is a slow, system-bound call.\r\n\r\nAfter react restructured their project to cache access to `process.env`, they had a 2.4x - 3.8x performance improvement for server-side rendering,\r\n\r\nhttps://github.com/facebook/react/issues/812\r\n\r\nThis should also be done for vue, vue-server-renderer, vuex ... anything that accesses `process.env`.\r\n\r\n### What does the proposed API look like?\r\nAn easy strategy might be to replace references to `process.env.NODE_ENV` with a reference to a singleton that checks process.env.NODE_ENV.\r\n\r\n```\r\n// foo.js\r\nif (process.env.NODE_ENV !== 'production') {\r\n  // do stuff\r\n}\r\n```\r\n\r\nbecomes\r\n\r\n```\r\n// isDevEnv.js\r\nexport default process.env.NODE_ENV !== 'production';\r\n\r\n// foo.js\r\nimport isDevEnv from './isDevEnv';\r\n\r\nif (isDevEnv) {\r\n  // do stuff\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8679",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8679/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8679/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8679/events",
      "html_url": "https://github.com/vuejs/vue/issues/8679",
      "id": 352166961,
      "node_id": "MDU6SXNzdWUzNTIxNjY5NjE=",
      "number": 8679,
      "title": "Property 'X' does not exist on type CombinedVueInstance using TypeScript   Prop Validator",
      "user": {
        "login": "RehanSaeed",
        "id": 2270364,
        "node_id": "MDQ6VXNlcjIyNzAzNjQ=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/2270364?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RehanSaeed",
        "html_url": "https://github.com/RehanSaeed",
        "followers_url": "https://api.github.com/users/RehanSaeed/followers",
        "following_url": "https://api.github.com/users/RehanSaeed/following{/other_user}",
        "gists_url": "https://api.github.com/users/RehanSaeed/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/RehanSaeed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/RehanSaeed/subscriptions",
        "organizations_url": "https://api.github.com/users/RehanSaeed/orgs",
        "repos_url": "https://api.github.com/users/RehanSaeed/repos",
        "events_url": "https://api.github.com/users/RehanSaeed/events{/privacy}",
        "received_events_url": "https://api.github.com/users/RehanSaeed/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2018-08-20T14:42:56Z",
      "updated_at": "2019-04-11T15:19:57Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/muhammadrehansaeed/pen/XPWKyJ](https://codepen.io/muhammadrehansaeed/pen/XPWKyJ)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse Typescript to build this component:\r\n\r\n```\r\nexport default Vue.extend({\r\n  props: {\r\n    delay: {\r\n      default: 600,\r\n      type: Number,\r\n      validator: function(value: number) {\r\n        return value >= 0;\r\n      }\r\n    },\r\n    minValue: {\r\n      default: 0,\r\n      type: Number\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      valueInternal: 0\r\n    };\r\n  },\r\n  methods: {\r\n    reset(): void {\r\n      this.valueInternal = this.minValue; <----THIS LINE ERRORS\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n### What is expected?\r\nThe component builds.\r\n\r\n### What is actually happening?\r\nThe following error is thrown:\r\n\r\n```\r\nProperty 'minValue' does not exist on type 'CombinedVueInstance<Vue, { isVisibleInternal: boolean; valueInternal: number; }, { reset(): void; }, {}, Readonly<{}>>'.\r\nmethods: {\r\n  reset(): void {\r\n    this.valueInternal = this.minValue;\r\n                                               ^\r\n  }\r\n}\r\n````\r\n\r\nIf I remove the validator from the prop, the error goes away. If I remove the data section, the error also goes away.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8659",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8659/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8659/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8659/events",
      "html_url": "https://github.com/vuejs/vue/issues/8659",
      "id": 350794319,
      "node_id": "MDU6SXNzdWUzNTA3OTQzMTk=",
      "number": 8659,
      "title": "<transition> 在 UIWebView和WKWebView 中没有起作用",
      "user": {
        "login": "ZiQiangWang",
        "id": 11312811,
        "node_id": "MDQ6VXNlcjExMzEyODEx",
        "avatar_url": "https://avatars0.githubusercontent.com/u/11312811?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ZiQiangWang",
        "html_url": "https://github.com/ZiQiangWang",
        "followers_url": "https://api.github.com/users/ZiQiangWang/followers",
        "following_url": "https://api.github.com/users/ZiQiangWang/following{/other_user}",
        "gists_url": "https://api.github.com/users/ZiQiangWang/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ZiQiangWang/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ZiQiangWang/subscriptions",
        "organizations_url": "https://api.github.com/users/ZiQiangWang/orgs",
        "repos_url": "https://api.github.com/users/ZiQiangWang/repos",
        "events_url": "https://api.github.com/users/ZiQiangWang/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ZiQiangWang/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 79873474,
          "node_id": "MDU6TGFiZWw3OTg3MzQ3NA==",
          "url": "https://api.github.com/repos/vuejs/vue/labels/need%20repro",
          "name": "need repro",
          "color": "eb6420",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 8,
      "created_at": "2018-08-15T12:39:04Z",
      "updated_at": "2018-10-30T11:52:42Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/608590/](https://jsfiddle.net/50wL7mdz/608590/)\r\n\r\n### Steps to reproduce\r\n这段代码在浏览器和安卓中都可以正常运行，但是在UIWebView和WKWebView中不可以\r\n\r\n### What is expected?\r\ntoast 能够从底部动态滑出\r\n\r\n### What is actually happening?\r\n0.3s后，直接显示\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8630",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8630/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8630/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8630/events",
      "html_url": "https://github.com/vuejs/vue/pull/8630",
      "id": 349249039,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3NDEwOTY4",
      "number": 8630,
      "title": "(fix #8337) test(component-slot): new child vnode gets destroyed instead of old one",
      "user": {
        "login": "privatenumber",
        "id": 1075694,
        "node_id": "MDQ6VXNlcjEwNzU2OTQ=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1075694?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/privatenumber",
        "html_url": "https://github.com/privatenumber",
        "followers_url": "https://api.github.com/users/privatenumber/followers",
        "following_url": "https://api.github.com/users/privatenumber/following{/other_user}",
        "gists_url": "https://api.github.com/users/privatenumber/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/privatenumber/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/privatenumber/subscriptions",
        "organizations_url": "https://api.github.com/users/privatenumber/orgs",
        "repos_url": "https://api.github.com/users/privatenumber/repos",
        "events_url": "https://api.github.com/users/privatenumber/events{/privacy}",
        "received_events_url": "https://api.github.com/users/privatenumber/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 321616881,
          "node_id": "MDU6TGFiZWwzMjE2MTY4ODE=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/in%20review",
          "name": "in review",
          "color": "f7c6c7",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-08-09T18:56:30Z",
      "updated_at": "2019-02-21T19:00:51Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/8630",
        "html_url": "https://github.com/vuejs/vue/pull/8630",
        "diff_url": "https://github.com/vuejs/vue/pull/8630.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/8630.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nI'm not confident in the quality of the fix (whether it's addressing the bug directly or indirectly) but deep-cloning the vnode in `createElm` when a vnode used in a previous render is encountered seems to fix the bug.\r\n\r\nIn any case, a test has been added to repro the bug."
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8579",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8579/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8579/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8579/events",
      "html_url": "https://github.com/vuejs/vue/issues/8579",
      "id": 345772650,
      "node_id": "MDU6SXNzdWUzNDU3NzI2NTA=",
      "number": 8579,
      "title": "Typescript - Component's property types are not correct",
      "user": {
        "login": "AntoineEsteve",
        "id": 11315805,
        "node_id": "MDQ6VXNlcjExMzE1ODA1",
        "avatar_url": "https://avatars0.githubusercontent.com/u/11315805?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AntoineEsteve",
        "html_url": "https://github.com/AntoineEsteve",
        "followers_url": "https://api.github.com/users/AntoineEsteve/followers",
        "following_url": "https://api.github.com/users/AntoineEsteve/following{/other_user}",
        "gists_url": "https://api.github.com/users/AntoineEsteve/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AntoineEsteve/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AntoineEsteve/subscriptions",
        "organizations_url": "https://api.github.com/users/AntoineEsteve/orgs",
        "repos_url": "https://api.github.com/users/AntoineEsteve/repos",
        "events_url": "https://api.github.com/users/AntoineEsteve/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AntoineEsteve/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 724459354,
          "node_id": "MDU6TGFiZWw3MjQ0NTkzNTQ=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/typescript",
          "name": "typescript",
          "color": "0052cc",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-07-30T14:05:07Z",
      "updated_at": "2018-08-28T10:59:22Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\nVuejs: 2.5.16\r\nTypescript: 2.8.1\r\n\r\n### Reproduction link\r\n[https://stackblitz.com/edit/typescript-rrnw8z?file=index.ts](https://stackblitz.com/edit/typescript-rrnw8z?file=index.ts)\r\n\r\n### Steps to reproduce\r\n- Use typescript\r\n- Create a component with at least one property\r\n\r\n### What is expected?\r\nIf your property of type `X` is not required, its type should be `X | undefined`\r\n\r\n### What is actually happening?\r\nIf your property of type `X` is not required, its type is still `X`\r\n\r\n---\r\nMore dangerous: The properties are not required by default and you can easily write code that will fail at runtime.\r\n\r\nNote: The stackblitz above won't show the error because the types are not correctly assumed and `this` is assumed as `any`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8560",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8560/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8560/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8560/events",
      "html_url": "https://github.com/vuejs/vue/issues/8560",
      "id": 344941809,
      "node_id": "MDU6SXNzdWUzNDQ5NDE4MDk=",
      "number": 8560,
      "title": "Slots with only comments use fallback instead",
      "user": {
        "login": "raihle",
        "id": 985768,
        "node_id": "MDQ6VXNlcjk4NTc2OA==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/985768?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/raihle",
        "html_url": "https://github.com/raihle",
        "followers_url": "https://api.github.com/users/raihle/followers",
        "following_url": "https://api.github.com/users/raihle/following{/other_user}",
        "gists_url": "https://api.github.com/users/raihle/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/raihle/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/raihle/subscriptions",
        "organizations_url": "https://api.github.com/users/raihle/orgs",
        "repos_url": "https://api.github.com/users/raihle/repos",
        "events_url": "https://api.github.com/users/raihle/events{/privacy}",
        "received_events_url": "https://api.github.com/users/raihle/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-07-26T17:46:11Z",
      "updated_at": "2018-08-03T20:29:09Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sg0bkLhv/7/](https://jsfiddle.net/sg0bkLhv/7/)\r\n\r\n### Steps to reproduce\r\n* Register a component with a slot\r\n* Use the component in a Vue instance with comments=true, filling the slot with only HTML comment(s)\r\n\r\n### What is expected?\r\nThe HTML comment is rendered into the slot.\r\n\r\nThis could be a breaking \"fix\" for someone who is running with comments=true and still relying on this behavior. If the current behavior is kept, I think it should at least be documented.\r\n\r\n### What is actually happening?\r\nThe HTML comment is discarded and the slot uses its fallback content instead.\r\n\r\nIf any other content is provided together with the HTML comment, all content is kept.\r\n\r\n---\r\nI am developing for a CMS which uses HTML comments to provide its editing capabilities. It has the concept of \"areas\", which are similar to Vue's slots, so it would be handy to render areas into slots. An empty area (e.g. in a newly created page) consists solely of an HTML comment. Since the comment is stripped by Vue, the editing tools are not available.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8551",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8551/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8551/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8551/events",
      "html_url": "https://github.com/vuejs/vue/issues/8551",
      "id": 344619980,
      "node_id": "MDU6SXNzdWUzNDQ2MTk5ODA=",
      "number": 8551,
      "title": "Directive does not behave the same on component as it does on element.",
      "user": {
        "login": "autumnwoodberry",
        "id": 5199037,
        "node_id": "MDQ6VXNlcjUxOTkwMzc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/5199037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/autumnwoodberry",
        "html_url": "https://github.com/autumnwoodberry",
        "followers_url": "https://api.github.com/users/autumnwoodberry/followers",
        "following_url": "https://api.github.com/users/autumnwoodberry/following{/other_user}",
        "gists_url": "https://api.github.com/users/autumnwoodberry/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/autumnwoodberry/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/autumnwoodberry/subscriptions",
        "organizations_url": "https://api.github.com/users/autumnwoodberry/orgs",
        "repos_url": "https://api.github.com/users/autumnwoodberry/repos",
        "events_url": "https://api.github.com/users/autumnwoodberry/events{/privacy}",
        "received_events_url": "https://api.github.com/users/autumnwoodberry/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-07-25T21:49:15Z",
      "updated_at": "2018-08-21T15:05:28Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/autumnwoodberry/pen/XBamPN](https://codepen.io/autumnwoodberry/pen/XBamPN)\r\n\r\n### Steps to reproduce\r\nThere are 4 input elements on the page. Each element has had the custom `v-active-input` directive applied. This directive attempts to read the value of the element and if that value is present it will add the `.active` class to the element.\r\n\r\nThere are 4 cases tested here: \r\n\r\n- A native input element with a `v-model` value that is defined in the component's `data` option.\r\n- A custom input component with a `v-model` value that is defined in the component's `data` option.\r\n- A native input element with a `v-model` value that is initially empty and then defined in the component's `mounted` hook.\r\n- A custom input component with a `v-model` value that is initially empty and then defined in the component's `mounted` hook.\r\n\r\nObserve that the 4th input element does not have the `.active` class applied. Modify the text in the 4th input element (for example, just add a few more characters). Observe that after changing the value of the input the `.active` class is applied to the 4th element.\r\n\r\n### What is expected?\r\nAll input elements have the `.active` class from the start, regardless of if that input element is inside of a custom component, and regardless of when that `value` prop is defined or updated.\r\n\r\n### What is actually happening?\r\nThe directive does not behave the same on a component as it does on a native element - the 4th input element on the page does not have the `.active` class applied.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8535",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8535/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8535/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8535/events",
      "html_url": "https://github.com/vuejs/vue/issues/8535",
      "id": 343285824,
      "node_id": "MDU6SXNzdWUzNDMyODU4MjQ=",
      "number": 8535,
      "title": "The logic of Vue.set is unreasonable when handling array",
      "user": {
        "login": "xyzingh",
        "id": 32507398,
        "node_id": "MDQ6VXNlcjMyNTA3Mzk4",
        "avatar_url": "https://avatars0.githubusercontent.com/u/32507398?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xyzingh",
        "html_url": "https://github.com/xyzingh",
        "followers_url": "https://api.github.com/users/xyzingh/followers",
        "following_url": "https://api.github.com/users/xyzingh/following{/other_user}",
        "gists_url": "https://api.github.com/users/xyzingh/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/xyzingh/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/xyzingh/subscriptions",
        "organizations_url": "https://api.github.com/users/xyzingh/orgs",
        "repos_url": "https://api.github.com/users/xyzingh/repos",
        "events_url": "https://api.github.com/users/xyzingh/events{/privacy}",
        "received_events_url": "https://api.github.com/users/xyzingh/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-07-21T01:30:28Z",
      "updated_at": "2018-10-23T20:00:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/L6pey1ts/22/](https://jsfiddle.net/L6pey1ts/22/)\r\n\r\n### Steps to reproduce\r\nRun JSFiddle snippet\r\n\r\n### What is expected?\r\nI expect, that the program only outputs `2,3,5,7,11,13` (when executing `arr.push(13)`).\r\n\r\n### What is actually happening?\r\n```\r\n    (empty line)\r\n2,3,5,7,11\r\narr.abc changed\r\narr.def\r\n    (empty line)\r\n2,3,5,7,11,13\r\n    (empty line)\r\narr.def changed\r\n```\r\n\r\n---\r\n**abc** is already existed on **arr** when **app** is initializing, and it is neglected for it was defined on an array.\r\n\r\n**def** is set by **Vue.set()**, but it executes **defineReactive(arr, 'def', 'arr.def')** (src/core/observer/index.js  line:225), and notifies the watchers.\r\n\r\nVue.set() should be consistent when dealing with them. In my mind, both of them should be neglected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8516",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8516/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8516/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8516/events",
      "html_url": "https://github.com/vuejs/vue/issues/8516",
      "id": 342460207,
      "node_id": "MDU6SXNzdWUzNDI0NjAyMDc=",
      "number": 8516,
      "title": "Error thrown when using transition-group with conditionally rendered children",
      "user": {
        "login": "riophae",
        "id": 1289884,
        "node_id": "MDQ6VXNlcjEyODk4ODQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1289884?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/riophae",
        "html_url": "https://github.com/riophae",
        "followers_url": "https://api.github.com/users/riophae/followers",
        "following_url": "https://api.github.com/users/riophae/following{/other_user}",
        "gists_url": "https://api.github.com/users/riophae/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/riophae/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/riophae/subscriptions",
        "organizations_url": "https://api.github.com/users/riophae/orgs",
        "repos_url": "https://api.github.com/users/riophae/repos",
        "events_url": "https://api.github.com/users/riophae/events{/privacy}",
        "received_events_url": "https://api.github.com/users/riophae/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2018-07-18T19:26:38Z",
      "updated_at": "2018-12-03T07:14:51Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/riophae/pen/EpgWdZ](https://codepen.io/riophae/pen/EpgWdZ)\r\n\r\n### Steps to reproduce\r\n1. Open the pen and it shows 1, 3, 5\r\n2. Click the button\r\n\r\n### What is expected?\r\nIt should show 3, 5\r\n\r\n### What is actually happening?\r\nGot this error in console:\r\n\r\n```\r\n[Vue warn]: Error in render: \"TypeError: c$1.elm.getBoundingClientRect is not a function\"\r\n\r\nfound in\r\n\r\n---> <TransitionGroup>\r\n       <Root>\r\n\r\nTypeError: c$1.elm.getBoundingClientRect is not a function\r\n   at Proxy.render (VM643 vue.js:8383)\r\n   at VueComponent.Vue._render (VM643 vue.js:4535)\r\n   at VueComponent.updateComponent (VM643 vue.js:2788)\r\n   at Watcher.get (VM643 vue.js:3140)\r\n   at Watcher.run (VM643 vue.js:3217)\r\n   at flushSchedulerQueue (VM643 vue.js:2981)\r\n   at Array.<anonymous> (VM643 vue.js:1839)\r\n   at MessagePort.flushCallbacks (VM643 vue.js:1760)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8507",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8507/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8507/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8507/events",
      "html_url": "https://github.com/vuejs/vue/issues/8507",
      "id": 342037252,
      "node_id": "MDU6SXNzdWUzNDIwMzcyNTI=",
      "number": 8507,
      "title": "Possible memory leak when v-for in development mode",
      "user": {
        "login": "peluprvi",
        "id": 1561360,
        "node_id": "MDQ6VXNlcjE1NjEzNjA=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1561360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peluprvi",
        "html_url": "https://github.com/peluprvi",
        "followers_url": "https://api.github.com/users/peluprvi/followers",
        "following_url": "https://api.github.com/users/peluprvi/following{/other_user}",
        "gists_url": "https://api.github.com/users/peluprvi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/peluprvi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/peluprvi/subscriptions",
        "organizations_url": "https://api.github.com/users/peluprvi/orgs",
        "repos_url": "https://api.github.com/users/peluprvi/repos",
        "events_url": "https://api.github.com/users/peluprvi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/peluprvi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-07-17T18:39:41Z",
      "updated_at": "2018-10-23T21:31:48Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/KBMaOY](https://codepen.io/anon/pen/KBMaOY)\r\n\r\n### Steps to reproduce\r\n- Open the codepen https://codepen.io/anon/pen/gjMgzG\r\n- Click a couple of times to list 0 item, then 1000\r\n- See the memory increasing\r\n- Try force GC (trash icon) before measure it\r\n- Take heap snapshots in Chrome \"Memory\" tab\r\n- Watch the memory usage in the Chome task manager (shift   esc)\r\n- Watch the memory usage in OS task manager\r\n\r\n### What is expected?\r\nSame memory usage after garbage collector\r\n\r\n### What is actually happening?\r\nDespite the \"Performance\" tab displays the same memory usage, the \"Memory\" heap snapshot displays a memory increase.\r\nAlso, the both Chrome and OS task managers show the memory only increasing.\r\n\r\n---\r\nIt get worse when:\r\n- Using Vuei18n (even without translating)\r\n- Having big children components\r\n\r\nTested on:\r\n- Windows 7 64 Bits\r\n- Chrome 67.0.3396.99 64 bits\r\n\r\nPlease, consider that:\r\n- I may be doing something wrong\r\n- It can be a Chrome issue\r\n- It can be an OS issue\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8499",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8499/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8499/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8499/events",
      "html_url": "https://github.com/vuejs/vue/pull/8499",
      "id": 341517995,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxNjM2Nzg2",
      "number": 8499,
      "title": "fix(patch): static tree as same vnode(#8021)",
      "user": {
        "login": "JJJYY",
        "id": 32628989,
        "node_id": "MDQ6VXNlcjMyNjI4OTg5",
        "avatar_url": "https://avatars2.githubusercontent.com/u/32628989?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JJJYY",
        "html_url": "https://github.com/JJJYY",
        "followers_url": "https://api.github.com/users/JJJYY/followers",
        "following_url": "https://api.github.com/users/JJJYY/following{/other_user}",
        "gists_url": "https://api.github.com/users/JJJYY/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/JJJYY/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/JJJYY/subscriptions",
        "organizations_url": "https://api.github.com/users/JJJYY/orgs",
        "repos_url": "https://api.github.com/users/JJJYY/repos",
        "events_url": "https://api.github.com/users/JJJYY/events{/privacy}",
        "received_events_url": "https://api.github.com/users/JJJYY/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-07-16T13:25:35Z",
      "updated_at": "2019-02-21T19:00:50Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/8499",
        "html_url": "https://github.com/vuejs/vue/pull/8499",
        "diff_url": "https://github.com/vuejs/vue/pull/8499.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/8499.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nif change `comp1` to `comp2`, `<component :is='comp'>` vnode's `tag` will be changed, but `<p>` won't, `tag` is not equal will not be as same vnode.  \r\nI am not sure it cause other bugs, forgive me.  \r\nthanks for your time."
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8494",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8494/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8494/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8494/events",
      "html_url": "https://github.com/vuejs/vue/issues/8494",
      "id": 341383860,
      "node_id": "MDU6SXNzdWUzNDEzODM4NjA=",
      "number": 8494,
      "title": "When a getter is defined that does not define a setter, no recursive reactive is made.",
      "user": {
        "login": "ts0307",
        "id": 3348532,
        "node_id": "MDQ6VXNlcjMzNDg1MzI=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/3348532?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ts0307",
        "html_url": "https://github.com/ts0307",
        "followers_url": "https://api.github.com/users/ts0307/followers",
        "following_url": "https://api.github.com/users/ts0307/following{/other_user}",
        "gists_url": "https://api.github.com/users/ts0307/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ts0307/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ts0307/subscriptions",
        "organizations_url": "https://api.github.com/users/ts0307/orgs",
        "repos_url": "https://api.github.com/users/ts0307/repos",
        "events_url": "https://api.github.com/users/ts0307/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ts0307/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-07-16T03:53:48Z",
      "updated_at": "2018-11-26T08:41:55Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ts0307/pd8zr3sk/](https://jsfiddle.net/ts0307/pd8zr3sk/)\r\n\r\n### Steps to reproduce\r\nRun JSFiddle snippet\r\n\r\n### What is expected?\r\nI expect, the result is shown as {\"bar\": \"b\"} instead of {\"bar\": \"a\"}\r\n\r\n### What is actually happening?\r\n  if ((!getter || setter) && arguments.length === 2) {\r\n    val = obj[key]\r\n  }\r\n\r\n  let childOb = !shallow && observe(val)\r\n\r\nMy example is that the data object defines that the getter does not define a setter, causing the above judgment to fail, val is not evaluated, and no recursive reactive is made.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8485",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8485/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8485/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8485/events",
      "html_url": "https://github.com/vuejs/vue/issues/8485",
      "id": 340545295,
      "node_id": "MDU6SXNzdWUzNDA1NDUyOTU=",
      "number": 8485,
      "title": "Component scope attribute is lost when conditionally rendering root node",
      "user": {
        "login": "Frizi",
        "id": 919491,
        "node_id": "MDQ6VXNlcjkxOTQ5MQ==",
        "avatar_url": "https://avatars2.githubusercontent.com/u/919491?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Frizi",
        "html_url": "https://github.com/Frizi",
        "followers_url": "https://api.github.com/users/Frizi/followers",
        "following_url": "https://api.github.com/users/Frizi/following{/other_user}",
        "gists_url": "https://api.github.com/users/Frizi/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Frizi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Frizi/subscriptions",
        "organizations_url": "https://api.github.com/users/Frizi/orgs",
        "repos_url": "https://api.github.com/users/Frizi/repos",
        "events_url": "https://api.github.com/users/Frizi/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Frizi/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 971479363,
          "node_id": "MDU6TGFiZWw5NzE0NzkzNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20workaround",
          "name": "has workaround",
          "color": "ccf4ff",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 2,
      "created_at": "2018-07-12T08:50:22Z",
      "updated_at": "2018-07-12T11:37:35Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/5vj19q8yk](https://codesandbox.io/s/5vj19q8yk)\r\n\r\n### Steps to reproduce\r\n1. observe that text is green\r\n2. click two times on checkbox to trigger slot's hide and show cycle\r\n\r\n\r\n### What is expected?\r\n3. text should still be green\r\n\r\nIn other words, the toggled `div` should have `GreenSlot`'s `data-v` attribute applied\r\n\r\n### What is actually happening?\r\n3. observe that text is red\r\n\r\nIn other words, the toggled `div` doesn't have correct `data-v` applied.\r\n\r\n---\r\nAlso tested on beta, issue persists.\r\n\r\nIn my use-case, I cannot trivially replace it with external `v-if`, as the component that does the toggling contains important internal logic that decides if it should be shown or not. It's not just a simple prop.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8484",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8484/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8484/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8484/events",
      "html_url": "https://github.com/vuejs/vue/pull/8484",
      "id": 340481739,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwODgyNjA3",
      "number": 8484,
      "title": "Add a global Vue.depTarget api support",
      "user": {
        "login": "yuchonghua",
        "id": 17898715,
        "node_id": "MDQ6VXNlcjE3ODk4NzE1",
        "avatar_url": "https://avatars1.githubusercontent.com/u/17898715?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yuchonghua",
        "html_url": "https://github.com/yuchonghua",
        "followers_url": "https://api.github.com/users/yuchonghua/followers",
        "following_url": "https://api.github.com/users/yuchonghua/following{/other_user}",
        "gists_url": "https://api.github.com/users/yuchonghua/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yuchonghua/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yuchonghua/subscriptions",
        "organizations_url": "https://api.github.com/users/yuchonghua/orgs",
        "repos_url": "https://api.github.com/users/yuchonghua/repos",
        "events_url": "https://api.github.com/users/yuchonghua/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yuchonghua/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 321616881,
          "node_id": "MDU6TGFiZWwzMjE2MTY4ODE=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/in%20review",
          "name": "in review",
          "color": "f7c6c7",
          "default": false
        },
        {
          "id": 777055905,
          "node_id": "MDU6TGFiZWw3NzcwNTU5MDU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/semver:minor",
          "name": "semver:minor",
          "color": "ade575",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2018-07-12T04:03:42Z",
      "updated_at": "2019-02-21T19:00:50Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/8484",
        "html_url": "https://github.com/vuejs/vue/pull/8484",
        "diff_url": "https://github.com/vuejs/vue/pull/8484.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/8484.patch"
      },
      "body": "Add a global Vue.depTarget api\r\nEnable vuex to use the same domain name across windows\r\nCross-window includes window.open and iframe\r\n\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [X] Other, please describe:Add a global Vue.depTarget api support\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [X] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n[Resolved demo:vuex-open-window.zip](https://github.com/vuejs/vue/files/2187013/vuex-open-window.zip)\r\n```shell\r\nunzip vuex-open-window.zip\r\ncd vuex-open-window\r\nnpm i\r\nnpm run dev\r\nopen \"http://127.0.0.1:8080\"\r\n```\r\n\r\n![gif5](https://user-images.githubusercontent.com/11555571/42612461-0dc7770c-85ce-11e8-86d4-5bd317ee922e.gif)\r\n\r\n\r\n\r\n[more-nuxt-issues-unsolved](https://cmty.app/nuxt/nuxt.js/issues/c7367)"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8467",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8467/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8467/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8467/events",
      "html_url": "https://github.com/vuejs/vue/issues/8467",
      "id": 339045033,
      "node_id": "MDU6SXNzdWUzMzkwNDUwMzM=",
      "number": 8467,
      "title": "Vue.compile should return the errors which happens during compilation even in prod env",
      "user": {
        "login": "jbouzekri",
        "id": 880996,
        "node_id": "MDQ6VXNlcjg4MDk5Ng==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/880996?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jbouzekri",
        "html_url": "https://github.com/jbouzekri",
        "followers_url": "https://api.github.com/users/jbouzekri/followers",
        "following_url": "https://api.github.com/users/jbouzekri/following{/other_user}",
        "gists_url": "https://api.github.com/users/jbouzekri/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jbouzekri/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jbouzekri/subscriptions",
        "organizations_url": "https://api.github.com/users/jbouzekri/orgs",
        "repos_url": "https://api.github.com/users/jbouzekri/repos",
        "events_url": "https://api.github.com/users/jbouzekri/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jbouzekri/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 217551163,
          "node_id": "MDU6TGFiZWwyMTc1NTExNjM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/feature%20request",
          "name": "feature request",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-07-06T19:14:30Z",
      "updated_at": "2019-03-01T08:31:16Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nI am building a VueJS frontend where templates are coming from a backend where end users contributed them in a CMS or something else. VueJS is bundled with esm in order to have the Vue.compile method.\r\n\r\nWhen I run Vue.compile with the template string coming from the backend, I have no way to know if a compilation error occured in order to display a message to the user. In development I just have the warn messages in the console.\r\n\r\n### What does the proposed API look like?\r\nVue.compile could return an error boolean in an attribute or an array of all errors that occured during compilation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8461",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8461/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8461/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8461/events",
      "html_url": "https://github.com/vuejs/vue/issues/8461",
      "id": 338744691,
      "node_id": "MDU6SXNzdWUzMzg3NDQ2OTE=",
      "number": 8461,
      "title": "Error thrown when using transition-group with component v-bind:is directive",
      "user": {
        "login": "chipit24",
        "id": 7561061,
        "node_id": "MDQ6VXNlcjc1NjEwNjE=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/7561061?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/chipit24",
        "html_url": "https://github.com/chipit24",
        "followers_url": "https://api.github.com/users/chipit24/followers",
        "following_url": "https://api.github.com/users/chipit24/following{/other_user}",
        "gists_url": "https://api.github.com/users/chipit24/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/chipit24/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/chipit24/subscriptions",
        "organizations_url": "https://api.github.com/users/chipit24/orgs",
        "repos_url": "https://api.github.com/users/chipit24/repos",
        "events_url": "https://api.github.com/users/chipit24/events{/privacy}",
        "received_events_url": "https://api.github.com/users/chipit24/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-07-05T22:21:45Z",
      "updated_at": "2018-08-29T04:38:07Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/451168/](https://jsfiddle.net/50wL7mdz/451168/)\r\n\r\n### Steps to reproduce\r\nRender a `component` (not just any component, but the build-in one: https://vuejs.org/v2/api/#component), with the `v-bind:is` directive set to `\"transition-group\"` (or simply `is=\"transition-group\"`):\r\n\r\n```\r\n<component is=\"transition-group\"></component>\r\n```\r\n\r\n### What is expected?\r\nI expect no errors to be thrown.\r\n\r\n### What is actually happening?\r\nThis component appears to work as expected but throws the following error in the console:\r\n\r\n```\r\nvue.js:597 [Vue warn]: Unknown custom element: <component> - did you register the component correctly? For recursive components, make sure to provide the \"name\" option.\r\n\r\nfound in\r\n\r\n---> <TransitionGroup>\r\n       <TransitionWrapper>\r\n         <Root>\r\n```\r\n\r\nNo error is thrown if `transition` is used instead of `transition-group`.\r\n\r\n---\r\nI came across this bug because I was building a re-usable animation component that looks like this:\r\n\r\n```\r\n<template>\r\n  <component\r\n    :is=\"group ? 'transition-group' : 'transition'\"\r\n    @enter=\"velocityEnter\"\r\n    @leave=\"velocityLeave\"\r\n  >\r\n    <slot/>\r\n  </component>\r\n</template>\r\n```\r\n\r\nThe component actually seems to work as expected, but the error described above is thrown.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8433",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8433/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8433/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8433/events",
      "html_url": "https://github.com/vuejs/vue/issues/8433",
      "id": 337088478,
      "node_id": "MDU6SXNzdWUzMzcwODg0Nzg=",
      "number": 8433,
      "title": "Allow to call original `errorHandler` when custom one defined",
      "user": {
        "login": "ArmorDarks",
        "id": 4460311,
        "node_id": "MDQ6VXNlcjQ0NjAzMTE=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/4460311?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ArmorDarks",
        "html_url": "https://github.com/ArmorDarks",
        "followers_url": "https://api.github.com/users/ArmorDarks/followers",
        "following_url": "https://api.github.com/users/ArmorDarks/following{/other_user}",
        "gists_url": "https://api.github.com/users/ArmorDarks/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ArmorDarks/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ArmorDarks/subscriptions",
        "organizations_url": "https://api.github.com/users/ArmorDarks/orgs",
        "repos_url": "https://api.github.com/users/ArmorDarks/repos",
        "events_url": "https://api.github.com/users/ArmorDarks/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ArmorDarks/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 5,
      "created_at": "2018-06-29T18:05:53Z",
      "updated_at": "2019-06-11T14:02:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### What problem does this feature solve?\r\nWhen custom `Vue.config.errorHandler` defined by the user, it will stop firing original [`logError `](https://github.com/vuejs/vue/blob/c2b1cfe9ccd08835f2d99f6ce60f67b4de55187f/src/core/util/error.js#L38).\r\n\r\nThe problem is that there is no straight way to recreate `logError ` behavior in custom `Vue.config.errorHandler` without requiring some Vue's internals.\r\n\r\nThis issue is partially related to [raven-js#1416](https://github.com/getsentry/raven-js/issues/1416), which defines custom `errorHandler`... which prevents Vue from login errors to the console.\r\n\r\n### What does the proposed API look like?\r\nI think Vue should by default expose original `errorHandler` under `Vue.config.errorHandler`. In other words, `Vue.config.errorHandler` shouldn't be `undefined` by default.\r\n\r\nIf the user would like to override `errorHandler`, he will reassign it. Otherwise, it would be possible to save original `Vue.config.errorHandler` into some variable and call it within custom `errorHandler`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8430",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8430/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8430/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8430/events",
      "html_url": "https://github.com/vuejs/vue/issues/8430",
      "id": 336927607,
      "node_id": "MDU6SXNzdWUzMzY5Mjc2MDc=",
      "number": 8430,
      "title": "$attrs missing property when used with v-model",
      "user": {
        "login": "dattn",
        "id": 870036,
        "node_id": "MDQ6VXNlcjg3MDAzNg==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/870036?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dattn",
        "html_url": "https://github.com/dattn",
        "followers_url": "https://api.github.com/users/dattn/followers",
        "following_url": "https://api.github.com/users/dattn/following{/other_user}",
        "gists_url": "https://api.github.com/users/dattn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dattn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dattn/subscriptions",
        "organizations_url": "https://api.github.com/users/dattn/orgs",
        "repos_url": "https://api.github.com/users/dattn/repos",
        "events_url": "https://api.github.com/users/dattn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dattn/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 863458406,
          "node_id": "MDU6TGFiZWw4NjM0NTg0MDY=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/has%20PR",
          "name": "has PR",
          "color": "5319e7",
          "default": false
        },
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 13,
      "created_at": "2018-06-29T09:25:50Z",
      "updated_at": "2019-04-25T19:31:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/106qozol1j](https://codesandbox.io/s/106qozol1j)\r\n\r\n### Steps to reproduce\r\nIn the component TestA the value is passed as prop => the key value is present in the $attrs variable\r\n\r\nIn the component TestB the value is passed as v-model => $attrs is empty\r\n\r\n### What is expected?\r\nThe key \"value\" should be present in $attrs variable\r\n\r\n### What is actually happening?\r\n$attrs is empty\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8424",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8424/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8424/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8424/events",
      "html_url": "https://github.com/vuejs/vue/issues/8424",
      "id": 336494832,
      "node_id": "MDU6SXNzdWUzMzY0OTQ4MzI=",
      "number": 8424,
      "title": "<transition-group> not working as expected on page scroll",
      "user": {
        "login": "Justineo",
        "id": 1726061,
        "node_id": "MDQ6VXNlcjE3MjYwNjE=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/1726061?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Justineo",
        "html_url": "https://github.com/Justineo",
        "followers_url": "https://api.github.com/users/Justineo/followers",
        "following_url": "https://api.github.com/users/Justineo/following{/other_user}",
        "gists_url": "https://api.github.com/users/Justineo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Justineo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Justineo/subscriptions",
        "organizations_url": "https://api.github.com/users/Justineo/orgs",
        "repos_url": "https://api.github.com/users/Justineo/repos",
        "events_url": "https://api.github.com/users/Justineo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Justineo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-06-28T06:51:07Z",
      "updated_at": "2019-02-03T11:36:25Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kxkmp9mov3](https://codesandbox.io/s/kxkmp9mov3)\r\n\r\n### Steps to reproduce\r\n1. Create a list using `<transition-group>`.\r\n2. Put the list at the end of a long page.\r\n3. Scroll to the bottom of the page.\r\n4. Trigger some change so that the page height is reduced and force the viewport to scroll upwards a little bit.\r\n\r\n### What is expected?\r\nThe existing items should stick to the container, instantly appear in the final position, without transitions.\r\n\r\n### What is actually happening?\r\nThe existing items jump out of the container because of the sudden change on vertical position and slowly move back to the expected position.\r\n\r\n---\r\nInternally, `<transition-group>` is using `getBoundingClinetRect()` to track the positions of transition items. This works fine when no page scroll is introduced. But when browsers force page scroll on certain situations, the container (and the rest of the page) flashed into the final position while transition items are stuck in the old position based on the viewport, which makes it look like they suddenly jump out of the document and start performing unexpected transitions.\r\n\r\nMaybe we can provide some new prop on `<transition-group>`, say, `origin: 'viewport' | 'document'`, to optionally calculate positions based on the canvas origin instead of the viewport.\r\n\r\nF.Y.I.\r\n\r\nWhen forced page scroll is triggered:\r\n\r\n![jun-28-2018 14-55-05](https://user-images.githubusercontent.com/1726061/42018058-80ecc336-7ae3-11e8-91da-f8774d873946.gif)\r\n\r\nWhen not triggered:\r\n\r\n![jun-28-2018 14-55-12](https://user-images.githubusercontent.com/1726061/42018090-97fb94c6-7ae3-11e8-879c-6212e952ecda.gif)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8415",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8415/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8415/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8415/events",
      "html_url": "https://github.com/vuejs/vue/issues/8415",
      "id": 335972673,
      "node_id": "MDU6SXNzdWUzMzU5NzI2NzM=",
      "number": 8415,
      "title": "Style bindings with !important don't work properly in IE 11.540",
      "user": {
        "login": "superMDguy",
        "id": 19691288,
        "node_id": "MDQ6VXNlcjE5NjkxMjg4",
        "avatar_url": "https://avatars1.githubusercontent.com/u/19691288?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/superMDguy",
        "html_url": "https://github.com/superMDguy",
        "followers_url": "https://api.github.com/users/superMDguy/followers",
        "following_url": "https://api.github.com/users/superMDguy/following{/other_user}",
        "gists_url": "https://api.github.com/users/superMDguy/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/superMDguy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/superMDguy/subscriptions",
        "organizations_url": "https://api.github.com/users/superMDguy/orgs",
        "repos_url": "https://api.github.com/users/superMDguy/repos",
        "events_url": "https://api.github.com/users/superMDguy/events{/privacy}",
        "received_events_url": "https://api.github.com/users/superMDguy/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 731090450,
          "node_id": "MDU6TGFiZWw3MzEwOTA0NTA=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/browser%20quirks",
          "name": "browser quirks",
          "color": "d93f0b",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-06-26T20:10:43Z",
      "updated_at": "2018-06-27T06:37:03Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/QxVRyW?editors=1010](https://codepen.io/anon/pen/QxVRyW?editors=1010)\r\n\r\n### Steps to reproduce\r\nI've only seen this occur in IE 11.540 (through BrowserStack). The issue is not present in IE 11.0.\r\n\r\n1. Click \"toggle\" button\r\n2. \"Surprise!!\" should show up\r\n3. Click \"toggle\" button again\r\n4. \"Surprise!!\" is still visible\r\n\r\n### What is expected?\r\nClicking \"toggle\" should hide the message. This works properly in chrome, and probably other browsers as well.\r\n\r\n### What is actually happening?\r\nThe message is still visible, and has the `display: block !important` styling applied.\r\n\r\n---\r\nThis causes problems with modals in semantic ui vue. See Semantic-UI-Vue/Semantic-UI-Vue#191\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8413",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8413/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8413/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8413/events",
      "html_url": "https://github.com/vuejs/vue/issues/8413",
      "id": 335774874,
      "node_id": "MDU6SXNzdWUzMzU3NzQ4NzQ=",
      "number": 8413,
      "title": "Transitions classes are added after `before-enter` or `before-leave`",
      "user": {
        "login": "nicooprat",
        "id": 645641,
        "node_id": "MDQ6VXNlcjY0NTY0MQ==",
        "avatar_url": "https://avatars0.githubusercontent.com/u/645641?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nicooprat",
        "html_url": "https://github.com/nicooprat",
        "followers_url": "https://api.github.com/users/nicooprat/followers",
        "following_url": "https://api.github.com/users/nicooprat/following{/other_user}",
        "gists_url": "https://api.github.com/users/nicooprat/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nicooprat/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nicooprat/subscriptions",
        "organizations_url": "https://api.github.com/users/nicooprat/orgs",
        "repos_url": "https://api.github.com/users/nicooprat/repos",
        "events_url": "https://api.github.com/users/nicooprat/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nicooprat/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 1038751338,
          "node_id": "MDU6TGFiZWwxMDM4NzUxMzM4",
          "url": "https://api.github.com/repos/vuejs/vue/labels/transition",
          "name": "transition",
          "color": "4ff2d4",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-06-26T11:27:59Z",
      "updated_at": "2018-08-29T04:38:14Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zq5mw2zk9x](https://codesandbox.io/s/zq5mw2zk9x)\r\n\r\n### Steps to reproduce\r\n1. Open browser console (to trigger the debugger)\r\n2. Click on \"Page 2\"\r\n3. Inspect elements inside `<main`>`\r\n\r\n### What is expected?\r\nThe two children `<sections>` are supposed to have the transitions classes.\r\n\r\n### What is actually happening?\r\nThe two children`<sections>` are already added but without any transition class, which are added on next tick. So the new `<section>` is visible on top on the old one for 1 frame, causing a flickering effect.\r\n\r\n---\r\nRemove this fix in `App.vue`:\r\n\r\n```css\r\nmain > :first-child {\r\n  z-index: 1; /* Prevent flickering on first frame when transition classes not added yet */\r\n}\r\n```\r\n\r\nAnd navigate through the app to see the flicker effect.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8409",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8409/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8409/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8409/events",
      "html_url": "https://github.com/vuejs/vue/issues/8409",
      "id": 335334864,
      "node_id": "MDU6SXNzdWUzMzUzMzQ4NjQ=",
      "number": 8409,
      "title": "Computed Watchers Not Firing",
      "user": {
        "login": "grayfella",
        "id": 4059580,
        "node_id": "MDQ6VXNlcjQwNTk1ODA=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/4059580?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/grayfella",
        "html_url": "https://github.com/grayfella",
        "followers_url": "https://api.github.com/users/grayfella/followers",
        "following_url": "https://api.github.com/users/grayfella/following{/other_user}",
        "gists_url": "https://api.github.com/users/grayfella/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/grayfella/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/grayfella/subscriptions",
        "organizations_url": "https://api.github.com/users/grayfella/orgs",
        "repos_url": "https://api.github.com/users/grayfella/repos",
        "events_url": "https://api.github.com/users/grayfella/events{/privacy}",
        "received_events_url": "https://api.github.com/users/grayfella/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 731090450,
          "node_id": "MDU6TGFiZWw3MzEwOTA0NTA=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/browser%20quirks",
          "name": "browser quirks",
          "color": "d93f0b",
          "default": false
        },
        {
          "id": 953766243,
          "node_id": "MDU6TGFiZWw5NTM3NjYyNDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/help%20wanted",
          "name": "help wanted",
          "color": "008672",
          "default": true
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 10,
      "created_at": "2018-06-25T09:48:55Z",
      "updated_at": "2019-02-21T10:28:00Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/computed.html#Watchers](https://vuejs.org/v2/guide/computed.html#Watchers)\r\n\r\n### Steps to reproduce\r\nUse the demo for entering a question on the Docs page using a Amazon Kindle 7'' or Android Tablet (I used a Lenovo Tab 3 7'' version)\r\nhttps://vuejs.org/v2/guide/computed.html#Watchers\r\n\r\n### What is expected?\r\nWhen typing in the field the value is evaluated after each letter is tapped when using a browser on a tablet, as per the demo instructions. \r\n\r\n### What is actually happening?\r\nNothing is evaluated until the space bar is tapped or a question mark / exclamation mark is selected from the keyboard. \r\n\r\n---\r\nI use this to create a drop down list of options when a user starts typing into a text field using Android tablet specifically Amazon Fire.\r\nThe user starts typing and after letters are entered the list is shown..\r\nAfter updating then the list is only shown if the user taps the space bar or the enter key on the on screen keyboard.\r\nThis works as expected when using a browser on a computer.\r\nI have tested my code on Mac using Safari, Chrome and Firefox and no errors are in the console. \r\nOn Amazon Fire and it works as expected when on version 2.5.13\r\nUpdating my VueJS to version 2.5.16 and this stops working on the tablet and requires the space key, exclamation mark, question mark or enter key to be tapped for the evaluation to fire/run when using the tablet device.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8379",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8379/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8379/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8379/events",
      "html_url": "https://github.com/vuejs/vue/issues/8379",
      "id": 333809692,
      "node_id": "MDU6SXNzdWUzMzM4MDk2OTI=",
      "number": 8379,
      "title": "Dynamic input field type renders invalid code in IE11",
      "user": {
        "login": "nirazul",
        "id": 781476,
        "node_id": "MDQ6VXNlcjc4MTQ3Ng==",
        "avatar_url": "https://avatars3.githubusercontent.com/u/781476?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nirazul",
        "html_url": "https://github.com/nirazul",
        "followers_url": "https://api.github.com/users/nirazul/followers",
        "following_url": "https://api.github.com/users/nirazul/following{/other_user}",
        "gists_url": "https://api.github.com/users/nirazul/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nirazul/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nirazul/subscriptions",
        "organizations_url": "https://api.github.com/users/nirazul/orgs",
        "repos_url": "https://api.github.com/users/nirazul/repos",
        "events_url": "https://api.github.com/users/nirazul/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nirazul/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 3,
      "created_at": "2018-06-19T19:36:16Z",
      "updated_at": "2019-03-05T12:01:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://github.com/nirazul/vue-loader-bug-repro](https://github.com/nirazul/vue-loader-bug-repro)\r\n\r\n### Steps to reproduce\r\n1. `npm install`\r\n2. `npm run build`\r\n3. `npm run watch`\r\n4. Open `./public/index.html`\r\n5. Inspect `main.bundle.js` in dev tools\r\n6. On line 9044 you will find a duplicated key `value`\r\n\r\n### What is expected?\r\nA valid output from vue-template-compiler without duplicated value props, or at least a warning that the usage of dynamic input field types is prohibited in certain cases.\r\n\r\n### What is actually happening?\r\nIn IE11 a blank page is rendered\r\n\r\n---\r\nI'm using a centralized component for both radio and checkbox input fields as the markup is 90% the same.\r\nAs we switched from webpack 3 to webpack 4, we had to also upgrade the vue-loader version from 12 to 13 or 14, which introduced this bug. \r\nPrior to version 13, vue-template-renderer was not enforcing strict mode on all of its rendered templates. This is now the case, introducing this critical bug.\r\n\r\n\r\nReferences:\r\nhttps://vuejs.org/v2/guide/forms.html#Radio-1\r\nhttps://github.com/vuejs/vue/issues/7048\r\nhttps://github.com/vuejs/vue/issues/6917\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8350",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8350/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8350/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8350/events",
      "html_url": "https://github.com/vuejs/vue/issues/8350",
      "id": 331927203,
      "node_id": "MDU6SXNzdWUzMzE5MjcyMDM=",
      "number": 8350,
      "title": "VNode.componentInstance is undefined when rendered by a functional component",
      "user": {
        "login": "KaelWD",
        "id": 16421948,
        "node_id": "MDQ6VXNlcjE2NDIxOTQ4",
        "avatar_url": "https://avatars2.githubusercontent.com/u/16421948?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KaelWD",
        "html_url": "https://github.com/KaelWD",
        "followers_url": "https://api.github.com/users/KaelWD/followers",
        "following_url": "https://api.github.com/users/KaelWD/following{/other_user}",
        "gists_url": "https://api.github.com/users/KaelWD/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KaelWD/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KaelWD/subscriptions",
        "organizations_url": "https://api.github.com/users/KaelWD/orgs",
        "repos_url": "https://api.github.com/users/KaelWD/repos",
        "events_url": "https://api.github.com/users/KaelWD/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KaelWD/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 224019885,
          "node_id": "MDU6TGFiZWwyMjQwMTk4ODU=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/regression",
          "name": "regression",
          "color": "e11d21",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "yyx990803",
        "id": 499550,
        "node_id": "MDQ6VXNlcjQ5OTU1MA==",
        "avatar_url": "https://avatars1.githubusercontent.com/u/499550?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yyx990803",
        "html_url": "https://github.com/yyx990803",
        "followers_url": "https://api.github.com/users/yyx990803/followers",
        "following_url": "https://api.github.com/users/yyx990803/following{/other_user}",
        "gists_url": "https://api.github.com/users/yyx990803/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yyx990803/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yyx990803/subscriptions",
        "organizations_url": "https://api.github.com/users/yyx990803/orgs",
        "repos_url": "https://api.github.com/users/yyx990803/repos",
        "events_url": "https://api.github.com/users/yyx990803/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yyx990803/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "yyx990803",
          "id": 499550,
          "node_id": "MDQ6VXNlcjQ5OTU1MA==",
          "avatar_url": "https://avatars1.githubusercontent.com/u/499550?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/yyx990803",
          "html_url": "https://github.com/yyx990803",
          "followers_url": "https://api.github.com/users/yyx990803/followers",
          "following_url": "https://api.github.com/users/yyx990803/following{/other_user}",
          "gists_url": "https://api.github.com/users/yyx990803/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/yyx990803/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/yyx990803/subscriptions",
          "organizations_url": "https://api.github.com/users/yyx990803/orgs",
          "repos_url": "https://api.github.com/users/yyx990803/repos",
          "events_url": "https://api.github.com/users/yyx990803/events{/privacy}",
          "received_events_url": "https://api.github.com/users/yyx990803/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2018-06-13T10:06:20Z",
      "updated_at": "2018-06-27T12:40:30Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "### Version\r\n2.5.17-beta.0\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/rKwWXq?editors=1010](https://codepen.io/anon/pen/rKwWXq?editors=1010)\r\n\r\n### Steps to reproduce\r\nOpen the console\r\n\r\n### What is expected?\r\nAn instance of `MyComponent` should be logged\r\n\r\n### What is actually happening?\r\n`undefined` is logged\r\n\r\n---\r\nThis worked in 2.5.15\r\nIt also works if you change `RootComponent` to be non-functional:\r\n```js\r\nconst content = h(MyComponent, {}, this.slots.default)\r\n```\r\nI'm guessing this was caused by 62a922e8, `cloneVNode` doesn't include that property. \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8312",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8312/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8312/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8312/events",
      "html_url": "https://github.com/vuejs/vue/pull/8312",
      "id": 329979422,
      "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzMDk5Mjcy",
      "number": 8312,
      "title": "feat(core): add staticClass merge from slot",
      "user": {
        "login": "yozman",
        "id": 11918866,
        "node_id": "MDQ6VXNlcjExOTE4ODY2",
        "avatar_url": "https://avatars1.githubusercontent.com/u/11918866?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yozman",
        "html_url": "https://github.com/yozman",
        "followers_url": "https://api.github.com/users/yozman/followers",
        "following_url": "https://api.github.com/users/yozman/following{/other_user}",
        "gists_url": "https://api.github.com/users/yozman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/yozman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/yozman/subscriptions",
        "organizations_url": "https://api.github.com/users/yozman/orgs",
        "repos_url": "https://api.github.com/users/yozman/repos",
        "events_url": "https://api.github.com/users/yozman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/yozman/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-06-06T18:21:14Z",
      "updated_at": "2018-06-06T18:21:14Z",
      "closed_at": null,
      "author_association": "NONE",
      "pull_request": {
        "url": "https://api.github.com/repos/vuejs/vue/pulls/8312",
        "html_url": "https://github.com/vuejs/vue/pull/8312",
        "diff_url": "https://github.com/vuejs/vue/pull/8312.diff",
        "patch_url": "https://github.com/vuejs/vue/pull/8312.patch"
      },
      "body": "<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8308",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8308/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8308/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8308/events",
      "html_url": "https://github.com/vuejs/vue/issues/8308",
      "id": 329714198,
      "node_id": "MDU6SXNzdWUzMjk3MTQxOTg=",
      "number": 8308,
      "title": "vdom: warn innerHTML not watch when the string have some escaped chars",
      "user": {
        "login": "cxtom",
        "id": 8544960,
        "node_id": "MDQ6VXNlcjg1NDQ5NjA=",
        "avatar_url": "https://avatars2.githubusercontent.com/u/8544960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cxtom",
        "html_url": "https://github.com/cxtom",
        "followers_url": "https://api.github.com/users/cxtom/followers",
        "following_url": "https://api.github.com/users/cxtom/following{/other_user}",
        "gists_url": "https://api.github.com/users/cxtom/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cxtom/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cxtom/subscriptions",
        "organizations_url": "https://api.github.com/users/cxtom/orgs",
        "repos_url": "https://api.github.com/users/cxtom/repos",
        "events_url": "https://api.github.com/users/cxtom/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cxtom/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 316936443,
          "node_id": "MDU6TGFiZWwzMTY5MzY0NDM=",
          "url": "https://api.github.com/repos/vuejs/vue/labels/improvement",
          "name": "improvement",
          "color": "c7def8",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 0,
      "created_at": "2018-06-06T05:20:26Z",
      "updated_at": "2018-06-06T08:55:35Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/cxtom/pen/XYKgde](https://codepen.io/cxtom/pen/XYKgde)\r\n\r\n### Steps to reproduce\r\n1. using v-html and the string has \\&quot; \\&#39;\r\n2. ssr\r\n3. warn not match during hybrating in browser\r\n\r\n### What is expected?\r\nnot warn The client-side rendered virtual DOM tree is not matching server-rendered content\r\n\r\n### What is actually happening?\r\nwarn The client-side rendered virtual DOM tree is not matching server-rendered content.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    },
    {
      "url": "https://api.github.com/repos/vuejs/vue/issues/8302",
      "repository_url": "https://api.github.com/repos/vuejs/vue",
      "labels_url": "https://api.github.com/repos/vuejs/vue/issues/8302/labels{/name}",
      "comments_url": "https://api.github.com/repos/vuejs/vue/issues/8302/comments",
      "events_url": "https://api.github.com/repos/vuejs/vue/issues/8302/events",
      "html_url": "https://github.com/vuejs/vue/issues/8302",
      "id": 329462718,
      "node_id": "MDU6SXNzdWUzMjk0NjI3MTg=",
      "number": 8302,
      "title": "Inconsistent behavior when using deep objects in vuex with SSR",
      "user": {
        "login": "Sopamo",
        "id": 1202596,
        "node_id": "MDQ6VXNlcjEyMDI1OTY=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/1202596?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sopamo",
        "html_url": "https://github.com/Sopamo",
        "followers_url": "https://api.github.com/users/Sopamo/followers",
        "following_url": "https://api.github.com/users/Sopamo/following{/other_user}",
        "gists_url": "https://api.github.com/users/Sopamo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Sopamo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Sopamo/subscriptions",
        "organizations_url": "https://api.github.com/users/Sopamo/orgs",
        "repos_url": "https://api.github.com/users/Sopamo/repos",
        "events_url": "https://api.github.com/users/Sopamo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Sopamo/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
  
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [
  
      ],
      "milestone": null,
      "comments": 1,
      "created_at": "2018-06-05T13:43:16Z",
      "updated_at": "2018-06-05T16:53:32Z",
      "closed_at": null,
      "author_association": "NONE",
      "body": "### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/Sopamo/vue-ssr-deep-state-bug-reproduction](https://github.com/Sopamo/vue-ssr-deep-state-bug-reproduction)\r\n\r\n### Steps to reproduce\r\n - Install all node modules\r\n - Run `npm run dev`\r\n - Open localhost:8080\r\n - Reload the page while being on page A\r\n\r\n### What is expected?\r\nThe class of both divs should reflect the value of their variables\r\n\r\n### What is actually happening?\r\nThe classes of both elements are wrong (they have the class \"true\" despite them having changed to \"false\"). The issue is gone when you navigate between page B and page A. The issue only occurs when you are reloading the browser on page A.\r\n\r\n---\r\nThe inital state is that both variables are true. They are both being set to false in the entry-client.js file with the `store.replaceState` method.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"
    }
  ]
  